<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Philippe Bourgau's blog]]></title>
  <link href="http://philippe.bourgau.net/atom.xml" rel="self"/>
  <link href="http://philippe.bourgau.net/"/>
  <updated>2016-02-22T21:53:16+00:00</updated>
  <id>http://philippe.bourgau.net/</id>
  <author>
    <name><![CDATA[Philippe Bourgau]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Recipes For An Agile Workspace]]></title>
    <link href="http://philippe.bourgau.net/recipes-for-an-agile-workspace/"/>
    <updated>2016-02-17T06:40:00+00:00</updated>
    <id>http://philippe.bourgau.net/recipes-for-an-agile-workspace</id>
    <category term="agile" /><category term="lean" /><category term="self-organization" /><category term="team-building" /><category term="workplace" />
    <content type="html"><![CDATA[<p>Nowadays, start-ups and tech companies seem to be competing for the most beautiful offices in order to attract top talents.</p>

<p><img class="center" src="http://philippe.bourgau.net/imgs/2016-02-17-recipes-for-an-agile-workspace/open-space.jpg" title="A nice modern and beautiful co-working space" ></p>

<p>Unfortunately, sometimes, it&rsquo;s just the good old office in disguise. At the opposite, some teams or companies actually think and decide how to organize their offices. For example, here is what <a href="https://twitter.com/kentbeck">Kent Beck</a> says about office setup in <a href="http://www.amazon.com/Extreme-Programming-Explained-Embrace-Change/dp/0201616416/ref=sr_1_2?ie=UTF8&amp;qid=1456177035&amp;sr=8-2&amp;keywords=extreme+programming+embrace+change">XP embrace change</a></p>

<blockquote><p>If you don&rsquo;t have a reasonable place to work, your project won&rsquo;t be successful. The difference
between a good space for the team and a bad space for the team is immediate and dramatic.</p></blockquote>

<p>Joel Spolsky has been blogging a lot about the office setups at <a href="http://www.joelonsoftware.com/articles/BionicOffice.html">FogBugz</a></p>

<p><a href="http://www.joelonsoftware.com/articles/BionicOffice.html"><img class="center" src="http://philippe.bourgau.net/imgs/2016-02-17-recipes-for-an-agile-workspace/fog-bugz.jpg" title="The beautiful FogBugz office" ></a></p>

<p>While defining its agile culture, <a href="http://fr.slideshare.net/JoakimSunden/agile-at-spotify">Spotify too designed custom offices</a></p>

<p><a href="http://fr.slideshare.net/JoakimSunden/agile-at-spotify"><img class="center" src="http://philippe.bourgau.net/imgs/2016-02-17-recipes-for-an-agile-workspace/spotify.jpg" title="Spotify offices" ></a></p>

<h2>How does it work ?</h2>

<p>Let&rsquo;s review a few office design practices to understand how they work :</p>

<h3>The team room or space</h3>

<p>Having a delimited room helps to build a real team. First, by isolating from noises, it helps the team to focus on its work and current topics. Second, by providing a visual barrier to cross before anyone can disturb the team. Finally, it allows the team to organize its own visual management.</p>

<p><img class="center" src="http://philippe.bourgau.net/imgs/2016-02-17-recipes-for-an-agile-workspace/spotify-team-room.jpg" title="Team private work place at spotify" ></p>

<h3>Private team gathering area</h3>

<p>An area where the team (and only the team) can meet at any time is great to do on the spot meetings (without the hassle of finding a room). This area should be comfortable and provide a relaxed and creative atmosphere (which is very important to conduct efficient retrospectives). It can also be used to take breaks and lunches, fostering team spirit again.</p>

<p><img class="center" src="http://philippe.bourgau.net/imgs/2016-02-17-recipes-for-an-agile-workspace/spotify-gathering-area.jpg" title="Team gathering area with writable walls and a wall screen at spotify" ></p>

<h3>Writable walls</h3>

<p>It&rsquo;s pretty easy to cover the walls with whiteboard stickers so that there is plenty of room for discussing design and otherwise keeping important things visible for everyone.</p>

<h3>Laptops, Wifi and movable desks</h3>

<p>Lean manufacturing favors simple, versatile and configurable machines over powerful specialised ones, which are often pretty long to setup. In software, we don&rsquo;t rely on machines as much as factories do, but there might be something to take here. Using laptops, a good Wifi and movable desks, it is pretty easy to reconfigure your office as it best fits the team at a particular moment. This way a team can easily adapt to personal preferences and turnover.</p>

<h3>Wall screens</h3>

<p>Agile and Lean thinkings both heavily use visual management. Having a lot of wall screens dedicated to displaying team relevant information in the team space brings a lot of value. To get the maximum benefit, these wall screens should be fully configurable and movable by the team.</p>

<p><img class="center" src="http://philippe.bourgau.net/imgs/2016-02-17-recipes-for-an-agile-workspace/wall-screens.jpg" title="Our own wall screens at work" ></p>

<h3>Team budget</h3>

<p>Eventually, in order to make sure the team can always work as efficiently as possible, it should have some money to spend for its workspace. It could be used to buy any of the upper, but also anything else that might help the team at a particular point in time. Without such a budget, teams have to make a request to the office department to get anything, often to no avail, or with extra long delays.</p>

<h2>Distributed teams</h2>

<p>Distributed teams bring their own challenges &hellip; and workplaces needs.</p>

<h3>Remote team space</h3>

<p>If your team is split between 2 places (as our team is at <a href="http://www.murex.com">Murex</a>) then obviously, each site should have its own delimited space, with its own gathering area.</p>

<h3>Constant visio connection</h3>

<p>Connecting gathering areas through visio is a great way to build the distributed team. It prevents loosing time when a meeting is required. It also builds the team by showing what&rsquo;s happening on the other side and by making it possible to take distributed lunches and breaks !</p>

<p><a href="http://www.infoq.com/presentations/distributed-team-agile"><img class="center" src="http://philippe.bourgau.net/imgs/2016-02-17-recipes-for-an-agile-workspace/distributed-lunch.jpg" title="A team sharing food remotely between offices" ></a></p>

<h3>Distributed whiteboards</h3>

<p>I never had the chance to work with one of these, but I often missed a whiteboard when working remotely &hellip; Any input on this subject would be welcome !</p>

<h2>Lego offices</h2>

<p>Here is another extract from Kent Beck&rsquo;s &ldquo;XP Embrace Change&rdquo;</p>

<blockquote><p>The courage value finds its expression in the XP attitude toward facilities. If the corporate attitude
toward facilities is at odds with the team&rsquo;s attitude, the team wins. If the computers are in the
wrong place, they are moved. If the partitions are in the way, they are taken down. If the lights are
too bright, they are taken out. If the phones are too loud, one day, mysteriously, they are all found
to have cotton stuffed in the bells.</p></blockquote>

<p>Improving the office is a cheap way to make a software organization more efficient. For another reference, here is what Tom DeMarco &amp; Tim Lister wrote in <a href="http://www.amazon.com/gp/product/0321934113/ref=s9_simh_gw_g14_i3_r?pf_rd_m=ATVPDKIKX0DER&amp;pf_rd_s=desktop-1&amp;pf_rd_r=1K2KEWBRQK6F1R26D5D2&amp;pf_rd_t=36701&amp;pf_rd_p=2079475242&amp;pf_rd_i=desktop">Peopleware</a></p>

<blockquote><p>Police-mentality planners design workplaces the way they would design prisons: optimized for containment at minimal cost. We have unthinkingly yielded to them on the subject of workplace
design, yet for most organizations with productivity problems, there is no more fruitful area for improvement than the workplace. As long as workers are crowded into noisy, sterile, disruptive space, it&rsquo;s not worth improving anything but the <strong>workplace</strong>.</p></blockquote>

<p>Instead of designing offices, furniture departments in companies could provide a constant stock of building blocks for office building. Teams could use a workplace budget to build the workspace that suits them most. A good Wifi, laptops, enough floor power plugs, extra screens, movable tables and light easy to fix wall monitors are all things that would make this possible.</p>

<p><img class="center" src="http://philippe.bourgau.net/imgs/2016-02-17-recipes-for-an-agile-workspace/lego-office.jpg" title="A miniature office in Legos" ></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How I fixed 'invalid byte sequence in US-ASCII' exception with octopress (and vagrant)]]></title>
    <link href="http://philippe.bourgau.net/how-i-fixed-invalid-byte-sequence-in-us-ascii-exception-with-octopress-and-vagrant/"/>
    <updated>2016-02-10T05:59:00+00:00</updated>
    <id>http://philippe.bourgau.net/how-i-fixed-invalid-byte-sequence-in-us-ascii-exception-with-octopress-and-vagrant</id>
    <category term="octopress" /><category term="vagrant" />
    <content type="html"><![CDATA[<p>I don&rsquo;t know if you noticed, but <a href="http://octopress.org/">Octopress 2</a> preview is slow as hell on <a href="https://www.virtualbox.org/">Virtual Box</a>. I wanted to try using <a href="https://www.docker.com/">Docker</a> instead. So a few weeks ago, I started to upgrade my <a href="https://www.vagrantup.com/">Vagrant</a>, Virtual Box and Docker stack &hellip;</p>

<p>Hell loose !</p>

<p><img class="center" src="http://philippe.bourgau.net/imgs/2016-02-10-how-i-fixed-invalid-byte-sequence-in-us-ascii-exception-with-octopress-and-vagrant/upgrade_hell.jpg" title="A naughty dog with a banner &#34;I'm in upgrade hell&#34;" alt="A naughty dog with a banner &#34;I'm in upgrade hell&#34;"></p>

<p>I know all open source software needs to be kept up to date at all time, but it&rsquo;s not that easy. Especialy when the versions in the <a href="http://www.ubuntu.com/">Ubuntu</a> repostiories are really old and you had to install them manually. Anyway, after a bit of tedious work, I finally got to the point where my Octopress blog was running on a brand new stack. And I got this error :</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>vagrant@239c4077ae16:/vagrant$bundle exec rake generate
</span><span class='line'>## Generating Site with Jekyll
</span><span class='line'>unchanged sass/screen.scss
</span><span class='line'>/vagrant/vendor/bundle/gems/liquid-2.3.0/lib/liquid/htmltags.rb:44: warning: duplicated key at line 47 ignored: "index0"
</span><span class='line'>Configuration from /vagrant/_config.yml
</span><span class='line'>Building site: source -&gt; public
</span><span class='line'>YAML Exception reading index.markdown: invalid byte sequence in US-ASCII
</span><span class='line'>/vagrant/plugins/backtick_code_block.rb:13:in `gsub': invalid byte sequence in US-ASCII (ArgumentError)
</span><span class='line'>  from /vagrant/plugins/backtick_code_block.rb:13:in `render_code_block'
</span><span class='line'>  from /vagrant/plugins/octopress_filters.rb:12:in `pre_filter'
</span><span class='line'>  from /vagrant/plugins/octopress_filters.rb:28:in `pre_render'
</span><span class='line'>  from /vagrant/plugins/post_filters.rb:112:in `block in pre_render'
</span><span class='line'>  from /vagrant/plugins/post_filters.rb:111:in `each'
</span><span class='line'>  from /vagrant/plugins/post_filters.rb:111:in `pre_render'
</span><span class='line'>  from /vagrant/plugins/post_filters.rb:166:in `do_layout'
</span><span class='line'>  from /vagrant/vendor/bundle/gems/jekyll-0.12.1/lib/jekyll/page.rb:100:in `render'
</span><span class='line'>  from /vagrant/vendor/bundle/gems/jekyll-0.12.1/lib/jekyll/site.rb:204:in `block in render'
</span><span class='line'>  from /vagrant/vendor/bundle/gems/jekyll-0.12.1/lib/jekyll/site.rb:203:in `each'
</span><span class='line'>  from /vagrant/vendor/bundle/gems/jekyll-0.12.1/lib/jekyll/site.rb:203:in `render'
</span><span class='line'>  from /vagrant/vendor/bundle/gems/jekyll-0.12.1/lib/jekyll/site.rb:41:in `process'
</span><span class='line'>  from /vagrant/vendor/bundle/gems/jekyll-0.12.1/bin/jekyll:264:in `&lt;top (required)&gt;'
</span><span class='line'>  from /vagrant/vendor/bundle/bin/jekyll:23:in `load'
</span><span class='line'>  from /vagrant/vendor/bundle/bin/jekyll:23:in `&lt;main&gt;'</span></code></pre></td></tr></table></div></figure>


<p>After some searching on the internet, I found <a href="http://alexzeitler.com/blog/2012/01/15/rake-generate-for-octopress-fails-with-invalid-byte-sequence-in-us-ascii-argumenterror/">this post</a> by Alex Zeitler that made me figure out that locales were not set correctly by default on my vm. I just needed to set this once and for all in my Vagrantfile</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>config.vm.provision "shell", privileged: false, inline: &lt;&lt;-SHELL
</span><span class='line'>  if [ -z "$LANG" ]; then
</span><span class='line'>    echo "Setting LANG to us UTF8"
</span><span class='line'>    echo 'export LANG=en_US.UTF-8' &gt;&gt; ~/.bashrc
</span><span class='line'>  fi
</span><span class='line'>  if [ -z "$LC_ALL" ]; then
</span><span class='line'>    echo "Setting LC_ALL to us UTF8"
</span><span class='line'>    echo 'export LC_ALL=en_US.UTF-8' &gt;&gt; ~/.bashrc
</span><span class='line'>  fi
</span><span class='line'>SHELL</span></code></pre></td></tr></table></div></figure>


<p>After reprovisioning my box, generate and preview were working as expected !</p>

<p>:&ndash;( Now I&rsquo;ve got a pygement-ruby issue to deal with, I guess I&rsquo;ll be back on the subject soon &hellip;</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How To Keep Programming When Assigned A Management Job]]></title>
    <link href="http://philippe.bourgau.net/how-to-keep-programming-when-assigned-a-management-job/"/>
    <updated>2016-02-03T08:45:00+00:00</updated>
    <id>http://philippe.bourgau.net/how-to-keep-programming-when-assigned-a-management-job</id>
    <category term="agile" /><category term="management" /><category term="management30" /><category term="self-organization" />
    <content type="html"><![CDATA[<p>Remaining a competent developer is a career long effort, if you stop programming, you&rsquo;ll loose it ! As time goes, we are regularly <del>offered</del> pushed into management positions, sometimes by cluelessness, other times by cheer necessity ! Be it temporary or long term, here are some techniques to remain a relevant developer.</p>

<h2>How Joe became a manager</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>def work
</span><span class='line'>  if manager?
</span><span class='line'>    go_to_meetings
</span><span class='line'>  else
</span><span class='line'>    program
</span><span class='line'>  end
</span><span class='line'>end</span></code></pre></td></tr></table></div></figure>


<p>Imagine you&rsquo;re Joe, an expert developer in a small software company. Everything is going fine, he&rsquo;s working on interesting subjects with 4 other, rather junior, team mates. Management is OK, at least good enough not to cause too many troubles.</p>

<p>Suddenly, the team manager leaves for a better position in another company. Unprepared for this, the small organization has difficulties to find a suitable replacement, and, you&rsquo;ll guess it, Joe is asked to take on management responsibilities until someone gets hired. How is Joe going to continue to do a good job at both programming and management ?</p>

<h2>His first reaction</h2>

<p>Two weeks into the job, Joe takes a step back and summarizes :</p>

<ul>
<li>he feels depressed when he does not program for a long time</li>
<li>he has the feeling he&rsquo;s been jumping from A to B to C to Z to A, and so on for two weeks without actually getting a lot done</li>
<li>he feels everyone is waiting for him to do things before they move</li>
<li>his mailbox is starting to make him nervous</li>
<li>it&rsquo;s difficult to program anything if you are interrupted by meetings throughout the day</li>
</ul>


<p>Joe figures out that he needs to reduce his management work if he wants to get back to programming.  After setting up an efficient <a href="bye-bye-programmers-todo-list-hello-personnal-kanban-on-jira/">TODO list</a>. He has already read some personnal effectiveness books, so he knows how one can reduce his amount of work :</p>

<ul>
<li>say no : he&rsquo;ll have to keep this in mind all the time, especially when accepting meetings or when asked for some new work</li>
<li>automate : some tasks can be automated, others can be partly automated by a good process. He&rsquo;ll have to regularly stop and think to improve how he works</li>
<li>delegate : he&rsquo;d like to push more work to the team, but it will take some time. He decides to read things on self-organized team to know how to do</li>
</ul>


<h2>Joe&rsquo;s measure of programming time</h2>

<p>In order to get some continuous time for programming, Joe books &lsquo;programming days&rsquo; in his calendar. This is also a way to say no to other meetings during this period. He starts with all Mondays, he hopes he&rsquo;ll be able to book others days as he manages to do more programming. His ideal would be to book all week for programming (while still having the management job get done !)</p>

<p>This works well, and gives Joe a motivation boost since he has the opportunity to program again :&ndash;). There are still a few glitches though :</p>

<ul>
<li>Joe often doesn&rsquo;t program &lsquo;on his own&rsquo; on Mondays because he is spending is time with junior programmers who are really appreciating his help</li>
<li>Joe once made the mistake of committing to a critical programming task that he did not manage to finish in 1 day and had to hand it over to another developer, losing more time</li>
</ul>


<p>Joe is realizing that he is more of a programming coach than a direct developer now, and that he should not commit on critical tasks but rather help others to do so. Pair programming is becoming the norm for him.</p>

<h2>Communication time</h2>

<p>While doing his full programming days, Joe realized that emails can wait. If people want an immediate answer, let them use the phone ! He now reads and answers his emails in the morning when he arrives at work, at noon just after lunch and on evenings, just before leaving. That&rsquo;s good enough for a day !</p>

<p>Joe also had to interrupt his programming day once for an urgent meeting &hellip; he now reserves 1 hour at the end of his programming days to handle such urgent meetings without interrupting his programming time.</p>

<h2>Self organized teams</h2>

<p>Meanwhile, Joe read some books about self organized teams, such as <a href="http://www.amazon.com/Workout-Practices-Improve-Delight-Clients/dp/9492032023/ref=sr_1_1?ie=UTF8&amp;qid=1454480226&amp;sr=8-1&amp;keywords=management+3.0+workout">Management 3.0 Workout</a> by Jurgen Appelo.</p>

<p><a href="https://management30.com/product/workouts/"><img class="center" src="http://philippe.bourgau.net/imgs/2016-02-03-how-to-keep-programming-when-assigned-a-management-job/management-workout.jpg" title="Management 3.0 Workout Book Cover" ></a></p>

<p>Self organization is some kind of aggressive delegation. Joe sees management as described in these books as a way to increase purpose and motivation throughout the team, while getting him more time for programming.</p>

<p>This kind of management perfectly suits agile teams. His team is already using some agile practices, such as automated testing, some kind of continuous integration, and quite a few others, to varying degrees. Joe decides to embark his team on a road to self organization, and to start by applying all the standard Scrum and eXtreme Programming practices. In parallel, he introduces the rolling Scrum Master role, where sprint after sprint, a different team member is responsible for :</p>

<ul>
<li>organizing the recurring team meetings</li>
<li>representing the team in outside meetings</li>
<li>grooming the backlog before the demo and planning</li>
</ul>


<p>This alone frees Joe 1 or 2 days of programming every week. He now helps his team mates to master all the technical agile practices they are not used to.</p>

<h2>More self organization</h2>

<p>A few months later, the team is doing well, Joe has some time for programming, but he still has some pure management job to do. From what he read from self organized teams, even these subjects can be delegated ! He decides to start workshops with the team :</p>

<ul>
<li>How can we handle vacations in a self organized way ?</li>
<li>How can we handle the hiring in a self organized way ?</li>
<li>How can we handle performance feedback and pay raises in a self organized way ?</li>
</ul>


<p>The journey is long and rough : one team member left as they were going seriously into agile. Nevertheless the team is already more motivated than it ever was, and delivers more value than it ever did.</p>

<h2>The end result for Joe</h2>

<p>Joe is now programming nearly as much as his team mates ! Most of his programming time is coaching time though. He does not sit and hack his way into a feature as he used to do. He&rsquo;s missing that a bit, he&rsquo;s also missing learning new technologies.</p>

<p>That&rsquo;s why he started working on <a href="http://philippe.bourgau.net/my-own-side-project-best-practices-after-reading-the-side-project-book">side projects</a> at home, using the latest hype JavaScript framework. He&rsquo;s reading generalist programming books also, such as the <a href="http://www.amazon.com/s/ref=nb_sb_noss_2?url=search-alias%3Daps&amp;field-keywords=%22in+seven+weeks%22&amp;rh=i%3Aaps%2Ck%3A%22in+seven+weeks%22">7 XXX in 7 weeks</a> series which allow him to learn without loosing time on technical quirks he&rsquo;s not interested in at the moment &hellip;</p>

<p><a href="http://www.amazon.com/Seven-Languages-Weeks-Programming-Programmers/dp/193435659X/ref=sr_1_1?ie=UTF8&amp;qid=1454739459&amp;sr=8-1&amp;keywords=7+languages+in+7+weeks"><img class="center" src="http://philippe.bourgau.net/imgs/2016-02-03-how-to-keep-programming-when-assigned-a-management-job/7-languages.jpg" title="Seven Languages In Seven Weeks Book Cover" ></a></p>

<p>Good luck Joe !</p>
]]></content>
  </entry>
  
</feed>
