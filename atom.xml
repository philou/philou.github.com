<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Philippe Bourgau's blog]]></title>
  <link href="http://philippe.bourgau.net/atom.xml" rel="self"/>
  <link href="http://philippe.bourgau.net/"/>
  <updated>2016-05-24T04:31:05+00:00</updated>
  <id>http://philippe.bourgau.net/</id>
  <author>
    <name><![CDATA[Philippe Bourgau]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Software is like writing and revising a giant book]]></title>
    <link href="http://philippe.bourgau.net/software-is-like-writing-and-revising-a-giant-book/"/>
    <updated>2016-05-23T03:52:00+00:00</updated>
    <id>http://philippe.bourgau.net/software-is-like-writing-and-revising-a-giant-book</id>
    <category term="complexity" /><category term="software" />
    <content type="html"><![CDATA[<p>With time, I discovered a way of explaining the subtleties of my developer job to my uninformed relatives and friends.</p>

<p>Sharing what your developer job is about with others can be very frustrating. Some people think you are &ldquo;Just playing around with computers&rdquo; as if it was not serious work. Others think that it is an extremely Cartesian and solitary activity with no place for communication or creativity. Trying to explain the diversity and richness of a developer&rsquo;s work is often a disappointing experience.</p>

<h2>The book metaphor</h2>

<p><img class="center" src="http://philippe.bourgau.net/imgs/2016-05-23-software-is-like-writing-and-revising-a-giant-book/book.jpg" title="An old book" ></p>

<p>I explain to people that writing software is not unlike writing a huge book. A book long many millions of lines. I explain that the challenge is to maintain the whole story of the book coherent. I stress how difficult this is given that no one can take the time to read the full book, that the authors come and go, and that the book is under constant heavy revision.</p>

<h2>Details of our work</h2>

<p>The metaphor is quite valid and even holds about more subtle aspects of our work. Here is a summary of the last discussion I had about the book metaphor :</p>

<blockquote><ul>
<li>(Him) Do you have some &lsquo;gatekeepers&rsquo; for different sections of the story to make sure that these parts remain coherent ?</li>
<li>(Me) That&rsquo;s what we would call strong code ownership, this was the norm 20 years ago, but that the industry is moving to more collective code ownership, in order to decrease the bus factor.</li>
<li>(Him) What is the bus factor ?</li>
<li>(Me) The number of person who need to be hit by a bus to block your development progress</li>
<li>(Him) I see, that&rsquo;s kind of funny. But then, does that mean that any developer can change any part of the code ? Isn&rsquo;t that dangerous ?</li>
<li>(Me) Sure that would be difficult, that&rsquo;s not really how we do it. We make a lot of efforts to split the big story in many smaller independent ones as much as possible. This way, teams specialize on different &lsquo;chapters&rsquo; and work collectively within it.</li>
<li>(Him) I see</li>
<li>(Me) And if you need to change something in another &lsquo;chapter&rsquo; you should ask the guys who know it better to help you.</li>
<li>(Him) That makes sense. And what happens if two developers want to modify the same part of the story at the same time</li>
<li>(Me) That can happen. People might even want to modify the story in conflicting ways ! We&rsquo;ve got tools, processes and best practices to minimize this. If nothing is done, we&rsquo;ll get what we call a &lsquo;merge conflict&rsquo;.</li>
<li>(Him) Ho &hellip; I wouldn&rsquo;t have guessed, but it seems collaboration is really important in your work, isn&rsquo;t it ?</li>
<li>(Me) Sure it is !</li>
</ul>
</blockquote>

<h2>We are software writers</h2>

<p>All this reminds me of DHH&rsquo;s talk about writing software :</p>

<iframe class="center" width="560" height="315" src="https://www.youtube.com/embed/9LfmrkyP81M" frameborder="0" allowfullscreen></iframe>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How I fixed the unknown language Pygments error in Octopress]]></title>
    <link href="http://philippe.bourgau.net/how-i-fixed-the-unknown-language-pygments-error-in-octopress/"/>
    <updated>2016-05-13T03:54:00+00:00</updated>
    <id>http://philippe.bourgau.net/how-i-fixed-the-unknown-language-pygments-error-in-octopress</id>
    <category term="blogging" /><category term="octopress" /><category term="software" />
    <content type="html"><![CDATA[<p>Last time I tried to insert a code snippet in my <a href="http://octopress.org/">Octopress</a> blog, I was hurt by the following error :</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>vagrant@ae4a04cebb73:/vagrant$ bundle exec rake generate
</span><span class='line'>## Generating Site with Jekyll
</span><span class='line'>unchanged sass/screen.scss
</span><span class='line'>Configuration from /vagrant/_config.yml
</span><span class='line'>Building site: source -&gt; public
</span><span class='line'>/vagrant/plugins/pygments_code.rb:27:in `rescue in pygments': Pygments can't parse unknown language: ruby. (RuntimeError)
</span><span class='line'>  from /vagrant/plugins/pygments_code.rb:24:in `pygments'
</span><span class='line'>  from /vagrant/plugins/pygments_code.rb:14:in `highlight'
</span><span class='line'>  from /vagrant/plugins/backtick_code_block.rb:37:in `block in render_code_block'
</span><span class='line'>  from /vagrant/plugins/backtick_code_block.rb:13:in `gsub'
</span><span class='line'>  from /vagrant/plugins/backtick_code_block.rb:13:in `render_code_block'
</span><span class='line'>  from /vagrant/plugins/octopress_filters.rb:12:in `pre_filter'
</span><span class='line'>  from /vagrant/plugins/octopress_filters.rb:28:in `pre_render'
</span><span class='line'>  from /vagrant/plugins/post_filters.rb:112:in `block in pre_render'
</span><span class='line'>  from /vagrant/plugins/post_filters.rb:111:in `each'
</span><span class='line'>  from /vagrant/plugins/post_filters.rb:111:in `pre_render'
</span><span class='line'>  from /vagrant/plugins/post_filters.rb:166:in `do_layout'
</span><span class='line'>  from /vagrant/vendor/bundle/gems/jekyll-0.12.1/lib/jekyll/post.rb:195:in `render'
</span><span class='line'>  from /vagrant/vendor/bundle/gems/jekyll-0.12.1/lib/jekyll/site.rb:200:in `block in render'
</span><span class='line'>  from /vagrant/vendor/bundle/gems/jekyll-0.12.1/lib/jekyll/site.rb:199:in `each'
</span><span class='line'>  from /vagrant/vendor/bundle/gems/jekyll-0.12.1/lib/jekyll/site.rb:199:in `render'
</span><span class='line'>  from /vagrant/vendor/bundle/gems/jekyll-0.12.1/lib/jekyll/site.rb:41:in `process'
</span><span class='line'>  from /vagrant/vendor/bundle/gems/jekyll-0.12.1/bin/jekyll:264:in `&lt;top (required)&gt;'
</span><span class='line'>  from /vagrant/vendor/bundle/bin/jekyll:22:in `load'
</span><span class='line'>  from /vagrant/vendor/bundle/bin/jekyll:22:in `&lt;main&gt;'
</span></code></pre></td></tr></table></div></figure>


<p>I had been switching to <a href="https://www.docker.com/">Docker</a> in <a href="https://www.vagrantup.com/">Vagrant</a> to host my Octopress installation, but that did not seem related &hellip;</p>

<h2>Plan A : Upgrade Octopress</h2>

<p>It turned out it was related to my migration to Vagrant and Docker.xs This kind of nasty error often comes from obsolete environment. <a href="https://github.com/imathis/octopress/issues/1173">Internet confirmed</a> confirmed it :</p>

<ul>
<li>Ubuntu now uses Python3 instead of Python2</li>
<li>Octopress2 uses an old version of Pygments</li>
<li>That version of Pygments requires Python2</li>
</ul>


<p>I thought that I did not want to play <a href="http://philippe.bourgau.net/ruby-thirdparties-best-practices/">this game</a> against open source libs, so I set out to update. Octopress 3 has been released. It&rsquo;s not yet documented yet, and there is no official upgrade guide, but some guys have done it :</p>

<ul>
<li><a href="http://samwize.com/2015/09/30/migrating-octopress-2-to-octopress-3/">http://samwize.com/2015/09/30/migrating-octopress-2-to-octopress-3/</a></li>
<li><a href="http://dgmstuart.github.io/blog/2016/01/22/migrating-from-octopress-2-to-3/">http://dgmstuart.github.io/blog/2016/01/22/migrating-from-octopress-2-to-3/</a></li>
<li><a href="https://www.justinrummel.com/migrating-from-octopress-2-to-octopress-3/">https://www.justinrummel.com/migrating-from-octopress-2-to-octopress-3/</a></li>
</ul>


<p>I tried it &hellip; but I stopped before the end. It&rsquo;s kind of working, but fundamental features like category archives required too much Jekylling for me at the time. And themes are still an issue &hellip; I mean, stock theme uses a clean and simple gem based update workflow, but most other themes rely on a tricky git clone-merge update workflow.</p>

<h2>Plan B : Find a hosted blog engine for hackers</h2>

<p>I found quite a few options :</p>

<ul>
<li><a href="http://medium.com">Medium</a> Looks cool, but there is no simple migration tool, and I&rsquo;ve been burned by postero.us shutting down, I want to keep control on my content</li>
<li><a href="https://posthaven.com/">Posthaven</a> Having loved postero.us, this one seems cool, It&rsquo;s just I&rsquo;m not sure the guys are keeping the motivation to increase their feature list with their current business model</li>
<li><a href="http://ghost.org">Ghost</a> Looked great, but too expensive for me (19$ per month)</li>
<li><a href="http://codrspace.com">Codrspace</a> This is a special blogging platform for coders, but it seems it has not been updated for a long time</li>
<li><a href="https://logdown.com/">LogDown</a> This also is a special blogging platform for hackers. It seemed great and had everything I was looking for &hellip; I was ready to spend the 50$ per year for it as it could save me a lot of hassle. Unfortunately, I could not find a way to forward the categories of a post as <a href="https://twitter.com/pbourgau">Twitter</a> hashtags as I&rsquo;ve been doing with Octopress and <a href="https://feedburner.google.com">Feedburner</a></li>
</ul>


<p>In the end, I was rather disappointed by the alternatives, even though I was ready to pay for them.</p>

<h2>Plan C : Fix the error in Octopress 2</h2>

<p>Eventually, the fix was rather easy. People had fixed it by patching mentos.py file in the pygments.rb gem to run Python 2 instead of the stock Python. That&rsquo;s not great because it means that I&rsquo;d have to redo the patch every time I updated my gems, or rebuilt my workspace. Here is what I added to my Vagrantfile instead :</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sudo apt-get -y install python2.7
</span><span class='line'>sudo ln -sf /usr/bin/python2.7 /usr/bin/python</span></code></pre></td></tr></table></div></figure>


<p><a href="https://github.com/philou/philou.github.com/commit/ae14c511b682295ed7fdcb3b1a818926f803dd3a">Here</a> is the commit on my Github repo.</p>

<h2>Conclusion</h2>

<p>I&rsquo;m sticking with Octopress2 for the moment. Maybe I&rsquo;ll re-try to migrate to Octopress3 later on, when an official migration tool or <a href="http://octopress.org/2015/01/15/octopress-3.0-is-coming/">guide</a> is available. Meanwhile, I&rsquo;m still dreaming of my perfect blogging platform :</p>

<ul>
<li>Open source</li>
<li>Static HTML generation</li>
<li>Self or SAAS hosted</li>
<li>Great integration with social media and the web</li>
<li>Easy to maintain</li>
<li>Plugable themes</li>
</ul>


<p>I&rsquo;m looking for my next side project at the moment, that could be a useful one ! Anyone interested ?</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Real Developers Ship]]></title>
    <link href="http://philippe.bourgau.net/real-developers-ship/"/>
    <updated>2016-05-11T04:33:00+00:00</updated>
    <id>http://philippe.bourgau.net/real-developers-ship</id>
    <category term="agile" /><category term="software" />
    <content type="html"><![CDATA[<p>If you are a developer and you are not shipping, you&rsquo;re in the danger zone. I believe it&rsquo;s mostly your fault, and it&rsquo;s time to act.</p>

<p><img class="center" src="http://philippe.bourgau.net/imgs/2016-05-11-real-developers-ship/deliver.jpg" title="A delivery key on a keyboard" ></p>

<h2>Nothing new</h2>

<p>It&rsquo;s been told before. Famous blogs have said the same thing :</p>

<ul>
<li>In Hacker News <a href="https://news.ycombinator.com/item?id=290121">Real Programmers ship</a> without any explanation, as if it meant it all.</li>
<li>In Coding Horror <a href="http://blog.codinghorror.com/version-1-sucks-but-ship-it-anyway/">Version 1 Sucks, But Ship It Anyway</a> Jeff Atwood stresses the benefits of shipping early.</li>
<li>In Coding Horror again <a href="http://blog.codinghorror.com/shipping-isnt-enough/">Shipping Is Not Enough</a> Jeff Atwood goes one step further and explains that we need to create software that is going to be used.</li>
<li>In his <a href="http://removingalldoubt.com/post/2006/09/19/Fatherly-Advice-To-New-Programmers.aspx">fatherly advice to new programmers</a> Chuck Jazdzewski&rsquo;s says &ldquo;You don&rsquo;t get paid to program, you get paid to ship.&rdquo;</li>
</ul>


<h2>What does it really mean ?</h2>

<p>If you are not shipping, are you really developing something ? Maybe it&rsquo;s more some kind of research project, or maybe you are just there for learning ? <em>Real Developers know what they are in for.</em></p>

<p>If you are not shipping because the quality is too bad, that&rsquo;s because you&rsquo;ve been developing poor quality software &hellip; <em>Real developers write quality software.</em> (BTW, shipping bug fixes is not shipping)</p>

<p>If you are not shipping because you don&rsquo;t have yet enough features, that&rsquo;s because your MVP is not small enough (despite the current Skateboard metaphor, <a href="https://www.youtube.com/watch?v=rgETWBKCRSQ">this</a> is not an MVP). <em>So Real developers follow lean (startup) principles.</em></p>

<p>If you are not shipping because it&rsquo;s much work, that&rsquo;s because you did not automate delivery. <em>Real developers use continuous delivery.</em></p>

<p>If you are not shipping because someone else said so, maybe it&rsquo;s time to convince her. <em>Real developers know how to deal with people.</em></p>

<p>If you are not shipping because you are in a shitty environment &hellip; <em>Real developers work on their skills to be able to quit when needed.</em></p>

<h2>Shipping above all else</h2>

<p>My point is that every developer or organization containing developers should put shipping value as their absolute priority, and things should get a lot simpler.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Pair Programming, From Pain Zone To Skill Zone]]></title>
    <link href="http://philippe.bourgau.net/pair-programming-from-pain-zone-to-skill-zone/"/>
    <updated>2016-05-06T04:04:00+00:00</updated>
    <id>http://philippe.bourgau.net/pair-programming-from-pain-zone-to-skill-zone</id>
    <category term="agile" /><category term="coaching" /><category term="pair programming" />
    <content type="html"><![CDATA[<p>We&rsquo;re doing pair programming almost all the the time in our team. A few weeks ago, we went to <a href="http://www.devoxx.fr/">Devoxx</a> Paris, and 2 team mates used pair programming at a hands on session : they finished way before the others and had the time to take a 30 minute break. Pair programming delivers more &hellip; when it works.</p>

<h2>Flavors of Pair Programming</h2>

<p>Throughout our experience, we have identified some situations where it does or does not work :</p>

<table>
<thead>
<tr>
<th>Pain Zone         </th>
<th> Skill Zone</th>
</tr>
</thead>
<tbody>
<tr>
<td>Wandering buddies </td>
<td> Mates</td>
</tr>
<tr>
<td>Expert / Novice   </td>
<td> Mentor &amp; Apprentice</td>
</tr>
</tbody>
</table>


<br>


<h2>The Pain Zone</h2>

<p>Pair programming can be painful. It can feel like a waste of time or extremely frustrating. Here are the typical situations and how to fix them.</p>

<h3>The Wandering Buddies</h3>

<p><img class="center" src="http://philippe.bourgau.net/imgs/2016-05-06-pair-programming-from-pain-zone-to-skill-zone/going_nowhere.jpg" title="A 'going nowhere' sign" ></p>

<p>That&rsquo;s what you&rsquo;d get if you asked to newcomers straight out of school to pair program on existing source code on day 1. They&rsquo;d be dabbling here and there, without going anywhere. Each one would try to get the keyboard to try his way, but in the end, no general direction would be followed.</p>

<p>The cure in this case (as often) is to stop and think. At least one in the pair needs to lean how to pair program. It&rsquo;s not difficult, that&rsquo;s just :</p>

<ul>
<li>Discuss and agree on a general plan first</li>
<li>Keep a todo list</li>
<li>Track your advancement on your todo list while you don&rsquo;t have the keyboard</li>
<li>Stop and discuss from time to time</li>
</ul>


<p>By starting that, the pair will quickly move into the &lsquo;mates&rsquo; state.</p>

<h3>The Export / The Novice</h3>

<p><img class="center" src="http://philippe.bourgau.net/imgs/2016-05-06-pair-programming-from-pain-zone-to-skill-zone/race.jpg" title="A race where Usain Bolt leave everyone meters behind" ></p>

<p>That&rsquo;s when a &lsquo;lone wolf kind of&rsquo; expert pairs with a junior. The expert picks the keyboard, dashes through the tasks, doesn&rsquo;t make sure his pair follows (which usually means it does not).</p>

<p>Regular pair programming means a change in job responsibilities for such expert programmers. If they were expert doers before, they should now become expert mentors or coaches. That&rsquo;s quite a difference. To them, it means that their goal must be to make his pair finish the task &hellip; It can be very frustrating at first. Nevertheless, the overall skill level in teams doing that increases so fast that&rsquo;s it&rsquo;s very fulfilling for the team as a whole.</p>

<h2>The Skill Zone</h2>

<p>The is where we want to be. When it happens, pair programming feels productive, interesting and fulfilling. Contrary to what is often thought, this can happen whatever the skill levels of the 2 programmers.</p>

<h3>The Mates</h3>

<p><img class="center" src="http://philippe.bourgau.net/imgs/2016-05-06-pair-programming-from-pain-zone-to-skill-zone/to-do-list.jpg" title="A Todo list" ></p>

<p>The programmers have equivalent skills on the subject at hand. They organized in a way that they are both learning from each other. By having to verbalize what and why they are doing things, by challenging each others assumptions and by sometimes doing differently than what they&rsquo;d alone.</p>

<h3>The Mentor &amp; The Apprentice</h3>

<p><img class="center" src="http://philippe.bourgau.net/imgs/2016-05-06-pair-programming-from-pain-zone-to-skill-zone/help.jpg" title="People helping each other to climb a mountain" ></p>

<p>Other times, there can be a real difference in skills for what the pair is attempting to do. In this situation, the goal of the most knowledgeable is to train his pair, who&rsquo;s goal is to learn. The task becomes some kind of exercise on which to practice.</p>

<p>During a typical pairing session, a pair might switch many times between mentor and mates states. Each one in the pair might assume the mentor&rsquo;s role for different aspect of the work. At the end of the day, everyone should feel as if they had learned and accomplished good work.</p>

<h2>Last Word of Caution</h2>

<p>Pair programming is exhausting. Don&rsquo;t expect to be able to do 40 hours of pair programming per week. After 6 hours in a day, one usually starts to get a lot less efficient.</p>

<p>Both juniors and experienced programmers also need some time by their own, to experiment things by themselves or to complete a simple task without having worry about explaining everything.</p>

<p>These are the reasons why <a href="http://www.extremeprogramming.org/">XP</a> stresses having a sustainable pace and leaving space for <a href="http://www.jamesshore.com/Agile-Book/slack.html">Slack time</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[5 Books About Data Driven Lean Software Development]]></title>
    <link href="http://philippe.bourgau.net/5-books-about-data-driven-lean-software-development/"/>
    <updated>2016-04-29T05:25:00+00:00</updated>
    <id>http://philippe.bourgau.net/5-books-about-data-driven-lean-software-development</id>
    <category term="agile" /><category term="economics" /><category term="kanban" /><category term="lean" /><category term="lpd2" /><category term="software" />
    <content type="html"><![CDATA[<p>In french, we say &ldquo;Le cordonnier est toujours le plus mal chaussé&rdquo; which I found an English equivalent in &ldquo;the shoemaker’s son always goes barefoot&rdquo;. I believe this is nowhere more true than in the software industry !</p>

<p>&ldquo;Software is eating the world&rdquo; they say. Software is now able to do things that only humans used to be. So why the hell are we driving our projects as if we were a horde of amateur hitch hikers ?</p>

<h2>What does it mean to be data driven ?</h2>

<p>Being data driven would allow us to answer questions such as :</p>

<ul>
<li>How much is the feature we delivered last week contributing to the bottom line ?</li>
<li>How much is the feature we are currently developing expected to contribute to the bottom line ?</li>
<li>What are the estimated cost <em>and value</em> of increasing our test coverage of 1% ?</li>
<li>What are the estimated interests and nominal amounts of our current technical debt ?</li>
<li>Which is the most valuable : improving our build system or building this new feature ?</li>
</ul>


<p>Most projects I&rsquo;ve worked in have absolutely no clue about the answers to these questions. The decision is left to experts, to the one with most influence, or simply to the developer, who can do how he thinks is best &hellip;</p>

<h2>The books</h2>

<p>Hopefully, some people are thinking differently, they believe it is possible to quantify all this, they even explain how !</p>

<h3><a href="http://www.amazon.com/Running-Lean-Iterate-Works-OReilly/dp/1449305172/ref=sr_1_1?ie=UTF8&amp;qid=1461906957&amp;sr=8-1&amp;keywords=running+lean">Running Lean: Iterate from Plan A to a Plan That Works</a> by <a href="https://ashmaurya.com/">Ash Maurya</a></h3>

<p><a href="http://www.amazon.com/Running-Lean-Iterate-Works-OReilly/dp/1449305172/ref=sr_1_1?ie=UTF8&amp;qid=1461906957&amp;sr=8-1&amp;keywords=running+lean"><img class="center" src="http://philippe.bourgau.net/imgs/2016-04-29-5-books-about-data-driven-lean-software-development/running_lean.jpg" title="The cover of the Running Lean book" ></a></p>

<p>Details a very practical guide about the lean startup process, which is a very good starting point to any kind of lean software development.</p>

<h3><a href="http://www.amazon.com/Kanban-Successful-Evolutionary-Technology-Business/dp/0984521402/ref=sr_1_1?ie=UTF8&amp;qid=1461906998&amp;sr=8-1&amp;keywords=kanban+anderson">Kanban: Successful Evolutionary Change for Your Technology Business</a> by <a href="http://www.djaa.com/">David J. Anderson</a></h3>

<p><a href="http://www.amazon.com/Kanban-Successful-Evolutionary-Technology-Business/dp/0984521402/ref=sr_1_1?ie=UTF8&amp;qid=1461906998&amp;sr=8-1&amp;keywords=kanban+anderson"><img class="center" src="http://philippe.bourgau.net/imgs/2016-04-29-5-books-about-data-driven-lean-software-development/kanban.jpg" title="The cover of the Kanban book" ></a></p>

<p>This book explains with real world examples how to use Kanban board to control your work queues and improve your flow of work, a real basic for any lean product development.</p>

<h3><a href="http://www.amazon.com/Principles-Product-Development-Flow-Generation/dp/1935401009/ref=sr_1_1?ie=UTF8&amp;qid=1461907905&amp;sr=8-1&amp;keywords=principles+of+product+development+flow">The Principles of Product Development Flow: Second Generation Lean Product Development</a> by <a href="http://reinertsenassociates.com/">Donald G. Reinertsen</a></h3>

<p><a href="http://www.amazon.com/Principles-Product-Development-Flow-Generation/dp/1935401009/ref=sr_1_1?ie=UTF8&amp;qid=1461907905&amp;sr=8-1&amp;keywords=principles+of+product+development+flow"><img class="center" src="http://philippe.bourgau.net/imgs/2016-04-29-5-books-about-data-driven-lean-software-development/flow.jpg" title="The cover of the Flow book" ></a></p>

<p>This book is rather theoretical, but it links all subjects together : lean startup, risk management, Kanban, and economics. I guess it&rsquo;s a must read on the subject.</p>

<h3><a href="http://www.amazon.com/How-Measure-Anything-Intangibles-Business/dp/1118539273/ref=sr_1_1?ie=UTF8&amp;qid=1461908177&amp;sr=8-1&amp;keywords=how+to+measure+anything">How to Measure Anything: Finding the Value of Intangibles in Business</a> by <a href="http://www.hubbardresearch.com/">Douglas W. Hubbard</a></h3>

<p><a href="http://www.amazon.com/How-Measure-Anything-Intangibles-Business/dp/1118539273/ref=sr_1_1?ie=UTF8&amp;qid=1461908177&amp;sr=8-1&amp;keywords=how+to+measure+anything"><img class="center" src="http://philippe.bourgau.net/imgs/2016-04-29-5-books-about-data-driven-lean-software-development/how_to_measure_anything.jpg" title="The cover of How to measure anything" ></a></p>

<p>If the flow book gives a big picture view of what you want, this one explains how you can actually measure all the aspects of your product development in $ value.</p>

<h3><a href="http://www.amazon.com/Waltzing-Bears-Managing-Software-Projects/dp/0932633609/ref=sr_1_sc_1?ie=UTF8&amp;qid=1461908398&amp;sr=8-1-spell&amp;keywords=walzting+with+bears">Waltzing With Bears: Managing Risk on Software Projects</a> by <a href="http://www.systemsguild.com/">Tom DeMarco and Timothy Lister</a></h3>

<p><a href="http://www.amazon.com/Waltzing-Bears-Managing-Software-Projects/dp/0932633609/ref=sr_1_sc_1?ie=UTF8&amp;qid=1461908398&amp;sr=8-1-spell&amp;keywords=walzting+with+bears"><img class="center" src="http://philippe.bourgau.net/imgs/2016-04-29-5-books-about-data-driven-lean-software-development/waltzing_with_bears.jpg" title="The cover of Waltzing with bears" ></a></p>

<p>Although this book is getting old, and is a bit outdated when compared to agile development practices, it provides real world examples of how scientific measurement can be applied to software product development.</p>

<h2>An opportunity</h2>

<p>Reading these books was a real eye opener for me. The software development world is plagued with cargo cult and supposed best practices. We follow advises, but most often without verifying if they actually work ! I believe that by applying the techniques in these books, we could create standard ways to measure the values of productivity, technical debt, quality, testing &hellip;</p>

<p>I see real opportunities to avoid a lot of useless argument between proponents of A and B, but also to communicate better with all stakeholders and finally, to reduce stress for all of us.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[A Lego Office Experiment]]></title>
    <link href="http://philippe.bourgau.net/a-lego-office-experiment/"/>
    <updated>2016-04-20T05:07:00+00:00</updated>
    <id>http://philippe.bourgau.net/a-lego-office-experiment</id>
    <category term="selforganizing" /><category term="workplace" />
    <content type="html"><![CDATA[<p>Rome wasn&rsquo;t built in a day, neither will be your Lego Office &hellip; This week is Devoxx in Paris, for the occasion, we decided to stream a <a href="http://philippe.bourgau.net/recipes-for-an-agile-workspace/">Lego office</a> experiment that my team did.</p>

<h2>What are Lego Offices</h2>

<p>I wrote about Lego office in a previous post, as a concept and a set of material that would allow teams to easily configure their workspaces as they wish. At that time, I thought of :</p>

<ul>
<li>laptops</li>
<li>extra monitors</li>
<li>tables and chairs on wheels</li>
<li>movable walls</li>
<li>movable white boards</li>
<li>movable wall screens</li>
<li>a good Wifi</li>
</ul>


<h2>Our experiment</h2>

<p><img class="center" src="http://philippe.bourgau.net/imgs/2016-04-20-a-lego-office-experiment/empty-meeting-area.jpg" title="Meeting area in the empty office" >
<img class="center" src="http://philippe.bourgau.net/imgs/2016-04-20-a-lego-office-experiment/empty-work-area.jpg" title="Work area in the empty office" ></p>

<p>The last floor of our building in Paris has a nice (really) open space area with rolling tables that we could use. We moved all the team there for one week. As we don&rsquo;t have laptops with Wifi, we simply asked for enough power and network plugs.</p>

<p><img class="center" src="http://philippe.bourgau.net/imgs/2016-04-20-a-lego-office-experiment/setup-work-area.jpg" title="Setup work area" >
<img class="center" src="http://philippe.bourgau.net/imgs/2016-04-20-a-lego-office-experiment/setup-meeting-area.jpg" title="Setup meeting area" >
<img class="center" src="http://philippe.bourgau.net/imgs/2016-04-20-a-lego-office-experiment/setup-rest-area.jpg" title="Setup rest area" ></p>

<p>The place is large enough to have dedicated rest and meeting space. We managed to create a visio setup using our build monitor. We even had a remote lunch once, which we should repeat more often !</p>

<h2>What&rsquo;s missing</h2>

<p>Obviously, this was a quick experiment, nothing like a fully architectured Lego workspace, still it helped us to discover issues and blocking points. It turns out that cables <em>are</em> an issue !</p>

<p><img class="center" src="http://philippe.bourgau.net/imgs/2016-04-20-a-lego-office-experiment/cables.jpg" title="Cables on the floor" ></p>

<p>After getting some feedback throughout the company, it turns out that some developers would never trade their high end connected desktop workstation for a Wifi laptop. Our C++ build can be pretty CPU and network intensive &hellip; I guess that means that a real Lego office might require one of the following :</p>

<ul>
<li>A technical floor with all the place required to bring any kind of cables to your machine</li>
<li>Powerful servers in a data center to do the grunt work for you</li>
<li>Single cable machines (Apple&rsquo;s USB-C is the only one I can think of right now)</li>
</ul>


<h2>Last minute question</h2>

<p>Thinking of it &hellip; could different remote offices such as your home, or a co-working space be considered as Lego blocks ?</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How We Decentralized Our Company's Training Program]]></title>
    <link href="http://philippe.bourgau.net/how-we-decentralized-our-companys-training-program/"/>
    <updated>2016-04-18T05:31:00+00:00</updated>
    <id>http://philippe.bourgau.net/how-we-decentralized-our-companys-training-program</id>
    <category term="agile" /><category term="career" /><category term="management" /><category term="management30" /><category term="selforganizing" />
    <content type="html"><![CDATA[<p>Maybe your company too has a development program you can use to track and organize your training path. That&rsquo;s already great ! It is often not perfect though. Sometimes, the initiative in itself can feel like an afterthought. Some other times, the process is completely left to the employee and his manager, with varying results, from great to forced upon everyone.</p>

<p><img class="center" src="http://philippe.bourgau.net/imgs/2016-04-18-how-we-decentralized-our-companys-training-program/learning.jpg" title="A 'learning' word cloud" ></p>

<h2>How did we rebuild this program in our team</h2>

<p>As you might remember if you read my <a href="http://philippe.bourgau.net/blog/categories/selforganizing/">previous posts</a>, we started a self organization initiative using a <a href="https://management30.com/product/workouts/delegation-employee-engagement/">delegation board</a>. When we tried to decentralize <a href="http://philippe.bourgau.net/how-to-deal-with-the-incentive-system-in-an-agile-team/">the end of year evaluation</a>, we started discussing the subjects of personal development. We decided to have a dedicated workshop about this subject</p>

<h2>Guiding principles</h2>

<p>In our company, the development program allows a manager to assign specific learning goals to his collaborators, and anyone can also create his own goals to justify going to specific trainings. Starting from that, we agreed that the development program should be used to help anyone in the team to improve skills that are interesting for both the company and the employee. If the employee is interested in something completely unrelated to work, then he should obviously tackle that in his own time. If the company needs its employee to acquire some immediate mandatory skills, then that should be part of the daily job and subject to the end of year evaluation.</p>

<p>The idea is to try to find a win-win combinations, were employees are motivated to work their best at a company that they know helps them to full-fill their long term goals.</p>

<h2>What did we came us with ?</h2>

<p><img class="center" src="http://philippe.bourgau.net/imgs/2016-04-18-how-we-decentralized-our-companys-training-program/mentor-mentee.jpg" title="A lion and a lion cub side by side" ></p>

<p>This workshop was quite effective :</p>

<ul>
<li>First of all, everyone is responsible for his own development, it&rsquo;s a chance offered by the company. It cannot be forced unto people.</li>
<li>It is based on volunteer mentorship : everyone should have regular meetings with his mentor to asses his progress on his long term goal, to try to get feedback and ideas about how to move forward. We started by saying that the team leader is the default mentor, but anyone can find another mentor at any moment.</li>
<li>The process starts with the search for a long term goal. Examples are &ldquo;I want to be an agile coach&rdquo;, or &ldquo;I want to be a performance expert&rdquo;</li>
<li>With the help of the mentor if needed, the long term goal should be split in yearly objectives and tracked using <a href="http://fr.slideshare.net/HenrikJanVanderPol/how-to-outperform-anyone-else-introduction-to-okr">OKRs</a></li>
<li>Everyone is free to track his progress has he wishes. Visual tracking makes the discussion with the mentor a lot easier. We have been looking at tools to track OKRs but it was surprisingly difficult to find one that suited our use. Most are enterprisy tools with manager-managee relationships. We just wanted simple personal tracking tools. For my part, I adapted a <a href="https://trello.com/b/MPM4rspd/okrs">Trello</a> board I found on the internet.</li>
</ul>


<h2>Conclusion</h2>

<p>After doing a few months of this, I can say that this has a positive aspect on motivation, people told me that they felt more in control of their destiny. Something else I noted, is that junior developers need help and guidance. They often don&rsquo;t really know what they want to do in a few years, so they really need a mentor to help them find out the what and the how. The other side of this is that a team obviously needs senior developers to act as mentor &hellip; among other things.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Trello Templates to Boost Your Remote Retrospectives]]></title>
    <link href="http://philippe.bourgau.net/trello-templates-to-boost-your-remote-retrospectives/"/>
    <updated>2016-04-11T20:31:00+00:00</updated>
    <id>http://philippe.bourgau.net/trello-templates-to-boost-your-remote-retrospectives</id>
    <category term="remote" /><category term="retrospectives" /><category term="trello" />
    <content type="html"><![CDATA[<p>I already wrote how we started to use <a href="http://trello.com">Trello</a> to do our <a href="http://philippe.bourgau.net/trellospectives-remote-retrospectives-with-trello/">remote retrospectives</a>. A while ago, my team mate <a href="http://bilal.eltayara.net/blog/2015/09/20/agile-retrospectives-using-trello/">Bilal Tayara</a> started to collect our activities into <a href="https://trello.com/agileretrospectives">trello templates</a>.</p>

<p><img class="center" src="http://philippe.bourgau.net/imgs/2016-04-11-trello-templates-to-boost-your-remote-retrospectives/retrospective_meetings.jpg" title="'Stop Doing', 'Continue Doing' & 'Start doing' panels of a retrospective activity" ></p>

<h2>New activities</h2>

<p>I just imported new activities we have been using in the past months :</p>

<ul>
<li>SMART Goals</li>
<li>5 Whys</li>
<li>Circle of Questions</li>
<li>Communication</li>
<li>Engagement</li>
<li>ESVP</li>
<li>Fishbone</li>
<li>Focus On/Focus Off</li>
<li>Force Field Analysis</li>
<li>Gifts</li>
<li>Glad Sad Mad</li>
<li>Health Radar</li>
<li>HHH</li>
<li>Hot Air Balloon</li>
<li>How are you feeling today ?</li>
<li>Improvements Brainstorming</li>
<li>Learning Matrix</li>
<li>Note To Self</li>
<li>Plus / Delta</li>
<li>Problem &ndash;> Action</li>
<li>Punctual Paulo</li>
<li>Retrospective Planning Game</li>
<li>Risk Brainstorming</li>
<li>ROTI</li>
<li>Sail Boat</li>
<li>Satisfaction Histogram</li>
<li>Take Away</li>
<li>Team</li>
<li>Team Radar</li>
<li>Warmup Question</li>
<li>What happened since last retro ?</li>
</ul>


<h2>How to use these templates</h2>

<p>Clone the template to your organization every time you want to use it. There are instructions in the template to explain how to use it. For more detailed instructions, have a look at the original :</p>

<ul>
<li><a href="https://pragprog.com/book/dlret/agile-retrospectives">Agile Retrospectives, Making Good Teams Great</a> by Esther Derby and Diana Larsen, Foreword by Ken Schwaber</li>
</ul>


<p><a href="https://pragprog.com/book/dlret/agile-retrospectives"><img class="center" src="http://philippe.bourgau.net/imgs/2016-04-11-trello-templates-to-boost-your-remote-retrospectives/AgileRetrospectives.jpg" title="The cover of Agile Retrospectives" ></a></p>

<ul>
<li><a href="http://www.infoq.com/minibooks/agile-retrospectives-value">Getting Value out of Agile Retrospectives, Second Edition</a> by Luis Gonçalves and Ben Linders</li>
</ul>


<p><a href="http://www.infoq.com/minibooks/agile-retrospectives-value"><img class="center" src="http://philippe.bourgau.net/imgs/2016-04-11-trello-templates-to-boost-your-remote-retrospectives/GettingAgileOutOfAgileRetrospectives.jpg" title="The cover of Getting Agile Out Of Agile Retrospectives" ></a></p>

<ul>
<li><a href="https://leanpub.com/funretrospectives">Fun Retrospectives</a> by Taina Caetano and Paulo Caroli</li>
</ul>


<p><a href="https://leanpub.com/funretrospectives"><img class="center" src="http://philippe.bourgau.net/imgs/2016-04-11-trello-templates-to-boost-your-remote-retrospectives/FunRetrospectives.jpg" title="The cover of Fun Retrospectives" ></a></p>

<p>One last thing : in order to improve this collection, we&rsquo;d like to have your feedback on existing activities, or your own new templates for other activities.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How to deal with the incentive system in an agile team ?]]></title>
    <link href="http://philippe.bourgau.net/how-to-deal-with-the-incentive-system-in-an-agile-team/"/>
    <updated>2016-03-30T05:10:00+00:00</updated>
    <id>http://philippe.bourgau.net/how-to-deal-with-the-incentive-system-in-an-agile-team</id>
    <category term="company-bonus" /><category term="management30" /><category term="selforganizing" />
    <content type="html"><![CDATA[<p>For an organization, there&rsquo;s something schizophrenic about valuing team work, wanting agility but sticking to individual objectives and assessments.</p>

<p><img class="center" src="http://philippe.bourgau.net/imgs/2016-03-30-how-to-deal-with-the-incentive-system-in-an-agile-team/schizophrenic-smiley.jpg" title="A schizophrenic :(: smiley" ></p>

<p>As highlighted in <a href="http://www.amazon.com/Built-Last-Successful-Visionary-Essentials/dp/0060516402/ref=sr_1_1?ie=UTF8&amp;qid=1459922545&amp;sr=8-1&amp;keywords=build+to+last">Build To Last</a> genuine company values must permeate all aspects of the organization. Being agile also means putting teamwork first and that is quite incompatible with typical individual management by objectives and bonuses.</p>

<p>This is nothing new, many have already written about the subject</p>

<ul>
<li>Joel Spolsky : <a href="http://www.joelonsoftware.com/articles/fog0000000070.html">Incentive Pay Considered Harmful</a></li>
<li>Daniel Pink : <a href="http://www.amazon.com/Drive-Surprising-Truth-About-Motivates/dp/1594484805/ref=sr_1_1?ie=UTF8&amp;qid=1459665370&amp;sr=8-1&amp;keywords=drive+daniel+pink">Drive : The Surprising Truth About What Motivates Us</a></li>
<li>Alfie Kohn : <a href="http://www.amazon.com/Punished-Rewards-Trouble-Incentive-Praise/dp/0618001816/ref=sr_1_1?ie=UTF8&amp;qid=1459665424&amp;sr=8-1&amp;keywords=punished+by+rewards">Punished by Rewards: The Trouble with Gold Stars, Incentive Plans, A&rsquo;s, Praise, and Other Bribes</a></li>
<li>Jurgen Appelo : <a href="http://noop.nl/2013/01/the-bonus-system.html">The Bonus System</a></li>
</ul>


<p>The problem is you usually don&rsquo;t have the choice ! Whether your team wants to or not, the chances are that your company already has a mandatory individual bonus scheme in place.</p>

<h2>Our delegation initiative</h2>

<p>As you might remember if you read my <a href="http://philippe.bourgau.net/stop-feeling-like-a-kid-everytime-you-ask-a-day-off/">previous articles</a>, our team decided to move to more self organization. After identifying the end of year evaluation as something that could be further delegated, we embarked on brainstorming sessions about how to do it.</p>

<p>We discussed quite some options during our workshops. Things like :</p>

<ul>
<li>What is the goal of the annual evaluation ?</li>
<li>Should some people have a central role in the process ?</li>
<li>Should we encourage efforts or results ?</li>
<li>Should evaluations be public or private ?</li>
<li>What&rsquo;s at stack at the annual evaluation ?</li>
<li>Should individual learning plans be part of the evaluation ?</li>
</ul>


<h2>What we came up with</h2>

<p>As a guiding principle, we agreed to value efforts rather than results. Sometimes, results are independent of efforts, and through efforts, it is always possible to get the best of any situation, even if the best is not a good result in itself.</p>

<h3>Throughout the year</h3>

<p>We are all sharing the same team objectives :</p>

<ul>
<li>&ldquo;the team finishes the prioritized epics&rdquo; : we do regular epics prioritization sessions with our product owner and add the main epics to everyone&rsquo;s objectives</li>
<li>&ldquo;work on the same subject as the whole team&rdquo; : we have an overspecialization matrix that uses correlation to make sure that everyone touches the same parts of the system as the rest of the team</li>
</ul>


<p>Every 2 months, we are doing <a href="http://philippe.bourgau.net/feedback-on-360-degrees-feedback-session/">360° feedback sessions</a>, for everyone to give continuous feedback to others.</p>

<p>Optionally, we setup <a href="https://management30.com/product/workouts/intrinsic-motivation/kudo-box/">Kudo boxes</a> to give and receive thanks from others.</p>

<p><img class="center" src="http://philippe.bourgau.net/imgs/2016-03-30-how-to-deal-with-the-incentive-system-in-an-agile-team/kudo.jpg" title="A kudo card" ></p>

<h3>At the end of the year</h3>

<p>When the time of the official end of year evaluation comes, we do 360°, 1 to 1 rating on the following topics.</p>

<ul>
<li> commitment &amp; courage (doing not so fun work, find difficult compromises, say the truth, strive for quality work)</li>
<li> helping others (giving a training, providing coaching, help others, do some evangelization)</li>
<li> self improvement (taking feedback into account, improve technical skills, work on soft skills)</li>
<li> team player (build friendly environment, contribute to team improvement, positive attitude, use a non violent communication)</li>
</ul>


<p>Grades are signed, and anyone can ask someone else for a discussion about his grades.</p>

<p>Overall, everyone gets an average grade, which we use to suggest a company grade (below, achieved, exceeded) to the HR system. It then gets homogenized with the rest of the company, but this is then out of our control.</p>

<p>One thing that made this possible is also that after taking a close look at the company grade system, we saw that not so much was at stake &hellip; Provided we make sure everyone has what it takes to do the job, anyone can get an achieved evaluation by doing enough efforts. Getting an exceeded is like a bonus for a particular good year.</p>

<h2>Last word</h2>

<p>I&rsquo;m pretty sure we could make this more simple in an environment with more end to end feedback (start-up or pizza teams) but we feel that our current alternative is a lot better than having the manager deciding everything on his own.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Make hiring everyone's business]]></title>
    <link href="http://philippe.bourgau.net/make-hiring-everyones-business/"/>
    <updated>2016-03-21T21:05:00+00:00</updated>
    <id>http://philippe.bourgau.net/make-hiring-everyones-business</id>
    <category term="hiring" /><category term="management30" /><category term="selforganizing" />
    <content type="html"><![CDATA[<p>Let me tell you a typical hiring story. A bit more than 10 years ago, I was contractor at a bank on a C++ front office application. The system had initially been well engineer, but it had been <del>stuffed together</del> merged with another system that had a completely different architecture. Ha, and there were no automated tests. As you&rsquo;d guess, we had quite our dose of bugs, and maintaining this application was not easy.</p>

<p><img class="center" src="http://philippe.bourgau.net/imgs/2016-03-21-make-hiring-everyones-business/now-hiring.jpg" title="A 'Now Hiring' sign" ></p>

<p>The manager wanted to hire a C++ programmer to beef up the team. Along with the division&rsquo;s architect he was conducting interviews to find just that guy. A few weeks later, he found a known C++ &amp; Windows local expert. A few weeks later, the team unanimously declared that we could not work with him because he was both pretentious and incompetent.</p>

<p>I&rsquo;m pretty sure every developer already witnessed a similar story.</p>

<h2>Managers do the hiring</h2>

<p>This is the usual practice. The motivation is that managers have more experience so they should be better at it, and also that it alleviates developers from non-programming work. As we saw in the introduction story, there are issues with this approach too :</p>

<ul>
<li>it&rsquo;s pretty bad for the team &lsquo;fit&rsquo; : there is no team building here. You often end up with a collection of individual working at the same place rather than with a real team.</li>
<li>during these interviews, the candidate only interacts with a particular type of profiles, who can tell how he&rsquo;ll be doing with more junior team members for example ?</li>
<li>as usual, this administrative work removes some programming from the manager&rsquo;s time. That&rsquo;s often not a good bargain</li>
<li>it decreases the team sense of control, as it is being &lsquo;forced&rsquo; to work with someone they did not choose. This makes it harder for them to take responsibility of what they are trying to achieve.</li>
</ul>


<h2>How we self organized hiring</h2>

<p>As I already explained in a <a href="http://philippe.bourgau.net/stop-feeling-like-a-kid-everytime-you-ask-a-day-off/">previous post</a> we engaged in various self delegation initiative by doing a <a href="https://management30.com/product/workouts/delegation-employee-engagement/">delegation board</a>. During this meeting, we identified hiring as something that could be self delegated.</p>

<p>In order to fix that, we started a workshop for 1 hour per day with a sub group of the team. We started with a brainstorming, then we voted, and finally presented our proposition to the rest of the team, which actually validated it. The whole thing lasted for one week (5 hours).</p>

<p><a href="http://dilbert.com"><img class="center" src="http://philippe.bourgau.net/imgs/2016-03-21-make-hiring-everyones-business/dilbert.jpg" title="A Dilbert cartoon about hiring based on internet profile" ></a></p>

<h2>What we decided for hiring</h2>

<p>Here is the process we have decided to follow to handle hiring team members</p>

<ol>
<li>First, everyone in the team is responsible to speak up when he thinks we need to hire someone, during our retrospectives for example</li>
<li>To handle new applications, we have prepared an online interview. It contains open questions and online coding exercises, on <a href="http://www.cyber-dojo.org/">cyber-dojo</a>, which allows us to track all the candidates iterations</li>
<li>We do a round robin to find out who will follow the candidate through the hiring process. This means taking notes, organizing interviews, keeping the rest of the team up to date.</li>
<li>When a candidate passes the online interview, we will receive him for an technical and general interview with 2 people from the team.</li>
<li>All the team will then meet the candidate for a coffee break, in order to know if he will fit in the team</li>
<li>We&rsquo;ll then play the <a href="https://rework.withgoogle.com/print/guides/6053596147744768/">Google hiring committee</a> until we reach a consensus</li>
<li>When in doubt, we&rsquo;ll do extra interviews, and repeat</li>
</ol>


<p>That&rsquo;s just what we came up with, if you start this road, you might well come up with a very different process.</p>

<h2>One more thing</h2>

<p>It&rsquo;s great to have a selective hiring, but you&rsquo;ll also need to improve the input of the hiring pipeline, but that&rsquo;s <a href="http://philippe.bourgau.net/great-developers-are-free/">another story</a> &hellip;</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Scrum teams do not need A Scrum Master]]></title>
    <link href="http://philippe.bourgau.net/scrum-teams-do-not-need-a-scrum-master/"/>
    <updated>2016-03-15T05:41:00+00:00</updated>
    <id>http://philippe.bourgau.net/scrum-teams-do-not-need-a-scrum-master</id>
    <category term="agile" /><category term="management" /><category term="management30" /><category term="selforganizing" />
    <content type="html"><![CDATA[<p>We don&rsquo;t have an official scrum master in our team anymore. We now have 7 ! A different team member assumes the full scrum master role at every sprint.</p>

<p><img class="center" src="http://philippe.bourgau.net/imgs/2016-03-15-scrum-teams-do-not-need-a-scrum-master/round-robin.jpg" title="A fat round robin bird" ></p>

<h2>Why did we switch to Scrum Master round robin ?</h2>

<p>It all started with our <a href="https://management30.com/product/delegation-poker/">delegation poker</a> (see <a href="http://philippe.bourgau.net/stop-feeling-like-a-kid-everytime-you-ask-a-day-off/">previous post</a>). We noticed that there were still quite some activities that I (the manager) was the only one to do. We hoped that by sharing these activities throughout the team, we would :</p>

<ul>
<li>increase everyone&rsquo;s motivation by showing a bigger picture</li>
<li>leave me more time for programming</li>
<li>learn new skills to everyone</li>
</ul>


<h2>How did we do it ?</h2>

<p>Before our <a href="https://management30.com/product/workouts/delegation-employee-engagement/">delegation board meeting</a>, we had prepared all the activities we are regularly doing. We found quite a few recurrent non programming tasks that traditionally eschewed to the team lead (me in that case). The initial plan was to find ways to delegate these activities to the team during the meeting, but it would have took way too much time.</p>

<p>Having identified all these activities, I individually suggested at everyone in the team to do a round robin scrum master role, which would handle all these activities for a sprint. I was happily surprise by the quasi complete buy-in from all the team. Before I announced it to the team, I did 2 things :</p>

<h3>List all the activities of the scrum master.</h3>

<p>Here is a subset :</p>

<ul>
<li>attend other teams meetings</li>
<li>make sure there are enough workable stories for the next planning session with the product owner</li>
<li>prepare and animate a retrospective</li>
<li>animate the demo</li>
</ul>


<h3>Make this more fun !</h3>

<blockquote class="twitter-tweet" data-lang="fr"><p lang="en" dir="ltr">Having <a href="https://twitter.com/hashtag/fun?src=hash">#fun</a> <a href="https://twitter.com/hashtag/geeky?src=hash">#geeky</a> <a href="https://twitter.com/hashtag/work?src=hash">#work</a> <a href="https://twitter.com/hashtag/environment?src=hash">#environment</a> Our scrummaster is <a href="https://twitter.com/hashtag/DarthVader?src=hash">#DarthVader</a> or <a href="https://twitter.com/hashtag/Yuda?src=hash">#Yuda</a> <a href="https://twitter.com/hashtag/starwars?src=hash">#starwars</a> at <a href="https://twitter.com/Work_at_Murex">@Work_at_Murex</a> <a href="https://twitter.com/pbourgau">@pbourgau</a> <a href="https://t.co/CbZXCYwBge">pic.twitter.com/CbZXCYwBge</a></p>&mdash; Ahmad Atwi (@ahmadatwi) <a href="https://twitter.com/ahmadatwi/status/694190926684618753">1 février 2016</a></blockquote>


<script async src="http://philippe.bourgau.net//platform.twitter.com/widgets.js" charset="utf-8"></script>


<p>I bought totems for the scrum master. The team chose to keep Yoda in Paris and send Darth Vador in <a href="https://twitter.com/ahmadatwi">Ahmad</a> suitcase back in Beirut.</p>

<h2>What did we get ?</h2>

<p>After a few sprints of this, the feedback I got is that people like the increased involvement in the big picture (<a href="http://www.amazon.com/Drive-Surprising-Truth-About-Motivates/dp/1594484805/ref=sr_1_1?ie=UTF8&amp;qid=1458076848&amp;sr=8-1&amp;keywords=daniel+pink+drive">Daniel Pink told us that already</a>). On my part, it allowed to increase my programming time to nearly 7 uninterrupted days per sprint (10 days). I&rsquo;m quite happy with this ! As for the third goal, learning new skills, I guess we&rsquo;ll need a bit more time to figure this out.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Stop feeling like a kid every time you ask a day off]]></title>
    <link href="http://philippe.bourgau.net/stop-feeling-like-a-kid-everytime-you-ask-a-day-off/"/>
    <updated>2016-03-12T06:35:00+00:00</updated>
    <id>http://philippe.bourgau.net/stop-feeling-like-a-kid-everytime-you-ask-a-day-off</id>
    <category term="agile" /><category term="management" /><category term="management30" /><category term="selforganizing" />
    <content type="html"><![CDATA[<p>Most companies don&rsquo;t have <a href="https://management30.com/product/workouts/performance-management/">unlimited vacations</a>. Most likely, if you are an employee, your days off need to be validated by your boss. If you are like me, this feels like pulling teeth &hellip; Every time I have to ask for a day off, I feel like a kid asking for an extra candy</p>

<p>That&rsquo;s not the only issue with how we traditionally deal with vacations :</p>

<ul>
<li>The boss has to make sure that there are always enough people at the office to handle emergencies</li>
<li>If the boss is himself away, getting a day off at the last moment becomes difficult</li>
</ul>


<h2>Our Delegation Board</h2>

<p>Our team at work is already rather agile : we&rsquo;re using a blend of XP and Scrumban, we follow solid engineering practices and we are always trying to improve to deliver more value to our users. After reading <a href="http://www.amazon.com/Management-3-0-Developers-Developing-Addison-Wesley/dp/0321712471/ref=sr_1_1?ie=UTF8&amp;qid=1457988177&amp;sr=8-1&amp;keywords=management+3.0">Management 3.0</a> and <a href="https://management30.com/product/workouts/">Management Workouts</a> I was convinced that I needed to move the team towards even more self organization.</p>

<p>We started by doing <a href="https://management30.com/product/delegation-poker/">delegation poker</a>, we created a <a href="https://management30.com/product/workouts/delegation-employee-engagement/">delegation board</a>, and set out to move all cards we could to the right side of the board.</p>

<p><a href="http://philippe.bourgau.net/imgs/2016-03-12-stop-feeling-like-a-kid-everytime-you-ask-a-day-off/delegation-board-large.jpg"><img class="center" src="http://philippe.bourgau.net/imgs/2016-03-12-stop-feeling-like-a-kid-everytime-you-ask-a-day-off/delegation-board.jpg" title="Our trello delegation board" ></a></p>

<p>We spotted the following topics that could be more self organized</p>

<ul>
<li>vacations</li>
<li>hiring</li>
<li>business objectives and end of year evaluations</li>
<li>various recurring scrum related activities</li>
<li>self development objectives</li>
</ul>


<h2>Vacations</h2>

<p>We decided to tackle vacations first, because it seemed easy. We did a quick brainstorming, and here is what we came up with :</p>

<ul>
<li>We cannot change the company policy, so I&rsquo;ll still have to officially validate everyone&rsquo;s vacations in the system but &hellip;</li>
<li>I&rsquo;ll validate anything asked !</li>
<li>Our internal system allows to check the other team member&rsquo;s vacations, so everyone in the team is responsible to check that there will always be at least 2 people at work before taking a day off</li>
</ul>


<p><a href="http://philippe.bourgau.net/imgs/2016-03-12-stop-feeling-like-a-kid-everytime-you-ask-a-day-off/mxopal.png"><img class="center" src="http://philippe.bourgau.net/imgs/2016-03-12-stop-feeling-like-a-kid-everytime-you-ask-a-day-off/mxopal.jpg" title="Screenshot of our vacation dashboard" ></a></p>

<p>It&rsquo;s been 6 months, and it&rsquo;s been working like a charm. I think it made everything simpler once we had a clear rule about when vacations were OK or not.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Are Most Agile Teams Doing Continuous Improvement The Silly Way ?]]></title>
    <link href="http://philippe.bourgau.net/are-most-agile-teams-doing-continuous-improvement-the-silly-way/"/>
    <updated>2016-03-06T07:33:00+00:00</updated>
    <id>http://philippe.bourgau.net/are-most-agile-teams-doing-continuous-improvement-the-silly-way</id>
    <category term="agile" /><category term="book" /><category term="lean" />
    <content type="html"><![CDATA[<p>A few weeks ago, as I was looking the internet for Lean principles to improve our way of working, I fell upon this book <a href="leanagilecamp.fr">Petit guide de management lean a l&#8217;usage des équipes agiles</a> (NB: the book is in French, the title means &lsquo;Little lean management guide at the usage of agile teams&rsquo;). It made me think and I thought it deserved a blog post.</p>

<p><a href="http://leanagilecamp.fr"><img class="center" src="http://philippe.bourgau.net/imgs/2016-03-06-are-most-agile-teams-doing-continuous-improvement-the-silly-way/cover.svg" title="The book cover" ></a></p>

<p>It explains that agility can be though of as a set of practices and principles, shared through a huge community. This makes it a great production system, where improvement are mostly brought by gut feeling retrospectives and trial of other teams practices. At the contrary, Lean is very light framework for continuous improvement, relying on a more systematic waste elimination.</p>

<p>After this introduction, the bulk of the book is composed of a set of 9 detailed real life stories demonstrating the lean way of bringing improvements. Are is a summary of 3 of these :</p>

<h2><a href="http://leanagilecamp.fr/guide.html#sc%C3%A8ne-de-crime-la-cat%C3%A9gorie-myst%C3%A8re-du-projet-condor">Unknown Category at Project Condor</a></h2>

<p><img class="center" src="http://philippe.bourgau.net/imgs/2016-03-06-are-most-agile-teams-doing-continuous-improvement-the-silly-way/condor.jpg" title="Issue indicators" ></p>

<p>The team maintains a virtual call center of poor quality, resulting in lots of incidents in production. Here is how they deal with the situation :</p>

<ol>
<li>They start by showing the issues, by categorizing them from the logs, they discover that they are mainly related to training, network, but surprisingly, the majority (30%) cannot be categorized and fall in the &lsquo;unknown&rsquo; category.</li>
<li>By improving logging, the unknown category falls to 5% ! Fixing network timeout issues then makes the client a lot happier.</li>
<li><p>Eventually, they go to client&rsquo;s site while monitoring the logs at the same time. They discover that remaining issues are explained by</p>

<ul>
<li>some users are using a double click to hack the system and jump ahead of the queue</li>
<li>the hang up and hang off buttons being too close, which results in operator misleadingly ending their communication</li>
<li>calls to wrong numbers being logged as incidents</li>
</ul>
</li>
</ol>


<p>The authors conclude that while uncomfortable, going to the clients increased motivation for everyone, fixed issues and made the client happier.</p>

<h2><a href="http://leanagilecamp.fr/guide.html#sc%C3%A8ne-de-crime-tous-coupables">All Guilty !</a></h2>

<p>An author is called to help a team which is working on unifying reimbursement systems after a merge. The project is late and the product is unreliable.</p>

<p>The first step he takes is to visualize a target (next batch in 3 months) and the flow</p>

<p><img class="center" src="http://philippe.bourgau.net/imgs/2016-03-06-are-most-agile-teams-doing-continuous-improvement-the-silly-way/target.jpg" title="Details of the 3 months target" ></p>

<p>The flow whiteboard shows that tasks get stuck when in need of clarifications from business analysts. Tension between people is already increasing. They Team decides to visualize this with &lsquo;blocker&rsquo; post-its.</p>

<p>After an inquire with the BAs, it turns out that they don&rsquo;t see the waiting tasks the issue management software.</p>

<p>The final step is to agree all together (developers and BAs) on an uniform way of defining and following blocking issues</p>

<p><img class="center" src="http://philippe.bourgau.net/imgs/2016-03-06-are-most-agile-teams-doing-continuous-improvement-the-silly-way/blockers.jpg" title="The shared blocked issues follow up wall board" ></p>

<p>Tickets are discussed at the stand-up, and unblocked issues are also visualized. As a result in only 2 weeks, the process fluidifies, and the tensions decrease.</p>

<p>The authors conclude that cross functional teams work better</p>

<h2><a href="http://leanagilecamp.fr/guide.html#sc%C3%A8ne-de-crime-joue-la-courte-et-pr%C3%A9cise">PDCA</a></h2>

<p>This story starts in a rather typical way : the client would like the team to go faster.</p>

<p>The team engages into a series of <a href="https://en.wikipedia.org/wiki/PDCA">Plan Do Check Act</a> cycles.</p>

<h3>Hypothesis 1 : There must be some obvious waste</h3>

<p>The team decides to log any waste occurring for 2 weeks. Even with discipline, only 2 hours are spotted during the 60 man.days of the sprint</p>

<h3>Hypothesis 2 : Too much refactoring or too much test writing</h3>

<p>For a few weeks, the authors keeps a daily log of the team activities during after every stand-up meeting.</p>

<p>It turns out that writing tests accounts for 5,5% of the time, refactoring for only 2% but programming for 40% !</p>

<h3>Hypothesis 3 : if there is something to improve, it must be in programming.</h3>

<p>For 20 half days, the author embarks on the tedious task of keeping a very detailed log of activities while taking the role of <a href="https://en.wikipedia.org/wiki/Pair_programming#Remote_pair_programming">navigator</a> in pair programming sessions.</p>

<p><img class="center" src="http://philippe.bourgau.net/imgs/2016-03-06-are-most-agile-teams-doing-continuous-improvement-the-silly-way/log.jpg" title="The detailed log of programming activities" >
<img class="center" src="http://philippe.bourgau.net/imgs/2016-03-06-are-most-agile-teams-doing-continuous-improvement-the-silly-way/activities.jpg" title="Ratio of different programming activities" ></p>

<p>They clearly understand that most time is taken not in writing tests, doing refactoring or writing complicated code, but in understanding existing code, third-parties and APIs</p>

<h3>Aftermath</h3>

<p>First, they avoided loosing time on improving the wrong thing
The team also agreed on the practice of asking for help at the good person when starting stories. Doing that, they got a nearly 100% speed boost !</p>

<h2>The rest of the book</h2>

<p>The book highlights a lot of other continuous improvement practices. For example :</p>

<ul>
<li>The &lsquo;problem box&rsquo; where team members can log any waste they are going through during their work. This made me think of my <a href="http://philippe.bourgau.net/a-plan-for-technical-debt-lean-software-development-part-7/">Plan For Technical Debt</a></li>
<li>Individual improvement follow up : a single team member is responsible to drive an improvement to its conclusion, in order to make sure that it is not forgotten</li>
</ul>


<p>I personally found this book to be just great ! It&rsquo;s short and focused, pragmatic, and a pretty easy read. If you liked <a href="http://www.infoq.com/minibooks/scrum-xp-from-the-trenches-2">Scrum and XP from the trenches</a> I think you should read it. More generally, I think it&rsquo;s very useful for anyone involved in the development process who would like to push agility a little further.</p>

<p>There&rsquo;s a catch though, it&rsquo;s in french ! I guess I could take the time to translate it, tell me if you are interested.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How Long Can Your Inner Drive Last ?]]></title>
    <link href="http://philippe.bourgau.net/how-long-can-your-inner-drive-last/"/>
    <updated>2016-02-25T06:41:00+00:00</updated>
    <id>http://philippe.bourgau.net/how-long-can-your-inner-drive-last</id>
    <category term="lean-startup" /><category term="side-project" /><category term="software" />
    <content type="html"><![CDATA[<p>Any software project (job, startup or side project) will require some time before one can get real feedback from real users.</p>

<p><img class="center" src="http://philippe.bourgau.net/imgs/2016-02-25-how-long-can-your-inner-drive-last/exhausted-runner.jpg" title="An exhausted runner" ></p>

<h2>The hard truth</h2>

<p>Your inner drive will only last up to some point. Without feedback, your motivation will die, and this will kill your project.</p>

<h2>How to deal with it ?</h2>

<h3>Know it before you start</h3>

<p>From my own past experiences, I could find that my inner drive has usually disappeared after 2 years (I don&rsquo;t want a word about the time I actually wasted to discover this &hellip;). You too can try to estimate how long you can keep on without much feedback, go through your previous experiences to get an idea.</p>

<p>Once you have an idea of how long you can keep on without much feedback, you&rsquo;re in a much better place to decide to embark on a new project.</p>

<h3>Don&rsquo;t drown in the code</h3>

<p>I once started a <a href="http://philippe.bourgau.net/rip-mes-courses-dot-fr/">side project</a> partly because I was fed up with the poor technologies I was asked to use at work. My project was some kind of salvation. The drawback of this situation is that I tended to dive into code way too early ! Building a real product takes time, and that&rsquo;s a sure way to get late feedback.</p>

<h3>Use Lean Startup techniques</h3>

<p><a href="http://www.amazon.com/UX-Lean-Startups-Experience-Research/dp/1449334911"><img class="center" src="http://philippe.bourgau.net/imgs/2016-02-25-how-long-can-your-inner-drive-last/ux-for-lean-startups.jpg" title="The cover of the book 'UX For Lean Startups'" ></a></p>

<p><a href="http://theleanstartup.com/">Lean Startup</a> is all about getting constant user feedback, even before having any user. I especially liked the book <a href="http://www.amazon.com/UX-Lean-Startups-Experience-Research/dp/1449334911">UX for Lean Startups</a> that explains all the ways to get feedback from the cheapest (interviews) to the most expensive (HTML mockups) without actually coding anything</p>

<h3>Watch out for the Duke Nukem Forever syndrome</h3>

<p>Be very careful of endeavors that promise an Eldorado after long hard work that should last months or years. Products need to ship early with as fewest features, not late with many features. If you embark on such project, you&rsquo;re pretty likely to :</p>

<ul>
<li>burn out before the end</li>
<li>deliver something that is already outdated the day it goes live</li>
<li>never deliver anything</li>
</ul>


<p>If you&rsquo;re already on such a project, I strongly suggest quitting.</p>

<h2>End word</h2>

<p>Maybe getting real feedback from real users takes time, but getting very early feedback from future users is almost always possible.</p>

<p>Keep going, get some feedback !</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Recipes For An Agile Workspace]]></title>
    <link href="http://philippe.bourgau.net/recipes-for-an-agile-workspace/"/>
    <updated>2016-02-17T06:40:00+00:00</updated>
    <id>http://philippe.bourgau.net/recipes-for-an-agile-workspace</id>
    <category term="agile" /><category term="lean" /><category term="selforganizing" /><category term="team-building" /><category term="workplace" />
    <content type="html"><![CDATA[<p>Nowadays, start-ups and tech companies seem to be competing for the most beautiful offices in order to attract top talents.</p>

<p><img class="center" src="http://philippe.bourgau.net/imgs/2016-02-17-recipes-for-an-agile-workspace/open-space.jpg" title="A nice modern and beautiful co-working space" ></p>

<p>Unfortunately, sometimes, it&rsquo;s just the good old office in disguise. At the opposite, some teams or companies actually think and decide how to organize their offices. For example, here is what <a href="https://twitter.com/kentbeck">Kent Beck</a> says about office setup in <a href="http://www.amazon.com/Extreme-Programming-Explained-Embrace-Change/dp/0201616416/ref=sr_1_2?ie=UTF8&amp;qid=1456177035&amp;sr=8-2&amp;keywords=extreme+programming+embrace+change">XP embrace change</a></p>

<blockquote><p>If you don&rsquo;t have a reasonable place to work, your project won&rsquo;t be successful. The difference
between a good space for the team and a bad space for the team is immediate and dramatic.</p></blockquote>

<p>Joel Spolsky has been blogging a lot about the office setups at <a href="http://www.joelonsoftware.com/articles/BionicOffice.html">FogBugz</a></p>

<p><a href="http://www.joelonsoftware.com/articles/BionicOffice.html"><img class="center" src="http://philippe.bourgau.net/imgs/2016-02-17-recipes-for-an-agile-workspace/fog-bugz.jpg" title="The beautiful FogBugz office" ></a></p>

<p>While defining its agile culture, <a href="http://fr.slideshare.net/JoakimSunden/agile-at-spotify">Spotify too designed custom offices</a></p>

<p><a href="http://fr.slideshare.net/JoakimSunden/agile-at-spotify"><img class="center" src="http://philippe.bourgau.net/imgs/2016-02-17-recipes-for-an-agile-workspace/spotify.jpg" title="Spotify offices" ></a></p>

<h2>How does it work ?</h2>

<p>Let&rsquo;s review a few office design practices to understand how they work :</p>

<h3>The team room or space</h3>

<p>Having a delimited room helps to build a real team. First, by isolating from noises, it helps the team to focus on its work and current topics. Second, by providing a visual barrier to cross before anyone can disturb the team. Finally, it allows the team to organize its own visual management.</p>

<p><img class="center" src="http://philippe.bourgau.net/imgs/2016-02-17-recipes-for-an-agile-workspace/spotify-team-room.jpg" title="Team private work place at spotify" ></p>

<h3>Private team gathering area</h3>

<p>An area where the team (and only the team) can meet at any time is great to do on the spot meetings (without the hassle of finding a room). This area should be comfortable and provide a relaxed and creative atmosphere (which is very important to conduct efficient retrospectives). It can also be used to take breaks and lunches, fostering team spirit again.</p>

<p><img class="center" src="http://philippe.bourgau.net/imgs/2016-02-17-recipes-for-an-agile-workspace/spotify-gathering-area.jpg" title="Team gathering area with writable walls and a wall screen at spotify" ></p>

<h3>Writable walls</h3>

<p>It&rsquo;s pretty easy to cover the walls with whiteboard stickers so that there is plenty of room for discussing design and otherwise keeping important things visible for everyone.</p>

<h3>Laptops, Wifi and movable desks</h3>

<p>Lean manufacturing favors simple, versatile and configurable machines over powerful specialised ones, which are often pretty long to setup. In software, we don&rsquo;t rely on machines as much as factories do, but there might be something to take here. Using laptops, a good Wifi and movable desks, it is pretty easy to reconfigure your office as it best fits the team at a particular moment. This way a team can easily adapt to personal preferences and turnover.</p>

<h3>Wall screens</h3>

<p>Agile and Lean thinkings both heavily use visual management. Having a lot of wall screens dedicated to displaying team relevant information in the team space brings a lot of value. To get the maximum benefit, these wall screens should be fully configurable and movable by the team.</p>

<p><img class="center" src="http://philippe.bourgau.net/imgs/2016-02-17-recipes-for-an-agile-workspace/wall-screens.jpg" title="Our own wall screens at work" ></p>

<h3>Team budget</h3>

<p>Eventually, in order to make sure the team can always work as efficiently as possible, it should have some money to spend for its workspace. It could be used to buy any of the upper, but also anything else that might help the team at a particular point in time. Without such a budget, teams have to make a request to the office department to get anything, often to no avail, or with extra long delays.</p>

<h2>Distributed teams</h2>

<p>Distributed teams bring their own challenges &hellip; and workplaces needs.</p>

<h3>Remote team space</h3>

<p>If your team is split between 2 places (as our team is at <a href="http://www.murex.com">Murex</a>) then obviously, each site should have its own delimited space, with its own gathering area.</p>

<h3>Constant visio connection</h3>

<p>Connecting gathering areas through visio is a great way to build the distributed team. It prevents loosing time when a meeting is required. It also builds the team by showing what&rsquo;s happening on the other side and by making it possible to take distributed lunches and breaks !</p>

<p><a href="http://www.infoq.com/presentations/distributed-team-agile"><img class="center" src="http://philippe.bourgau.net/imgs/2016-02-17-recipes-for-an-agile-workspace/distributed-lunch.jpg" title="A team sharing food remotely between offices" ></a></p>

<h3>Distributed whiteboards</h3>

<p>I never had the chance to work with one of these, but I often missed a whiteboard when working remotely &hellip; Any input on this subject would be welcome !</p>

<h2>Lego offices</h2>

<p>Here is another extract from Kent Beck&rsquo;s &ldquo;XP Embrace Change&rdquo;</p>

<blockquote><p>The courage value finds its expression in the XP attitude toward facilities. If the corporate attitude
toward facilities is at odds with the team&rsquo;s attitude, the team wins. If the computers are in the
wrong place, they are moved. If the partitions are in the way, they are taken down. If the lights are
too bright, they are taken out. If the phones are too loud, one day, mysteriously, they are all found
to have cotton stuffed in the bells.</p></blockquote>

<p>Improving the office is a cheap way to make a software organization more efficient. For another reference, here is what Tom DeMarco &amp; Tim Lister wrote in <a href="http://www.amazon.com/gp/product/0321934113/ref=s9_simh_gw_g14_i3_r?pf_rd_m=ATVPDKIKX0DER&amp;pf_rd_s=desktop-1&amp;pf_rd_r=1K2KEWBRQK6F1R26D5D2&amp;pf_rd_t=36701&amp;pf_rd_p=2079475242&amp;pf_rd_i=desktop">Peopleware</a></p>

<blockquote><p>Police-mentality planners design workplaces the way they would design prisons: optimized for containment at minimal cost. We have unthinkingly yielded to them on the subject of workplace
design, yet for most organizations with productivity problems, there is no more fruitful area for improvement than the workplace. As long as workers are crowded into noisy, sterile, disruptive space, it&rsquo;s not worth improving anything but the <strong>workplace</strong>.</p></blockquote>

<p>Instead of designing offices, furniture departments in companies could provide a constant stock of building blocks for office building. Teams could use a workplace budget to build the workspace that suits them most. A good Wifi, laptops, enough floor power plugs, extra screens, movable tables, movable walls and easy to fix wall monitors are all things that would make this possible.</p>

<p><img class="center" src="http://philippe.bourgau.net/imgs/2016-02-17-recipes-for-an-agile-workspace/lego-office.jpg" title="A miniature office in Legos" ></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How I fixed 'invalid byte sequence in US-ASCII' exception with octopress (and vagrant)]]></title>
    <link href="http://philippe.bourgau.net/how-i-fixed-invalid-byte-sequence-in-us-ascii-exception-with-octopress-and-vagrant/"/>
    <updated>2016-02-10T05:59:00+00:00</updated>
    <id>http://philippe.bourgau.net/how-i-fixed-invalid-byte-sequence-in-us-ascii-exception-with-octopress-and-vagrant</id>
    <category term="octopress" /><category term="vagrant" />
    <content type="html"><![CDATA[<p>I don&rsquo;t know if you noticed, but <a href="http://octopress.org/">Octopress 2</a> preview is slow as hell on <a href="https://www.virtualbox.org/">Virtual Box</a>. I wanted to try using <a href="https://www.docker.com/">Docker</a> instead. So a few weeks ago, I started to upgrade my <a href="https://www.vagrantup.com/">Vagrant</a>, Virtual Box and Docker stack &hellip;</p>

<p>Hell loose !</p>

<p><img class="center" src="http://philippe.bourgau.net/imgs/2016-02-10-how-i-fixed-invalid-byte-sequence-in-us-ascii-exception-with-octopress-and-vagrant/upgrade_hell.jpg" title="A naughty dog with a banner &#34;I'm in upgrade hell&#34;" alt="A naughty dog with a banner &#34;I'm in upgrade hell&#34;"></p>

<p>I know all open source software needs to be kept up to date at all time, but it&rsquo;s not that easy. Especialy when the versions in the <a href="http://www.ubuntu.com/">Ubuntu</a> repostiories are really old and you had to install them manually. Anyway, after a bit of tedious work, I finally got to the point where my Octopress blog was running on a brand new stack. And I got this error :</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>vagrant@239c4077ae16:/vagrant$bundle exec rake generate
</span><span class='line'>## Generating Site with Jekyll
</span><span class='line'>unchanged sass/screen.scss
</span><span class='line'>/vagrant/vendor/bundle/gems/liquid-2.3.0/lib/liquid/htmltags.rb:44: warning: duplicated key at line 47 ignored: "index0"
</span><span class='line'>Configuration from /vagrant/_config.yml
</span><span class='line'>Building site: source -&gt; public
</span><span class='line'>YAML Exception reading index.markdown: invalid byte sequence in US-ASCII
</span><span class='line'>/vagrant/plugins/backtick_code_block.rb:13:in `gsub': invalid byte sequence in US-ASCII (ArgumentError)
</span><span class='line'>  from /vagrant/plugins/backtick_code_block.rb:13:in `render_code_block'
</span><span class='line'>  from /vagrant/plugins/octopress_filters.rb:12:in `pre_filter'
</span><span class='line'>  from /vagrant/plugins/octopress_filters.rb:28:in `pre_render'
</span><span class='line'>  from /vagrant/plugins/post_filters.rb:112:in `block in pre_render'
</span><span class='line'>  from /vagrant/plugins/post_filters.rb:111:in `each'
</span><span class='line'>  from /vagrant/plugins/post_filters.rb:111:in `pre_render'
</span><span class='line'>  from /vagrant/plugins/post_filters.rb:166:in `do_layout'
</span><span class='line'>  from /vagrant/vendor/bundle/gems/jekyll-0.12.1/lib/jekyll/page.rb:100:in `render'
</span><span class='line'>  from /vagrant/vendor/bundle/gems/jekyll-0.12.1/lib/jekyll/site.rb:204:in `block in render'
</span><span class='line'>  from /vagrant/vendor/bundle/gems/jekyll-0.12.1/lib/jekyll/site.rb:203:in `each'
</span><span class='line'>  from /vagrant/vendor/bundle/gems/jekyll-0.12.1/lib/jekyll/site.rb:203:in `render'
</span><span class='line'>  from /vagrant/vendor/bundle/gems/jekyll-0.12.1/lib/jekyll/site.rb:41:in `process'
</span><span class='line'>  from /vagrant/vendor/bundle/gems/jekyll-0.12.1/bin/jekyll:264:in `&lt;top (required)&gt;'
</span><span class='line'>  from /vagrant/vendor/bundle/bin/jekyll:23:in `load'
</span><span class='line'>  from /vagrant/vendor/bundle/bin/jekyll:23:in `&lt;main&gt;'</span></code></pre></td></tr></table></div></figure>


<p>After some searching on the internet, I found <a href="http://alexzeitler.com/blog/2012/01/15/rake-generate-for-octopress-fails-with-invalid-byte-sequence-in-us-ascii-argumenterror/">this post</a> by Alex Zeitler that made me figure out that locales were not set correctly by default on my vm. I just needed to set this once and for all in my Vagrantfile</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>config.vm.provision "shell", privileged: false, inline: &lt;&lt;-SHELL
</span><span class='line'>  if [ -z "$LANG" ]; then
</span><span class='line'>    echo "Setting LANG to us UTF8"
</span><span class='line'>    echo 'export LANG=en_US.UTF-8' &gt;&gt; ~/.bashrc
</span><span class='line'>  fi
</span><span class='line'>  if [ -z "$LC_ALL" ]; then
</span><span class='line'>    echo "Setting LC_ALL to us UTF8"
</span><span class='line'>    echo 'export LC_ALL=en_US.UTF-8' &gt;&gt; ~/.bashrc
</span><span class='line'>  fi
</span><span class='line'>SHELL</span></code></pre></td></tr></table></div></figure>


<p>After reprovisioning my box, generate and preview were working as expected !</p>

<p>:&ndash;( Now I&rsquo;ve got a pygement-ruby issue to deal with, I guess I&rsquo;ll be back on the subject soon &hellip;</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How To Keep Programming When Assigned A Management Job]]></title>
    <link href="http://philippe.bourgau.net/how-to-keep-programming-when-assigned-a-management-job/"/>
    <updated>2016-02-03T08:45:00+00:00</updated>
    <id>http://philippe.bourgau.net/how-to-keep-programming-when-assigned-a-management-job</id>
    <category term="agile" /><category term="management" /><category term="management30" /><category term="selforganizing" />
    <content type="html"><![CDATA[<p>Remaining a competent developer is a career long effort, if you stop programming, you&rsquo;ll loose it ! As time goes, we are regularly <del>offered</del> pushed into management positions, sometimes by cluelessness, other times by cheer necessity ! Be it temporary or long term, here are some techniques to remain a relevant developer.</p>

<h2>How Joe became a manager</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>def work
</span><span class='line'>  if manager?
</span><span class='line'>    go_to_meetings
</span><span class='line'>  else
</span><span class='line'>    program
</span><span class='line'>  end
</span><span class='line'>end</span></code></pre></td></tr></table></div></figure>


<p>Imagine you&rsquo;re Joe, an expert developer in a small software company. Everything is going fine, he&rsquo;s working on interesting subjects with 4 other, rather junior, team mates. Management is OK, at least good enough not to cause too many troubles.</p>

<p>Suddenly, the team manager leaves for a better position in another company. Unprepared for this, the small organization has difficulties to find a suitable replacement, and, you&rsquo;ll guess it, Joe is asked to take on management responsibilities until someone gets hired. How is Joe going to continue to do a good job at both programming and management ?</p>

<h2>His first reaction</h2>

<p>Two weeks into the job, Joe takes a step back and summarizes :</p>

<ul>
<li>he feels depressed when he does not program for a long time</li>
<li>he has the feeling he&rsquo;s been jumping from A to B to C to Z to A, and so on for two weeks without actually getting a lot done</li>
<li>he feels everyone is waiting for him to do things before they move</li>
<li>his mailbox is starting to make him nervous</li>
<li>it&rsquo;s difficult to program anything if you are interrupted by meetings throughout the day</li>
</ul>


<p>Joe figures out that he needs to reduce his management work if he wants to get back to programming.  After setting up an efficient <a href="bye-bye-programmers-todo-list-hello-personnal-kanban-on-jira/">TODO list</a>. He has already read some personnal effectiveness books, so he knows how one can reduce his amount of work :</p>

<ul>
<li>say no : he&rsquo;ll have to keep this in mind all the time, especially when accepting meetings or when asked for some new work</li>
<li>automate : some tasks can be automated, others can be partly automated by a good process. He&rsquo;ll have to regularly stop and think to improve how he works</li>
<li>delegate : he&rsquo;d like to push more work to the team, but it will take some time. He decides to read things on self-organized team to know how to do</li>
</ul>


<h2>Joe&rsquo;s measure of programming time</h2>

<p>In order to get some continuous time for programming, Joe books &lsquo;programming days&rsquo; in his calendar. This is also a way to say no to other meetings during this period. He starts with all Mondays, he hopes he&rsquo;ll be able to book others days as he manages to do more programming. His ideal would be to book all week for programming (while still having the management job get done !)</p>

<p>This works well, and gives Joe a motivation boost since he has the opportunity to program again :&ndash;). There are still a few glitches though :</p>

<ul>
<li>Joe often doesn&rsquo;t program &lsquo;on his own&rsquo; on Mondays because he is spending is time with junior programmers who are really appreciating his help</li>
<li>Joe once made the mistake of committing to a critical programming task that he did not manage to finish in 1 day and had to hand it over to another developer, losing more time</li>
</ul>


<p>Joe is realizing that he is more of a programming coach than a direct developer now, and that he should not commit on critical tasks but rather help others to do so. Pair programming is becoming the norm for him.</p>

<h2>Communication time</h2>

<p>While doing his full programming days, Joe realized that emails can wait. If people want an immediate answer, let them use the phone ! He now reads and answers his emails in the morning when he arrives at work, at noon just after lunch and on evenings, just before leaving. That&rsquo;s good enough for a day !</p>

<p>Joe also had to interrupt his programming day once for an urgent meeting &hellip; he now reserves 1 hour at the end of his programming days to handle such urgent meetings without interrupting his programming time.</p>

<h2>Self organized teams</h2>

<p>Meanwhile, Joe read some books about self organized teams, such as <a href="http://www.amazon.com/Workout-Practices-Improve-Delight-Clients/dp/9492032023/ref=sr_1_1?ie=UTF8&amp;qid=1454480226&amp;sr=8-1&amp;keywords=management+3.0+workout">Management 3.0 Workout</a> by Jurgen Appelo.</p>

<p><a href="https://management30.com/product/workouts/"><img class="center" src="http://philippe.bourgau.net/imgs/2016-02-03-how-to-keep-programming-when-assigned-a-management-job/management-workout.jpg" title="Management 3.0 Workout Book Cover" ></a></p>

<p>Self organization is some kind of aggressive delegation. Joe sees management as described in these books as a way to increase purpose and motivation throughout the team, while getting him more time for programming.</p>

<p>This kind of management perfectly suits agile teams. His team is already using some agile practices, such as automated testing, some kind of continuous integration, and quite a few others, to varying degrees. Joe decides to embark his team on a road to self organization, and to start by applying all the standard Scrum and eXtreme Programming practices. In parallel, he introduces the rolling Scrum Master role, where sprint after sprint, a different team member is responsible for :</p>

<ul>
<li>organizing the recurring team meetings</li>
<li>representing the team in outside meetings</li>
<li>grooming the backlog before the demo and planning</li>
</ul>


<p>This alone frees Joe 1 or 2 days of programming every week. He now helps his team mates to master all the technical agile practices they are not used to.</p>

<h2>More self organization</h2>

<p>A few months later, the team is doing well, Joe has some time for programming, but he still has some pure management job to do. From what he read from self organized teams, even these subjects can be delegated ! He decides to start workshops with the team :</p>

<ul>
<li>How can we handle vacations in a self organized way ?</li>
<li>How can we handle the hiring in a self organized way ?</li>
<li>How can we handle performance feedback and pay raises in a self organized way ?</li>
</ul>


<p>The journey is long and rough : one team member left as they were going seriously into agile. Nevertheless the team is already more motivated than it ever was, and delivers more value than it ever did.</p>

<h2>The end result for Joe</h2>

<p>Joe is now programming nearly as much as his team mates ! Most of his programming time is coaching time though. He does not sit and hack his way into a feature as he used to do. He&rsquo;s missing that a bit, he&rsquo;s also missing learning new technologies.</p>

<p>That&rsquo;s why he started working on <a href="http://philippe.bourgau.net/my-own-side-project-best-practices-after-reading-the-side-project-book">side projects</a> at home, using the latest hype JavaScript framework. He&rsquo;s reading generalist programming books also, such as the <a href="http://www.amazon.com/s/ref=nb_sb_noss_2?url=search-alias%3Daps&amp;field-keywords=%22in+seven+weeks%22&amp;rh=i%3Aaps%2Ck%3A%22in+seven+weeks%22">7 XXX in 7 weeks</a> series which allow him to learn without loosing time on technical quirks he&rsquo;s not interested in at the moment &hellip;</p>

<p><a href="http://www.amazon.com/Seven-Languages-Weeks-Programming-Programmers/dp/193435659X/ref=sr_1_1?ie=UTF8&amp;qid=1454739459&amp;sr=8-1&amp;keywords=7+languages+in+7+weeks"><img class="center" src="http://philippe.bourgau.net/imgs/2016-02-03-how-to-keep-programming-when-assigned-a-management-job/7-languages.jpg" title="Seven Languages In Seven Weeks Book Cover" ></a></p>

<p>Good luck Joe !</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How I fixed 'Warning: Authentication failure. Retrying' with Vagrant]]></title>
    <link href="http://philippe.bourgau.net/how-i-fixed-warning-authentication-failure-retrying-with-vagrant/"/>
    <updated>2016-01-31T06:39:00+00:00</updated>
    <id>http://philippe.bourgau.net/how-i-fixed-warning-authentication-failure-retrying-with-vagrant</id>
    <category term="vagrant" />
    <content type="html"><![CDATA[<p>Lately, I went into an upgrade cycle : <a href="http://www.ubuntu.com/">Ubuntu</a>, which forced me to upgrade <a href="https://www.docker.com/">Docker</a>, and then <a href="https://www.vagrantup.com/">Vagrant</a> &hellip; you know the story. Unfortunately, my vagrant config did not want to start anymore with the following error :</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Warning: Authentication failure. Retrying
</span><span class='line'>Warning: Authentication failure. Retrying
</span><span class='line'>Warning: Authentication failure. Retrying
</span><span class='line'>Warning: Authentication failure. Retrying
</span><span class='line'>Warning: Authentication failure. Retrying
</span><span class='line'>Warning: Authentication failure. Retrying
</span><span class='line'>Warning: Authentication failure. Retrying
</span><span class='line'>...</span></code></pre></td></tr></table></div></figure>


<p><img class="center" src="http://philippe.bourgau.net/imgs/2016-01-31-how-i-fixed-warning-authentication-failure-retrying-with-vagrant/ssh.jpg" title="A screen with the ssh prompt" ></p>

<p>I tried to destroy and re-create my box with the same result : it eventually timedout, but the provisions were not executed.</p>

<p>After searching the internet and a lot of experimentation, I managed to make it work by commenting out the following line in my Vagrantfile</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># config.ssh.private_key_path = "~/.ssh/id_rsa"</span></code></pre></td></tr></table></div></figure>


<p>I think I added this a long time ago to be able to push to github from my Vagrantbox, but after trying it, it work with the difference of my having to validate the remote ssh key, that&rsquo;s not of a big deal.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Most Common Ways To Speed up an algorithm]]></title>
    <link href="http://philippe.bourgau.net/most-common-ways-to-speed-up-an-algorithm/"/>
    <updated>2016-01-20T05:14:00+00:00</updated>
    <id>http://philippe.bourgau.net/most-common-ways-to-speed-up-an-algorithm</id>
    <category term="algorithms" /><category term="performance" /><category term="ruby" />
    <content type="html"><![CDATA[<p>Algorithms are <em>hard</em>, and making them fast is even harder &hellip; But there are shortcuts that work quite often !</p>

<p><img class="center" src="http://philippe.bourgau.net/imgs/2016-01-20-most-common-ways-to-speed-up-an-algorithm/shortcut-road.jpg" title="A street panel called Short Cut Road" ></p>

<h2>The Challenge</h2>

<p>Imagine you just arrived to your new job, and you are asked to make a part of the system faster. After a bit of investigation, you discover that most of the time is spent in some weird in-house algorithm that seems to take forever. How can you optimize this without deep knowledge neither in algorithm science nor in the code itself ?</p>

<p>Here are 4 tricks to reduce the complexity of algorithms (I&rsquo;m using fairly basic examples for the sake of understandably. Most of these exact examples could be done better using standard libraries, but I hope it will be easy to adapt to other situations) :</p>

<h3>Replace a nested loop by first building a hash and then looping</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># before</span>
</span><span class='line'><span class="n">orders</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">order</span><span class="o">|</span>
</span><span class='line'>  <span class="n">client</span> <span class="o">=</span> <span class="n">list_of_clients</span><span class="o">.</span><span class="n">find</span> <span class="p">{</span><span class="o">|</span><span class="n">client</span><span class="o">|</span> <span class="n">client</span><span class="o">.</span><span class="n">id</span> <span class="o">=</span> <span class="n">order</span><span class="o">.</span><span class="n">client_id</span> <span class="p">}</span>
</span><span class='line'>  <span class="n">handle_order</span><span class="p">(</span><span class="n">order</span><span class="p">,</span> <span class="n">client</span><span class="p">)</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># after</span>
</span><span class='line'><span class="n">clients_by_id</span> <span class="o">=</span> <span class="p">{}</span>
</span><span class='line'><span class="n">list_of_clients</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">client</span><span class="o">|</span>
</span><span class='line'>  <span class="n">clients_by_id</span><span class="o">[</span><span class="n">client</span><span class="o">.</span><span class="n">id</span><span class="o">]</span> <span class="o">=</span> <span class="n">client</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'><span class="n">orders</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">order</span><span class="o">|</span>
</span><span class='line'>  <span class="n">handle_order</span><span class="p">(</span><span class="n">order</span><span class="p">,</span> <span class="n">clients_by_id</span><span class="o">[</span><span class="n">order</span><span class="o">.</span><span class="n">client_id</span><span class="o">]</span><span class="p">)</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>This reduces the complexity from O(2) to O(1). This is tremendous. On large lists O(2) algorithms are terrible.</p>

<h3>Remove unnecessary accumulations</h3>

<p>The most classic example is the use of a string buffer :</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="sr">//</span> <span class="no">Before</span>
</span><span class='line'><span class="n">report</span> <span class="o">=</span> <span class="s2">&quot;&quot;</span>
</span><span class='line'><span class="n">line_items</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">line_item</span><span class="o">|</span>
</span><span class='line'>  <span class="n">report</span> <span class="o">+=</span> <span class="n">line_item</span><span class="o">.</span><span class="n">to_s</span> <span class="o">+</span> <span class="s2">&quot;</span><span class="se">\n</span><span class="s2">&quot;</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="sr">//</span> <span class="no">After</span>
</span><span class='line'><span class="n">report</span> <span class="o">=</span> <span class="o">[]</span>
</span><span class='line'><span class="n">line_items</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">line_item</span><span class="o">|</span>
</span><span class='line'>  <span class="n">report</span> <span class="o">&lt;&lt;</span> <span class="n">line_item</span><span class="o">.</span><span class="n">to_s</span>
</span><span class='line'>  <span class="n">report</span> <span class="o">&lt;&lt;</span> <span class="s2">&quot;</span><span class="se">\n</span><span class="s2">&quot;</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'><span class="n">report</span><span class="o">.</span><span class="n">join</span>
</span></code></pre></td></tr></table></div></figure>


<p>Again, this reduces the complexity from O(2) to O(1). Every language has variants of Java&rsquo;s StringBuilders. This does not only apply for strings, it works any time you are repeatedly accumulating results inside a loop but where you could do it only once at the end.</p>

<h3>Cache intermediate or previous results</h3>

<p>This is called <a href="https://en.wikipedia.org/wiki/Memoization">memoization</a>. Some algorithms (especially recursive algorithms) repeatedly compute the same thing again and again. Spotting this pattern is an opportunity to move an algorithm out of exponential complexity. For example, <a href="https://en.wikipedia.org/wiki/Dijkstra%27s_algorithm">Dijsktra&rsquo;s algorithm</a> for finding the shortest path in a graph uses this technique to go from O(e<sup>n</sup>) to O(n<sup>2</sup>) complexity. If you suspect this could be helpful, your best friend is logging to trace actual parameters and results.</p>

<p><a href="https://en.wikipedia.org/wiki/Dijkstra%27s_algorithm#/media/File:Dijkstras_progress_animation.gif"><img class="center" src="http://philippe.bourgau.net/imgs/2016-01-20-most-common-ways-to-speed-up-an-algorithm/Dijkstras_progress_animation.gif" title="Dijsktra's path finding algorithm animated (from Wikipedia)" ></a></p>

<p>A word of caution : using memoization with mutable inputs or outputs will harm your mental health.</p>

<h3><a href="https://en.wikipedia.org/wiki/Merge_algorithm#Merging_two_lists">Zip merge</a></h3>

<p>There are 2 ways to merge sorted lists into a unique sorted list : the fast, and the slow &hellip;</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># The slow</span>
</span><span class='line'><span class="p">(</span><span class="n">list_1</span> <span class="o">+</span> <span class="n">list_2</span><span class="p">)</span><span class="o">.</span><span class="n">sort</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># The fast</span>
</span><span class='line'><span class="n">i_1</span> <span class="o">=</span> <span class="mi">0</span>
</span><span class='line'><span class="n">i_2</span> <span class="o">=</span> <span class="mi">0</span>
</span><span class='line'><span class="n">result</span> <span class="o">=</span> <span class="o">[]</span>
</span><span class='line'>
</span><span class='line'><span class="k">while</span> <span class="n">i_1</span> <span class="o">&lt;</span> <span class="n">list_1</span><span class="o">.</span><span class="n">size</span> <span class="ow">and</span> <span class="n">i_2</span> <span class="o">&lt;</span> <span class="n">list_2</span><span class="o">.</span><span class="n">size</span>
</span><span class='line'>  <span class="k">if</span> <span class="n">list_1</span><span class="o">[</span><span class="n">i_1</span><span class="o">]</span> <span class="o">&lt;=</span> <span class="n">list_2</span><span class="o">[</span><span class="n">i_2</span><span class="o">]</span>
</span><span class='line'>    <span class="n">result</span> <span class="o">&lt;&lt;</span> <span class="n">list_1</span><span class="o">[</span><span class="n">i_1</span><span class="o">]</span>
</span><span class='line'>    <span class="n">i_1</span> <span class="o">+=</span> <span class="mi">1</span>
</span><span class='line'>  <span class="k">elsif</span> <span class="n">list_2</span><span class="o">[</span><span class="n">i_2</span><span class="o">]</span> <span class="o">&lt;=</span> <span class="n">list_1</span><span class="o">[</span><span class="n">i_1</span><span class="o">]</span>
</span><span class='line'>    <span class="n">result</span> <span class="o">&lt;&lt;</span> <span class="n">list_2</span><span class="o">[</span><span class="n">i_2</span><span class="o">]</span>
</span><span class='line'>    <span class="n">i_2</span> <span class="o">+=</span> <span class="mi">1</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">while</span> <span class="n">i_1</span> <span class="o">&lt;</span> <span class="n">list_1</span><span class="o">.</span><span class="n">size</span>
</span><span class='line'>  <span class="n">result</span> <span class="o">&lt;&lt;</span> <span class="n">list_1</span><span class="o">[</span><span class="n">i_1</span><span class="o">]</span>
</span><span class='line'>  <span class="n">i_1</span> <span class="o">+=</span> <span class="mi">1</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">while</span> <span class="n">i_2</span> <span class="o">&lt;</span> <span class="n">list_2</span><span class="o">.</span><span class="n">size</span>
</span><span class='line'>  <span class="n">result</span> <span class="o">&lt;&lt;</span> <span class="n">list_2</span><span class="o">[</span><span class="n">i_2</span><span class="o">]</span>
</span><span class='line'>  <span class="n">i_2</span> <span class="o">+=</span> <span class="mi">1</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>Obviously, the slow version is a lot easier to read than the fast one. And the fast one could benefit from a bit of refactoring also &hellip; Nevertheless, the slow version is at best in O(n.ln(n)) whereas the fast on is in O(n). On large data, that can make a big difference.</p>

<h2>Is that all ?</h2>

<p>Obviously not, there can be a lot of other things going on slowly in algorithms, but from my experience, a software engineer can have a good career without knowing more about algorithms theory than that.</p>

<p>In the end, you manage to optimize this in-house algorithm, you become the company&rsquo;s hero, you need your job and get a pay raise !</p>

<h2>End word</h2>

<p>The fact is, in 15 years of writing software, I did not write a lot of algorithmic code. I can categories my working with algorithms in 3 :</p>

<ol>
<li>Write a simple algorithm for a non performance critical feature</li>
<li>Optimize an existing somewhat algorithmic part of code</li>
<li>Write a complex algorithm for a performance critical part of the system</li>
</ol>


<p>Case 1. is not really an issue since however the code will be written, it will run fast enough. If you&rsquo;re in case 3, there&rsquo;s no shortcut, you&rsquo;ll have to dig deep into algorithms and optimization, this happens rather rarely though. This leaves us with case 2, which I just wrote about.</p>

<p>Interestingly, <a href="http://www.murex.com">my current job</a> is deep into case 3 ! We&rsquo;re building a risk engine for corporate markets and are borrowing a lot of techniques from database science &hellip; which is, you can guess, rather algorithmic !</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How We Started Exploratory Testing]]></title>
    <link href="http://philippe.bourgau.net/how-we-started-exploratory-testing/"/>
    <updated>2016-01-08T18:18:00+00:00</updated>
    <id>http://philippe.bourgau.net/how-we-started-exploratory-testing</id>
    <category term="agile" /><category term="testing" /><category term="workplace" />
    <content type="html"><![CDATA[<p>Manual testing is important. Here is how we got to love exploratory testing.</p>

<p><img class="center" src="http://philippe.bourgau.net/imgs/2016-01-08-how-we-started-exploratory-testing/explore.jpg" title="A map and a telescope for exploration" ></p>

<h2>Initial situation</h2>

<p><a href="http://www.murex.com">At work</a> we are building a risk computation engine for the financial markets. It uses a DSL to describe the exact computations to estimate the risk on the data it knows. This in itself is already complex enough to justify the heavy investment in automated testing we did.</p>

<p>With 90% of automated test coverage, Cucumber scenarios to verify quality, everything should just work &hellip; shouldn&rsquo;t it ?</p>

<h2>First try at exploratory testing</h2>

<p><a href="http://www.amazon.com/Art-Agile-Development-James-Shore/dp/0596527675/ref=sr_1_1?ie=UTF8&amp;qid=1452279644&amp;sr=8-1&amp;keywords=the+art+of+agile+development"><img class="center" src="http://philippe.bourgau.net/imgs/2016-01-08-how-we-started-exploratory-testing/art-of-agile-development.jpg" title="The cover of the Art Of Agile Development" ></a></p>

<p>In <a href="http://www.amazon.com/Art-Agile-Development-James-Shore/dp/0596527675/ref=sr_1_1?ie=UTF8&amp;qid=1452279644&amp;sr=8-1&amp;keywords=the+art+of+agile+development">The art of agile development</a>, James Shore details the practice of exploratory testing as a great way of both :</p>

<ul>
<li>improving the quality of the product by finding bugs</li>
<li>improving the process</li>
</ul>


<p>That&rsquo;s why we gave it a try. Here is the recipe for an exploratory session :</p>

<ol>
<li>Book 1 hour for the full team to do exploratory testing</li>
<li>Prepare a downloadable zip with all the material required to run and test your software</li>
<li>Ask everyone to pick a particular aspect of the system to test during this session</li>
<li>Record bugs when you find one</li>
<li>Spend 30 minutes just after the session to filter duplicate bugs and make sure they are well described</li>
</ol>


<p>Obviously, we also added our special sauce</p>

<ol>
<li>We were to do exploratory testing in pairs, as we do programming, to find more bugs</li>
<li>We gamified it by granting a price to the pair that finds the most bugs. Do you remember how I brought <a href="http://philippe.bourgau.net/how-to-setup-a-weekly-fruit-basket-in-no-time/">fruits for sale in the office</a> ? It turns out we are slowly earning money with the fruits &hellip; enough for the price to be 5 fruits each for the wining pair !</li>
</ol>


<p>This transformed developers into ferocious testers ! I guarantee that with such incentives you&rsquo;ll find bugs &hellip; as we did.</p>

<p><a href="http://philippe.bourgau.net/how-to-setup-a-weekly-fruit-basket-in-no-time/"><img class="center" src="http://philippe.bourgau.net/imgs/2016-01-08-how-we-started-exploratory-testing/fruits-basket.jpg" title="Our weekly fruit basket at work" ></a></p>

<h2>Doing it systematically</h2>

<p>We took some time to fix all these bugs during a few sprints. And did another exploratory testing session a few months after &hellip;</p>

<p>As we were still finding bugs in the second session, we decided to make them part of the every sprint. As we got better at testing, a lot of bugs started to get uncovered ! So much that we had to change something.</p>

<h2>Improving our process</h2>

<p>We meet in retrospective and here is what we decided :</p>

<ol>
<li>Fix all bugs before working on any other story (obviously, automated tests are added in the process)</li>
<li>Classify what exactly is a bug. For example, for us, a bug is something that used to work or silently returns bad results or corrupts the data</li>
<li>Add exploratory testing by another pair to our definition of done</li>
</ol>


<p>The number of bugs we find during exploratory testing sessions is starting to decrease. We hope that we&rsquo;ll soon be able to do exploratory testing on the fly, as part of our daily work and to completely remove the specific sessions.</p>

<h2>Benefits</h2>

<p>Exploratory testing brought us a lot.</p>

<ul>
<li>Obviously, the product is a lot more solid</li>
<li>We are surely saving time that would have been lost if the bugs had been uncovered by the users</li>
<li>Fixing the bugs forced us to fix some technical debt : bugs often came from areas of the code that we were not so proud or confident of</li>
</ul>


<p>Exploratory testing is a nobrainer. All teams should do it.</p>

<p>So, in the end, as in the old days, we are back to regular manual testing &hellip; but only for exploration.</p>
]]></content>
  </entry>
  
</feed>
