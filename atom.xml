<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Philippe Bourgau's blog]]></title>
  <link href="http://philippe.bourgau.net/atom.xml" rel="self"/>
  <link href="http://philippe.bourgau.net/"/>
  <updated>2017-02-02T06:08:30+00:00</updated>
  <id>http://philippe.bourgau.net/</id>
  <author>
    <name><![CDATA[Philippe Bourgau]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[How I fixed 'devicemapper' error when deploying my Docker app]]></title>
    <link href="http://philippe.bourgau.net/how-i-fixed-devicemapper-error-when-deploying-my-docker-app/"/>
    <updated>2017-02-01T17:41:00+00:00</updated>
    <id>http://philippe.bourgau.net/how-i-fixed-devicemapper-error-when-deploying-my-docker-app</id>
    <category term="docker" /><category term="exploitation" />
    <content type="html"><![CDATA[<p>A few months ago, I started continuously deploying my <a href="https://github.com/philou/planning-poker">latest side project</a> to a <a href="https://cloud.digitalocean.com">Digital Ocean</a> box. If you are interested, <a href="http://philippe.bourgau.net/continuously-deliver-a-rails-app-to-your-digital-ocean-box-using-docker/">here</a> is the full story of how I did it. All was going pretty well until last week, when the builds unexpectedly started to fail. I wasn&rsquo;t getting the same error at every build, but it was always the <a href="https://www.docker.com/">Docker</a> deployment that failed. Here are the kind of errors I got :</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># At first, it could not connect to the db container</span>
</span><span class='line'>PG::ConnectionBad: could not translate host name <span class="s2">&quot;db&quot;</span> to address: Name or service not known
</span><span class='line'>
</span><span class='line'><span class="c"># Then I started to have weird EOF errors</span>
</span><span class='line'>docker stderr: failed to register layer: ApplyLayer <span class="nb">exit </span>status 1 stdout:  stderr: unexpected EOF
</span><span class='line'>
</span><span class='line'><span class="c"># Eventually, I got some devicemapper errors</span>
</span><span class='line'>docker stderr: failed to register layer: devicemapper: Error running deviceCreate <span class="o">(</span>createSnapDevice<span class="o">)</span> dm_task_run failed
</span></code></pre></td></tr></table></div></figure>


<p>You can read the full error logs <a href="https://circleci.com/gh/philou/planning-poker/tree/master">here</a>.</p>

<h2>That&rsquo;s what happens when you go cheap !</h2>

<p>After searching the internet a bit, I found <a href="https://github.com/docker/docker/issues/6325">this issue</a> which made me understand that my server had ran out of disk space because of old versions of my docker images. I tried to remove them, but the commands were failing. After some more search, I found <a href="https://github.com/docker/docker/issues/26015">this other issue</a> and came to the conclusion that there was no solution except resetting docker completely. Hopefully, Digital Ocean has a button for rebuilding the VM.</p>

<p><a href="http://philippe.bourgau.net/imgs/2017-02-01-how-i-fixed-devicemapper-error-when-deploying-my-docker-app/reset-digitalocean.jpg"><img class="center" src="http://philippe.bourgau.net/imgs/2017-02-01-how-i-fixed-devicemapper-error-when-deploying-my-docker-app/reset-digitalocean-small.jpg" title="A screenshot of the rebuild screen on digitalocean" ></a></p>

<p>Once the VM was rebuilt, the first thing that I did was to try to connect from my shell on my local machine. I had to clean up my known host file, but that was simple enough.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>nano ~/.ssh/known_hosts
</span></code></pre></td></tr></table></div></figure>


<p>Once this was done, I just followed the steps I had documented in my <a href="http://philippe.bourgau.net/continuously-deliver-a-rails-app-to-your-digital-ocean-box-using-docker/">previous blog post</a></p>

<p>Was I all done ?</p>

<p>Almost &hellip; I ran into another kind of errors this time. Processes kept getting killed on my VM.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>INFO <span class="o">[</span>cc536697<span class="o">]</span> Running /usr/bin/env docker-compose -f docker-compose.production.yml run app bundle <span class="nb">exec </span>rake db:migrate as root@104.131.47.10
</span><span class='line'>rake aborted!
</span><span class='line'>SSHKit::Runner::ExecuteError: Exception <span class="k">while </span>executing as root@104.131.47.10: docker-compose <span class="nb">exit </span>status: 137
</span><span class='line'>docker-compose stdout: Nothing written
</span><span class='line'>docker-compose stderr: Starting root_db_1
</span><span class='line'>bash: line 1: 18576 Killed
</span></code></pre></td></tr></table></div></figure>


<p>After some more Google searching, I discovered that this time, the VM was running out of memory ! The fast fix was to upgrade the VM (at the extra cost of 5$ / month).</p>

<p><a href="http://philippe.bourgau.net/imgs/2017-02-01-how-i-fixed-devicemapper-error-when-deploying-my-docker-app/resize-digitalocean.jpg"><img class="center" src="http://philippe.bourgau.net/imgs/2017-02-01-how-i-fixed-devicemapper-error-when-deploying-my-docker-app/resize-digitalocean-small.jpg" title="A screenshot of the resize screen on digitalocean" ></a></p>

<p>After increasing the memory (and disk space) of the VM, deployment went like a charm. Others have fixed the same issue for free by <a href="https://www.digitalocean.com/community/questions/npm-gets-killed-no-matter-what">adding a swap partition to the VM</a>.</p>

<h2>The end of the story</h2>

<p>I wasted quite some time on this, but it taught me some lessons :</p>

<ol>
<li>I should have taken care of cleaning up the old images and containers, at least manually, at best automatically</li>
<li>I should write a script to provision a new server</li>
<li>The cheap options always come at a cost</li>
<li>For an open source side project like this one, it might be a better strategy to only use Docker to setup my dev env, and use free services like <a href="https://travis-ci.org/">Travis-ci</a> and <a href="https://www.heroku.com/">Heroku</a> for production</li>
<li>Doing everything myself is not a good recipe to getting things done &hellip; I well past time I leave my developer hat for an entrepreneur cap</li>
<li>In order to keep learning and experimenting, focused <a href="http://philippe.bourgau.net/how-i-got-my-feet-wet-with-machine-learning-with-the-first-20-hours/">20h sessions</a> of deliberate practice might be the most time effective solution</li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[5 minutes hack to speed up RSpec in Rails 5 using in-memory SQLite]]></title>
    <link href="http://philippe.bourgau.net/5-minutes-hack-to-speed-up-rspec-in-rails-5-using-in-memory-sqlite/"/>
    <updated>2017-01-25T07:53:00+00:00</updated>
    <id>http://philippe.bourgau.net/5-minutes-hack-to-speed-up-rspec-in-rails-5-using-in-memory-sqlite</id>
    <category term="cucumber" /><category term="rails" /><category term="rspec" /><category term="ruby" /><category term="sqlite" /><category term="testing" />
    <content type="html"><![CDATA[<p>Here is the story : you have a <a href="http://rubyonrails.org/">Rails 5</a> app that uses <a href="http://rspec.info/">RSpec</a>, but your RSpec suite is getting slower and slower to run. You&rsquo;ve already considered some solutions :</p>

<ul>
<li>Use <a href="https://sqlite.org/">SQLite</a> in memory for your test env.</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='yaml'><span class='line'><span class="l-Scalar-Plain">test</span><span class="p-Indicator">:</span>
</span><span class='line'>  <span class="l-Scalar-Plain">adapter</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">sqlite3</span>
</span><span class='line'>  <span class="l-Scalar-Plain">database</span><span class="p-Indicator">:</span> <span class="s">&quot;:memory:&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>That&rsquo;s the most straightforward thing to do, but unfortunately, if you are sharing your test env with <a href="https://cucumber.io/">Cucumber</a>, you might want to use a production like DB with Cucumber (<a href="https://www.postgresql.org/">PostgreSQL</a> or whatever). So unless you are ready to setup a new env for cucumber (which I tried and don&rsquo;t recommend) you&rsquo;re stuck.</p>

<ul>
<li>Use mocks. That&rsquo;s surely going to work, it&rsquo;s going to make your test hell of a lot faster ! It will also make your tests a lot more fragile and more expensive to maintain &hellip; If you want to read more about why I think mocks are a bad idea, just have a look at <a href="http://philippe.bourgau.net/blog/categories/mocking/">these posts</a>.</li>
</ul>


<h2>The hack</h2>

<p>Here is a third alternative, I&rsquo;ve <a href="http://philippe.bourgau.net/simplest-way-to-speed-up-rspec-with-in-memory-sqlite-db/">already written about it</a>, but here it comes updated and tested for Rails 5 :</p>

<ol>
<li>Don&rsquo;t change anything to your <code>config/database.yml</code></li>
<li>Obviously, you&rsquo;ll need to add <code>sqlite3</code> to your <code>Gemfile</code></li>
<li>At the beginning of your <code>spec/rails_helper.rb</code>, replace</li>
</ol>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># Checks for pending migration and applies them before tests are run.</span>
</span><span class='line'><span class="c1"># If you are not using ActiveRecord, you can remove this line.</span>
</span><span class='line'><span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Migration</span><span class="o">.</span><span class="n">maintain_test_schema!</span>
</span></code></pre></td></tr></table></div></figure>


<p>with</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># In order to keep the same RAILS_ENV for rspec and cucumber,</span>
</span><span class='line'><span class="c1"># patch the connection to use sqlite in memory when running rspec</span>
</span><span class='line'><span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Base</span><span class="o">.</span><span class="n">establish_connection</span><span class="p">(</span><span class="ss">adapter</span><span class="p">:</span> <span class="s1">&#39;sqlite3&#39;</span><span class="p">,</span> <span class="ss">database</span><span class="p">:</span> <span class="s1">&#39;:memory:&#39;</span><span class="p">)</span>
</span><span class='line'><span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Schema</span><span class="o">.</span><span class="n">verbose</span> <span class="o">=</span> <span class="kp">false</span>
</span><span class='line'><span class="nb">load</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="no">Rails</span><span class="o">.</span><span class="n">root</span><span class="o">.</span><span class="n">to_s</span><span class="si">}</span><span class="s2">/db/schema.rb&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>That&rsquo;s it ! Run your specs &hellip; not bad for a 5 minutes investment !</p>

<h2>One more thing &hellip;</h2>

<p>If you need even more speed, you can now run your specs in parallel in different processes ! Each in-memory SQLite DB is bound to its process, so unlike a real PostgreSQL dev DB, you won&rsquo;t get any conflicts between your tests ;&ndash;)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[A Plain English Introduction To Paxos Protocol]]></title>
    <link href="http://philippe.bourgau.net/a-plain-english-introduction-to-paxos-protocol/"/>
    <updated>2017-01-16T08:20:00+00:00</updated>
    <id>http://philippe.bourgau.net/a-plain-english-introduction-to-paxos-protocol</id>
    <category term="distributed systems" /><category term="software" />
    <content type="html"><![CDATA[<p>A few weeks ago, I had to have a look at the distributed consensus protocol <a href="https://en.wikipedia.org/wiki/Paxos_%28computer_science%29">Paxos</a>. Even though I know its purpose and I&rsquo;ve built and used distributed systems and databases in the past, Paxos remains mind boggling at first !</p>

<h2>The hard way</h2>

<p>The best overall description I found is <a href="https://www.quora.com/Distributed-Systems-What-is-a-simple-explanation-of-the-Paxos-algorithm">this answer by Vineet Gupta on Quora</a>. After turning my head around it for a while, I finally gained the instinctive understanding which comes when you &lsquo;get&rsquo; something.</p>

<p>As a way to both help others to understand Paxos faster and to burn all this in my own memory, I though it would he a good idea to illustrate it as a story (I was inspired by <a href="http://ksat.me/a-plain-english-introduction-to-cap-theorem/">A plain English introduction to CAP Theorem</a> which I found really instructive; I also later discovered that the <a href="https://www.microsoft.com/en-us/research/wp-content/uploads/2016/12/The-Part-Time-Parliament.pdf">original Paxos paper</a> itself related the protocol using the metaphor of a parliament).</p>

<p><img class="center" src="http://philippe.bourgau.net/imgs/2017-01-16-a-plain-english-introduction-to-paxos-protocol/greek.jpg" title="A drawing of an ancient Greek hero typing at a computer" ></p>

<h2>Once upon a time &hellip;</h2>

<p>&hellip; there were 3 brothers and sisters, Kath, Joe &amp; Tom, living happily. They lived far away, and it was not easy for them to meet and spend some time together. Neither did they have phone or internet, for this was a long time ago. All they had to discuss and share news was good old mail &hellip;</p>

<p>Unfortunately, one day, the worst happened : their parents die. All 3 are informed by a letter from the notary, telling them that they need to sell the family house in order to pay for their inherited debts. It also advises to use Paxos to agree on a price (Note : I never said the story was going to be chronologically sound !).</p>

<h2>The happy end</h2>

<p>As the oldest in the family, Kath decides to take things in hand, and starts the whole thing. She knows Paxos consists of 2 phases : &lsquo;prepare&rsquo; and &lsquo;accept&rsquo;.</p>

<h3>Prepare Phase</h3>

<p>Kath sends a signed and dated price value proposal to her brothers, by mail.</p>

<p>Joe and Tom both receive the letter from Kath, they think the price is fair. In order to send their agreements back to Kath, they make a copy of the proposition, mark it as agreed, date it, sign it, and send it back.</p>

<h3>Accept Phase</h3>

<p>Joe lives a bit further away from Kath than Tom does, so correspondence between Kath and Tom is usually faster. Kath indeed receives the agreement from Tom first, she knows she can go on with the protocol straight away, because Paxos relies on majority, and not unanimity. In his letter, Tom agreed to the same price she proposed, so she just picks this one as the final price to agree on.</p>

<p>She sends new letters, called accept letters this time, to her brothers to finalize the agreement. In these letters, she specifies the price that they are agreeing on, plus the date at which it was first suggested (see Prepare Phase). When Tom and Joe receive the accept letter, they simply need to check that the time and price of the proposal to make sure it is what they agreed on, before sending back their final accept letter.</p>

<p>At the time when Kath receives the accept letters from her brothers, everyone knows that the price has been agreed.</p>

<p><a href="https://www.taschen.com/pages/en/catalogue/children/all/06787/facts.the_fairy_tales_of_the_brothers_grimm.htm"><img class="center" src="http://philippe.bourgau.net/imgs/2017-01-16-a-plain-english-introduction-to-paxos-protocol/grimm-brothers.jpg" title="Cover of the book &#34;The Fairy Tales of the Grimm Brothers&#34;" alt="Cover of the book &#34;The Fairy Tales of the Grimm Brothers&#34;"></a></p>

<h3>After</h3>

<p>She then informs the notary on the agreed price. This one sends an information letter to the Kath, Tom &amp; Joe. The house is sold pretty quickly, leaving the family out of financial problems for the rest of their lives &hellip;</p>

<h2>Shit happens</h2>

<p>That story went unexpectedly well ! Let&rsquo;s see different variations about what would happen in real life.</p>

<h3>Joe is particularly slow to answer</h3>

<p>Joe has never been good at paperwork &hellip; he&rsquo;s always out partying and having fun, and he does not want to bother answering letters. When Joe receives the prepare letter from Kath, he does not reply straightaway but leaves it on his desk to handle later. Meanwhile, Tom answers as soon as he got the letter. As mentioned before, Paxos relies on majority, as soon as Kath gets Tom&rsquo;s answer, she can continue to the next phase. In fact, the accept phase also relies on majority, so she can continue to the end of the protocol if Tom continues to answer.</p>

<p>In this case, Joe would receive the accept letter before he sent his answer to the prepare letter, and would know that the consensus is moving on without him. He can try to catch up or not, but the consensus can be reach without him.</p>

<h3>Tom wants to speed things up by becoming the master</h3>

<p>Tom has always been the hurried brother. He does not like when things linger forever but prefers things to be done quickly. As soon as he receives the letter from the notary, he starts waiting impatiently for the prepare letter from his sister. Kath, on her part, takes a lot of time to settle on a price. Not knowing what is going on, Tom decides to take action, and to takes on the master role : he sends his own copies of the prepare letters. While these letters are in the mail, Kath finally settles on a price, and sends hers.</p>

<p>Joe gets Tom&rsquo;s proposal first. Thinking that it&rsquo;s a change in the plan, he responds straight away by signing the proposal and taking a copy for himself. The following day, he receives Kath&rsquo;s proposal ! He&rsquo;s a bit surprised, but hopefully, Paxos tells him exactly what to do in this situation. By agreeing to Tom&rsquo;s proposal, he made a promise to stick to it whatever happens later. Here the date on Kath&rsquo;s proposal is later than on Tom&rsquo;s, so Joe is going to answer to Kath that he agrees but to to Tom&rsquo;s proposal, of which he&rsquo;ll join a copy.</p>

<p>After receiving the Joe&rsquo;s agreement on his proposal, Tom has the majority, and should be able to end the protocol.</p>

<p>What about Kath ?</p>

<p>She should have received Tom&rsquo;s proposal, and rejected it, because she had already proposed a later value. That will not prevent Tom to reach a consensus.</p>

<p>She should have received Joe&rsquo;s agreement to Tom&rsquo;s proposal. The same way, she might as well have received Tom&rsquo;s agreement to his own proposal as an answer to hers. She&rsquo;d get the majority of agreements, so she might then want to push on. For the accept letter, she must pick a value that has been accepted, in this case, it&rsquo;s Tom&rsquo;s proposed value ! Everything ends as expected as she&rsquo;ll reach the same price as Tom.</p>

<h3>Tom wants a higher price an becomes the master</h3>

<p>Imagine Tom is obsessed about money ! When he receives Kath&rsquo;s proposal, he&rsquo;s outraged ! Believing the house has a lot more value than the proposed price, he sets on to act as a master in Paxos and sends his own proposal letters to his brother and sister.</p>

<p>Unfortunately, when they receive his proposal, they have already agreed to Kath&rsquo;s older proposal, so they send him back a copy of it as an agreement. Having received agreements to Kath&rsquo;s value only, he cannot push forward his value. Whether he continues his Paxos or not does not really matter, as he would reach the same value as Kath would.</p>

<h3>River flood split between brothers and Kath</h3>

<p><a href="http://riniwuzhere.deviantart.com/art/Fairytale-Map-of-Wurzburg-393850325"><img class="center" src="http://philippe.bourgau.net/imgs/2017-01-16-a-plain-english-introduction-to-paxos-protocol/fairytale-map.jpg" title="A drawing of a fairy tale map with a wide river in the middle" ></a></p>

<p>There&rsquo;s a wide river that separates Kath from Joe and Tom. While they were trying to reach consensus, the river flood, cutting all communication between the brothers and their sister. Kath might abort the consensus as she won&rsquo;t be able to get answers from the majority. On their side, Joe or Tom can takeover the consensus, take on the master role, and still reach a price, as they form a majority. As soon as the river would settle, the messages would arrive to both parties, eventually informing Kath that a price was accepted.</p>

<h3>Lots of others</h3>

<p>You can imagine zillions of ways in which the consensus between Kath, Joe and Tom could go wrong. For example :</p>

<ul>
<li>Mail is so slow that Kath sends new proposals</li>
<li>One letter gets lost and arrives after Kath made a new proposal</li>
<li>Kath is struck by a lightning</li>
</ul>


<p>Go ahead and execute Paxos step by step on all of them, you&rsquo;ll see that whatever happens, Kath, Joe and Tom will reach a price.</p>

<h2>More Formally</h2>

<p>Now that you have an instinctive understanding of Paxos, I encourage you to read out <a href="https://www.quora.com/Distributed-Systems-What-is-a-simple-explanation-of-the-Paxos-algorithm">the full explanation I found on Quora</a>. Here is a extract with the protocol part :</p>

<blockquote><h3>Protocol Steps:</h3>

<h4>1) Prepare Phase:</h4>

<ul>
<li><p>A node chooses to become the Leader and selects a sequence number x and value v to create a proposal P1(x, v). It sends this proposal to the acceptors and waits till a majority responds.</p></li>
<li><p>An Acceptor on receiving the proposal P1(x, v1) does the following:</p>

<ul>
<li>If this is the first proposal to which the Acceptor is going to agree, reply ‘agree’ – this is now a promise that the Acceptor would reject all future proposal requests &lt; x</li>
<li>If there are already proposals to which the Acceptor has agreed:
compare x to the highest seq number proposal it has already agreed to, say P2(y, v2)

<ul>
<li>If x &lt; y, reply ‘reject’ along with y</li>
<li>If x > y, reply ‘agree’ along with P2(y, v2)</li>
</ul>
</li>
</ul>
</li>
</ul>


<h4>2) Accept Phase</h4>

<ul>
<li><p>If a majority of Acceptors fail to reply or reply ‘reject’, the Leader abandons the proposal and may start again.</p></li>
<li><p>If a majority of Acceptors reply ‘agree’, the Leader will also receive the values of proposals they have already accepted. The Leader picks any of these values (or if no values have been accepted yet, uses its own) and sends a ‘accept request’ message with the proposal number and value.</p></li>
<li><p>When an Acceptor receives a ‘accept request’ message, it sends an ‘accept’ only if the following two conditions are met, otherwise it sends a ‘reject’:</p>

<ul>
<li>Value is same as any of the previously accepted proposals</li>
<li>Seq number is the highest proposal number the Acceptor has agreed to</li>
</ul>
</li>
<li><p>If the Leader does not receive an ‘accept’ message from a majority, abandon the proposal and start again. However if the Leader does receive an ‘accept’ from a majority, the protocol can be considered terminated. As an optimization, the Leader may send ‘commit’ to the other nodes.</p></li>
</ul>
</blockquote>

<p>And here are the key concepts to map my story to this formal description of Paxos.</p>

<table>
<thead>
<tr>
<th></th>
<th> Story </th>
<th> Paxos</th>
</tr>
</thead>
<tbody>
<tr>
<td></td>
<td> proposal letter (and copy of) </td>
<td> P(x,v)</td>
</tr>
<tr>
<td></td>
<td> Date (and time) </td>
<td> sequence number</td>
</tr>
</tbody>
</table>


<br/>


<p>At the time of slow mail based communication, using the date and time down to the second is enough to build up unique sequence numbers. In our current time of digital messages, it&rsquo;s another story, typical Paxos implementation assigns a different and disjoint infinite set of integers for every participant, it does not exactly follow &lsquo;time&rsquo;, but it&rsquo;s enough for the algorithm to work.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[What Happens to Non-Enthusiast Programmers in the Long Run ?]]></title>
    <link href="http://philippe.bourgau.net/what-happens-to-non-enthusiast-programmers-in-the-long-run/"/>
    <updated>2017-01-10T05:57:00+00:00</updated>
    <id>http://philippe.bourgau.net/what-happens-to-non-enthusiast-programmers-in-the-long-run</id>
    <category term="career" /><category term="programming" /><category term="software" />
    <content type="html"><![CDATA[<p>A few months ago, after receiving good feedback from my regular readers, I posted my latest article <a href="http://philippe.bourgau.net/is-there-any-room-for-the-not-passionate-developer/">Is There Any Room for the Not-Passionate Developer ?</a> on <a href="https://news.ycombinator.com/">Hackernews</a> and <a href="https://www.reddit.com/r/programming/">Reddit</a>. I got a <a href="http://philippe.bourgau.net/how-to-use-hackernews-and-reddit-for-blogging/">huge number of visits</a>, a lot more than I typically get !</p>

<p>I also got a lot more comments, some nice, some tough, some agreeable and some challenging !</p>

<p><img class="center" src="http://philippe.bourgau.net/imgs/2017-01-10-what-happens-to-non-enthusiast-programmers-in-the-long-run/professional.jpg" title="A logo of a guy wearing a suit" ></p>

<h2>First, a summary</h2>

<p>In this previous article, I wanted to contrast the different views about work/life balance in the software industry.</p>

<p>Some, like agile gurus and companies like Basecamp, and <a href="http://lifehacker.com/working-over-40-hours-a-week-makes-you-less-productive-1725646811">studies</a>, strongly advocate for sane work hours. They explain that it results in greater productivity and healthy life.</p>

<p>On the other hand, the software field is always bubbling with novelty, and keeping up to date with technologies is by itself a challenge that takes time. For some companies, which might already be fighting for their survival against competition, it is almost impossible to grant some extra training time to their employees. The problem becomes particularly difficult when engineers get older, become parents and cannot afford to spend some extra time learning the latest JavaScript framework.</p>

<p>As a conclusion, I said that for most of us, it&rsquo;s really difficult to remain a developer in the long run without the grit that only passion for programming brings. I encourage you to <a href="http://philippe.bourgau.net/is-there-any-room-for-the-not-passionate-developer/">read it</a> for more details.</p>

<h2>What I learned from the comments</h2>

<p>First of all, thanks a lot for all these, they were very valuable, they forced me to think even more about the issue.</p>

<h3>People have been burnt !</h3>

<p>The word &lsquo;passion&rsquo; in particular, triggered engaged comments. As some pointed out, &lsquo;enthusiast&rsquo; or &lsquo;professional&rsquo; should be favored. It seems that some companies have asked their employees for unquestionable passion for their business (and not for engineering or programming) at the cost of the people&rsquo;s own lives. As a commenter said, a lot of shops do not integrate the absolute necessity for their programmers to learn continuously in their business model. It made me kind of sad to feel once more this state of our industry.</p>

<p>As a result, people are weary of any statement of &lsquo;passion&rsquo; in the workplace, and would prefer to be seen as very skilled professional, dedicated to keeping their skills up to date.</p>

<h3>The particular question of France</h3>

<p><img class="center" src="http://philippe.bourgau.net/imgs/2017-01-10-what-happens-to-non-enthusiast-programmers-in-the-long-run/france.jpg" title="A photo of the Eiffel tower" ></p>

<p>I received some comments from all over the world, but my observations came from where I work : in France. Here, all in all, we have at least 7 weeks of paid leaves per year. It&rsquo;s a lot more than in other parts of the world. I think it&rsquo;s around 2 weeks in the US (other <a href="https://www.bloomberg.com/news/articles/2016-10-18/americans-work-25-more-than-europeans-study-finds">sources</a> point the same fact). Imagine two companies, one from France, and one from the US. The one in the US can invest 5 weeks per year in exploratory learning (which can result in good things for both the business and the employee) while still producing as much as the french one.</p>

<p>Obviously, there are other parameters to take into account for overall productivity like hours per day, the effects of holidays or long hours on creativity, or funding &hellip; but here are some facts about software engineering in France :</p>

<ul>
<li>20% time policy, hackathons and other exploratory learning are extremely rare (I&rsquo;ve seen it once in 15 years)</li>
<li>It&rsquo;s slowly getting better, but if you remain a programmer in your thirties, you&rsquo;re seen as a loser</li>
<li>France has no software powerhouse like Microsoft, Google, Apple &hellip;</li>
</ul>


<p>This lead me to this open question : What&rsquo;s the effect of the 7 weeks of paid leaves on the french software industry ?</p>

<p>By no means will I try to give an answer, I just don&rsquo;t know. Plus, for those who might be wondering : I love my 7 weeks of holidays !</p>

<h2>The conclusion I came to</h2>

<p>Yet, I can try to draw a conclusion at the individual level. In France, if you&rsquo;re not really enthusiastic about programming, you won&rsquo;t put the extra effort off-the-job to learn the latest technologies. Within a few years, you&rsquo;ll be &lsquo;deprecated&rsquo;, which will leave you with mainly 2 options :</p>

<ul>
<li>become a manager</li>
<li>stick to your current codebase (and become completely dependent of your employer)</li>
</ul>


<p>To me, the sad truth is that if you want to make a career as a professional developer in France, you&rsquo;d better be ready to spend some of your free time practicing !</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Verify the Big O Complexity of Ruby Code in RSpec]]></title>
    <link href="http://philippe.bourgau.net/verify-the-big-o-complexity-of-ruby-code-in-rspec/"/>
    <updated>2017-01-04T17:48:00+00:00</updated>
    <id>http://philippe.bourgau.net/verify-the-big-o-complexity-of-ruby-code-in-rspec</id>
    <category term="open-source" /><category term="performance" /><category term="rspec" /><category term="ruby" />
    <content type="html"><![CDATA[<p>It might be possible to discover performance regressions before running your long and large scale benchmarks !</p>

<p><a href="https://github.com/philou/complexity-assert">complexity_assert</a> is an <a href="http://rspec.info/">RSpec</a> library that determines and checks the <a href="http://bigocheatsheet.com/">big O complexity</a> of a piece of code. Once you&rsquo;ve determined the performance critical sections of your system, you can use it to verify that they perform with the complexity you expect.</p>

<h2>How does it work ?</h2>

<p>The gem itself is the result of an experiment to learn machine learning in 20 hours (you can read more about that experiment in <a href="http://philippe.bourgau.net/how-i-got-my-feet-wet-with-machine-learning-with-the-first-20-hours/">my previous post</a> if you want).</p>

<p>Suppose you have some a method, let&rsquo;s call it <code>match_products_with_orders(products, orders)</code> which is called in in one of your processes with very large arguments. Badly written, this method could be quadratic (O(n²)), which would lead to catastrophic performances in production. When coding it, you&rsquo;ve taken particular care to make it perform in linear time. Unfortunately, it could easily slip back to a slower implementation with a bad refactoring &hellip; Using complexity_assert, you can make sure that this does not happen :</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># An adapter class to fit the code to measure in complexity assert</span>
</span><span class='line'><span class="k">class</span> <span class="nc">ProductsOrdersMatching</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1"># Generate some arguments of a particular size</span>
</span><span class='line'>    <span class="k">def</span> <span class="nf">generate_args</span><span class="p">(</span><span class="n">size</span><span class="p">)</span>
</span><span class='line'>        <span class="c1"># Let&#39;s assume we have 10 times less products than orders</span>
</span><span class='line'>        <span class="o">[</span> <span class="nb">Array</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="n">size</span> <span class="o">/</span> <span class="mi">10</span><span class="p">)</span> <span class="p">{</span> <span class="n">build_a_product</span><span class="p">()</span> <span class="p">},</span> <span class="nb">Array</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="n">size</span><span class="p">)</span> <span class="p">{</span> <span class="n">build_an_order</span><span class="p">()</span> <span class="p">}</span> <span class="o">]</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1"># Run the code on which we want to assert performance</span>
</span><span class='line'>    <span class="k">def</span> <span class="nf">run</span><span class="p">(</span><span class="n">products</span><span class="p">,</span> <span class="n">orders</span><span class="p">)</span>
</span><span class='line'>        <span class="n">match_products_with_orders</span><span class="p">(</span><span class="n">products</span><span class="p">,</span> <span class="n">orders</span><span class="p">)</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">describe</span> <span class="s2">&quot;Products and Orders Matching&quot;</span> <span class="k">do</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">it</span> <span class="s2">&quot;performs linearly&quot;</span> <span class="k">do</span>
</span><span class='line'>        <span class="c1"># Verify that the code runs in time proportional to the size of its arguments</span>
</span><span class='line'>        <span class="n">expect</span><span class="p">(</span><span class="no">ProductOrdersMatching</span><span class="o">.</span><span class="n">new</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">be_linear</span><span class="p">()</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>That&rsquo;s it ! If ever someone changes the code of <code>match_products_with_orders</code> and makes it perform worse than linearly, the assertion will fail ! There are similar assertions to check for constant and quadratic execution times.</p>

<p>Internally, the code will be called a number of times with different (smallish) sizes of arguments and the execution times will be logged. When this is over, by doing different flavors of linear regressions, it should determine whether the algorithm performs in O(1), O(n) or O(n²). Depending on your code, this can take time to run, but should still be faster than running large scale benchmarks.</p>

<p>Just check the <a href="https://github.com/philou/complexity-assert/blob/master/README.md">README</a> for more details.</p>

<h2>Did you say experiment ?</h2>

<p>It all started like an experiment. So the gem itself, is still experimental ! It&rsquo;s all fresh, and it could receive a lot of enhancements like :</p>

<ul>
<li>Allow the assertion to specify the sizes</li>
<li>Allow the assertion to specify the warm-up and run rounds</li>
<li>Robustness against garbage collection : use GC intensive ruby methods, and see how the regression behaves</li>
<li>Find ways to make the whole thing faster</li>
<li>O(lnx) : pre-treat with exp()</li>
<li>O(?lnx) : use exp, then a search for the coefficient (aka polynomial)</li>
<li>O(xlnx) : there is no well known inverse for that, we can compute it numerically though</li>
<li>Estimate how much the assert is deterministic</li>
<li>&hellip;</li>
</ul>


<p>As you see, there&rsquo;s a lot of room for ideas and improvements.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How I got my feet wet with machine learning with 'The First 20 Hours']]></title>
    <link href="http://philippe.bourgau.net/how-i-got-my-feet-wet-with-machine-learning-with-the-first-20-hours/"/>
    <updated>2016-12-29T21:09:00+00:00</updated>
    <id>http://philippe.bourgau.net/how-i-got-my-feet-wet-with-machine-learning-with-the-first-20-hours</id>
    <category term="learning" /><category term="software" />
    <content type="html"><![CDATA[<p>I&rsquo;m currently wrapping up an alpha of a unit testing <a href="https://github.com/philou/complexity-assert">ruby gem</a> that allows to assert the complexity of a piece of code. It&rsquo;s the result of an experiment to learn some <a href="https://en.wikipedia.org/wiki/Machine_learning">Machine Learning</a> skills in 20 hours &hellip; not bad for a first a try at Data Science ! This is the story of this experiment.</p>

<h2>How it all started ?</h2>

<p><a href="https://www.amazon.com/First-20-Hours-Learn-Anything/dp/1591846943/ref=sr_1_1?ie=UTF8&amp;qid=1483258282&amp;sr=8-1&amp;keywords=the+first+20+hours"><img class="center" src="http://philippe.bourgau.net/imgs/2016-12-29-how-i-got-my-feet-wet-with-machine-learning-with-the-first-20-hours/book-cover.jpg" title="The cover of the book 'The First 20 Hours'" ></a></p>

<p>A few months ago, I read <a href="https://www.amazon.com/First-20-Hours-Learn-Anything/dp/1591846943/ref=sr_1_1?ie=UTF8&amp;qid=1483258282&amp;sr=8-1&amp;keywords=the+first+20+hours">The First 20 Hours</a>. The book describes a technique to get up to speed and learn some practical skills on any particular subject in only 20 hours. As examples, the author details how he managed to teach himself a pretty decent level of Yoga, Ukulele, Wind Surfing, Programming, Go and touch typing.</p>

<p>I decided to give it a try. In order to get a boost, I found a few motivated people at work to do it with me. I started by presenting them the technique described in the book, and asked everyone what they wanted to learn. After a quick vote, we set out to learn more about Machine Learning.</p>

<h2>The technique</h2>

<p>The method is meant to allow anyone to learn necessary skills to accomplish a specific task in about 20 hours. I my case, I could expect to get a basic understanding of the Machine Learning concepts, as well as some practical skills to do something involving Machine Learning. Here are the details of the technique :</p>

<ol>
<li>H0 : Deep dive in the main concepts and theory of machine learning</li>
<li>H6 : Define an ambitious and practical goal or skill level to achieve by the end, and an outline of how to get there</li>
<li>H6 to H20 : Learn by doing</li>
</ol>


<p>As you see, the technique is pretty simple !</p>

<h2>How did it work ?</h2>

<h3>For the group</h3>

<p>The plan for the group was :</p>

<ul>
<li>to meet weekly for 2 hours</li>
<li>to share what we learned at the end of every session</li>
<li>to bound by similar goals</li>
</ul>


<p>At first, people were enthusiastic about learning something like machine learning. After a while, I started to get the following remarks :</p>

<ul>
<li>&ldquo;I don&rsquo;t really see the point of doing this together rather than independently&rdquo;</li>
<li>&ldquo;I&rsquo;m feeling a bit lost by not having a concrete goal and a plan from H0&rdquo;</li>
<li>&ldquo;I picked up a target that&rsquo;s too large for me&rdquo;</li>
</ul>


<p>The learning curve must have proven too steep, because as time went by, a lot of people droped out, and we ended up being only 2 !</p>

<h3>For me</h3>

<p>The first phase was the toughest. As the author had warned in his book, &ldquo;You&rsquo;ll get deep above your head in theory and concepts you don&rsquo;t know&rdquo;, &ldquo;You&rsquo;ll feel lost&rdquo;. He had some reassuring words though : &ldquo;The steeper the learning curve, the more you&rsquo;ll be learning !&rdquo; I actually like this feeling of unknown things to learn, and that&rsquo;s why I stuck to it.</p>

<p>I took me 8 hours, and not 6 to get a good overall grasp of Machine Learning techniques. The theory was just too wide and interesting and I could not cut the learning after just 6 hours :&ndash;). I studied <a href="https://xyclade.github.io/MachineLearning/#cross-validation">Machine Learning for developers</a> plus a few other pages for details on specific points. I took and kept notes about what I learned. I chose my subject &ldquo;unit testing algorithm complexity&rdquo; for the following reasons :</p>

<ul>
<li>I could imagine some utility</li>
<li>I had been writing benchmarks at work for 3 years, and I knew the practice well enough</li>
<li>It&rsquo;s pretty easy to generate data for this subject : just run your algorithm !</li>
<li>It seems a good first step, doable with basic Machine Learning techniques like linear regression</li>
<li>It seems small enough to get something working in 12 hours</li>
<li>I could use ruby, which I find both fast and pleasant to program</li>
</ul>


<p>This is the plan I set out :</p>

<ol>
<li>Generate data with a linear algorithm (O(n))</li>
<li>Run linear regression on the data</li>
<li>Compute the the <a href="https://xyclade.github.io/MachineLearning/#root-mean-squared-error-rmse">RMSE</a> of the model</li>
<li>Deal with Garbage Collection in order to make reduce its noise</li>
<li>Deal with interpreter warm-up for the same reason</li>
<li>Generate data for a constant (O(1)) algorithm and build a model for it</li>
<li>Find a way to identify if an algorithm is constant or linear from it&rsquo;s execution timings</li>
<li>Generate data for a quadratic (O(2)) algorithm and build a model for it</li>
<li>Identify if an algorithm is constant, linear or quadratic</li>
<li>Package all this in an <a href="http://rspec.info/">RSpec</a> library</li>
</ol>


<p>It started well, and I made good progress. Unfortunately, as people dropped out of the group and I got more urgent things to do at work, I had to pause my project for a while. It&rsquo;s only been since last week that I got some time during my holidays to finish this off. I&rsquo;m currently at H18, and I&rsquo;ve completed all steps from 1 to 9.</p>

<p>As I said the project is still in early alpha. They is a lot of points in which it could be improved (more complexities, faster, more reliable &hellip;). Even though I did not tackle the more advanced machine learning techniques, I now understand the overall process of ML : explore to get an intuitive grasp of the data, try out a model, see what happens, and repeat &hellip; I feel that learning these more advanced techniques would be easier now.</p>

<h2>My opinion on the method</h2>

<p>Overall, I found the experiment really effective, it&rsquo;s possible to learn quite a lot by focusing on it for 20 hours. A word of warning though : you need to be really motivated and ready to stick through difficulties.</p>

<p>It&rsquo;s also been very pleasant. I&rsquo;ve always loved to learn new things, so I might be a little biased on that aspect. I liked the first part when I felt that there was a lot to learn in a large subject I knew almost nothing about. I loved the second part too, although this might be more related to machine learning, because I felt like exploring an unknown (data set) and trying to understand it.</p>

<p>I&rsquo;ve never been afraid to learn something, doing this experiment taught me I can learn anything fast ! I&rsquo;ll definitely re-use it again.</p>

<p>One last word about doing this in group. My own experiment did not work very well. Most people were not comfortable with the first &lsquo;explore&rsquo; phase. I guess one could make it work better by starting 6 or 8 hours before the rest of the group, enough to grasp the basic concepts and come up with a few end goals. Having concrete targets from day 1 should help people to stick through and to collaborate. The &lsquo;guide&rsquo; could also help the others through the first phase.</p>

<p>Stay tuned, I&rsquo;ll present my gem in <a href="http://philippe.bourgau.net/verify-the-big-o-complexity-of-ruby-code-in-rspec/">a following post</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Overclocking a Scrum Team to 12]]></title>
    <link href="http://philippe.bourgau.net/overclocking-a-scrum-team-to-12/"/>
    <updated>2016-12-21T04:57:00+00:00</updated>
    <id>http://philippe.bourgau.net/overclocking-a-scrum-team-to-12</id>
    <category term="agile" /><category term="software" />
    <content type="html"><![CDATA[<p><em>From <a href="https://en.wikipedia.org/wiki/Overclocking">Wikipedia</a> :</em></p>

<blockquote><p>Overclocking is configuration of computer hardware components to operate faster than certified by the original manufacturer &hellip;</p></blockquote>

<p>It is said that Scrum teams work best at 7 people, and that they break at about 10. The trouble is that sometimes there is just too much work for 7 people, but no enough for a full Scrum of Scrums. What if there was a simple way to hack this number up to 12 ?</p>

<p><img class="center" src="http://philippe.bourgau.net/imgs/2016-12-21-overclocking-a-scrum-team-to-12/overclocking.jpg" title="An overclocked motherboard working with extra fans and cellar tape" ></p>

<h2>An Idea</h2>

<h3>The Surgical Team</h3>

<p>In his classic <a href="https://www.amazon.com/Mythical-Man-Month-Software-Engineering-Anniversary/dp/0201835959/ref=sr_1_1?s=books&amp;ie=UTF8&amp;qid=1482298579&amp;sr=1-1&amp;keywords=the+mythical+man+month">The Mythical Man Month</a> Fred Brooks presents an idea to organize software development the way surgeons work. The master performs the surgery while the rest of his team (intern or junior surgeon and the nurses) are there to support him. Fred Brook imagined an organization where master developers could be the only ones with access to the production code, while other more junior developers would have the task to provide them with tools and technical libraries.</p>

<p>I admit that this idea sounds out-of-fashion in contrast with modern agile teams of generalists &hellip; Still &hellip;</p>

<h3>Tools</h3>

<p>At work, we are working on a pretty technical and complex product which requires some time getting into both the code and the domain. We took a few interns during the past years, and a bit like Fred Brooks, we came to the conclusion that internships yield more results when focused on building supporting tools rather than joining the team and working on production code.</p>

<p>We&rsquo;ve also been doing <a href="http://philippe.bourgau.net/how-we-introduced-efficient-agile-retrospectives/">retrospectives</a> for 3 years now, we&rsquo;ve stolen a lot of best practices from the industry and the team is working a lot better than it used to. The pending side of this is that nowadays, the opportunities for improvement that we discover are a lot more specific, and they often need us to take some time to build new tools to support our work.</p>

<h3>The Agile Surgical Team</h3>

<p>Agile method such as Scrum or XP are all about creating real teams instead of a collection of individual. That means that if we wanted to adopt the surgical team idea, we could use teams instead of individuals : a team of experts, and a tooling team of apprentice developers !</p>

<p>Why not, there&rsquo;s not nothing really new here, but the challenge is to run such a tooling team efficiently !</p>

<ul>
<li>3 people or less : there&rsquo;s <a href="http://pm.stackexchange.com/a/10075">evidence in the industry</a> that micro teams can self organize in an ad-hoc manner</li>
<li>Mandate ScrumBan, Continuous Delivery and Devops : on site customer makes this possible, it should reduce project management overhead to almost nothing, and enforce quality</li>
<li>A sandbox for junior developers : there&rsquo;s no risk of messing up production code here, the domain (tools for software developers) is straightforward and the fast feedback provides a great environment for learning</li>
</ul>


<p>Obviously, for this to work, you&rsquo;ll also need to have enough tooling work to do for a 3 people team. That&rsquo;s usually the case, the CI alone can take quite some time (see Jez Humble&rsquo;s talk <a href="https://www.youtube.com/watch?v=2zYxWEZ0gYg">Why Agile Doesn&rsquo;t Work</a>) and any team will have its own custom tools to do. For example, in our team, we built our own benchmark framework and we could benefit a lot from <a href="http://www.saros-project.org/">Saros</a> on IntelliJ.</p>

<p><a href="https://www.youtube.com/watch?v=2zYxWEZ0gYg"><img class="center" src="http://philippe.bourgau.net/imgs/2016-12-21-overclocking-a-scrum-team-to-12/why-agile-doesnt-work.jpg" title="The slide in Jez Humble's Why Agile Doesn't Work about the time taken for CI" ></a></p>

<h2>Not quite there yet</h2>

<p>I promised to scale up to 12. Let&rsquo;s do the maths :</p>

<ul>
<li>3 people in the tooling team</li>
<li>8 people in the product team if we push Scrum a bit</li>
</ul>


<p>That&rsquo;s only 11, 1 is missing. This one is more specific to each team&rsquo;s context.</p>

<p>As I said earlier, the product we are building is pretty technical and complex. Sometimes, we simply don&rsquo;t know how we are going to do something. We need to try different ways before finding out the good one. The typical agile way of doing that is by conducting time-boxed <a href="http://agiledictionary.com/209/spike/">spikes</a>. Spikes are fine for code and design related issues but way too short to deal with hard R&amp;D problems. These need a lot of uninterrupted time for research and experiments, so it&rsquo;s not really possible to split them in backlog stories that any one can work on either &hellip;</p>

<h3>The R&amp;D Role</h3>

<p>Here is what you want : some uninterrupted time to learn and experiment different ways to do something difficult.</p>

<p>Here is what you don&rsquo;t want :</p>

<ul>
<li>specialists in the team</li>
<li>people out of sync with the daily production constraints</li>
<li>a never ending &lsquo;research&rsquo; topic</li>
</ul>


<p>Here is a simple solution in the context I describe : add someone in the product team, and do some 2 month round robin on hard subjects. This should leave plenty of time to study something different, but not so much time that one looses connection with the rest of the team. Plus it brings a bit of diversity in every one&rsquo;s daily work. One issue I can think of is that working on isolation might leave someone on a bad track, regularly presenting what was done to the rest of the team might alleviate this concern.</p>

<h2>A final word</h2>

<p>Obviously, this has a smell of specialization, we&rsquo;re bending Scrum principles a bit. So take it for what it is : just like overclocking, it&rsquo;s a hack to get a bit of extra juice before investing in something a lot more expensive (<a href="https://www.agilealliance.org/glossary/scrum-of-scrums/">Scrum of Scrums</a>, <a href="http://less.works/">Less</a> or whatever).</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Video for our talk 'Extreme Practices' is on YouTube]]></title>
    <link href="http://philippe.bourgau.net/video-for-our-talk-extreme-practices-is-on-youtube/"/>
    <updated>2016-11-23T05:19:00+00:00</updated>
    <id>http://philippe.bourgau.net/video-for-our-talk-extreme-practices-is-on-youtube</id>
    <category term="agile" /><category term="remote" /><category term="rexp" /><category term="xp" />
    <content type="html"><![CDATA[<p>As I already wrote about <a href="http://philippe.bourgau.net/rexp-remote-extreme-programming/">before</a>, my colleague <a href="https://ahmadatwi.me/">Ahmad</a> from Beirut gave a talk at <a href="http://www.agiletourbeirut.org/">Agile Tour Beirut</a> about how we adopted <a href="http://www.extremeprogramming.org/">XP</a> to a distributed team <a href="http://www.murex.com">at work</a>. I was the remote buddy during the talk.</p>

<p>It was recorded and is now available on YouTube.</p>

<iframe width="560" height="315" src="https://www.youtube.com/embed/oJsukJhxt7E" frameborder="0" allowfullscreen></iframe>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How to kill Scrum Zombies ?]]></title>
    <link href="http://philippe.bourgau.net/how-to-kill-scrum-zombies/"/>
    <updated>2016-11-03T05:41:00+00:00</updated>
    <id>http://philippe.bourgau.net/how-to-kill-scrum-zombies</id>
    <category term="agile" /><category term="coaching" /><category term="management" />
    <content type="html"><![CDATA[<p>First of all, what is that ? Usually, Scrum zombies go in groups, and quite often, you&rsquo;ll find a full team of them :</p>

<p>A typical team of Scrum Zombies follows Scrum pretty well, does all the ceremonies, adopted good engineering practices, and might even be delivering OK. But all the fun is gone, everyone is on autopilot, no continuous improvement is happening anymore, retrospectives are dull and repetitive &hellip; There&rsquo;s a gut feeling in the air that sooner or later, the project will miss a turn.</p>

<p><img class="center" src="http://philippe.bourgau.net/imgs/2016-11-03-how-to-kill-scrum-zombies/sad-fans.jpg" title="A team of sad fans, looking like lost zombies" ></p>

<p>Sounds familiar ?</p>

<h2>What&rsquo;s going on exactly ?</h2>

<p>When dev teams want to get more (agile|lean|reactive|.*) they often resort to hiring a full time coach. At first, a coach can have a great impact on the team. He will unblock change, show different ways of getting things done and train the team to new practices. Once all this is done, the coach becomes like any team member, or sometimes just leaves. That&rsquo;s the point when the team, as a whole, has to take on responsibility for continuous improvement.</p>

<h2>What&rsquo;s needed then ?</h2>

<p>The team needs to be able to conduct their own experiments and improvements. For this, they need divergent thinking, or creativity, or thinking out of the box; name it as you prefer. In a complex world, no single individual can bring all the answers to all the upcoming issues any team will face. Once the coach has put in place the practices necessary to continuous improvement, it&rsquo;s up to the team.</p>

<p>Unlike what the common idea says, creativity does not come out of thin air, it is cultivated !</p>

<h3>Diversity in the team</h3>

<p>Diversity does not mean minority quotas in your team. Diversity means diversity of interest, of way of thinking, of mentality, of way of working &hellip; The more diverse your team members, the more likely they&rsquo;ll find innovative ways to work out of their current problems.</p>

<h3>Slack</h3>

<p>Removing any slack from the planning is the surest way to kill creativity and innovation. Great ideas often come at unexpected moments (see <a href="https://www.amazon.com/Pragmatic-Thinking-Learning-Refactor-Programmers/dp/1934356050/ref=sr_1_1?s=books&amp;ie=UTF8&amp;qid=1478151003&amp;sr=1-1&amp;keywords=pragmatic+thinking+and+learning">Pragmatic Thinking and Learning: Refactor Your Wetware</a>) because the mind works in the background to find them. You want to leave some time for that.</p>

<h3>Go to conferences</h3>

<p>Creativity builds on creativity. Great ideas are often adaptations of one or many existing ones. Going to conferences is a great way to collect a lot of ideas !</p>

<h3>Share trainings and lectures</h3>

<p>Different people might react differently to the same information. When a team member finishes reading a book or comes back from a training, it&rsquo;s a great idea to have him present what he learned to the others. This will reinforce his own learning, but it might also trigger new ideas in his team mates.</p>

<h3>A dash of turnover</h3>

<p>Too much turnover can be fatal to a team, but not having any will bring other kind of problems too. Newcomers will challenge the status-quo, and the &ldquo;this is how it&rsquo;s done here&rdquo; motto won&rsquo;t be enough for them. That&rsquo;s just what&rsquo;s needed to trigger a sane re-examination of the current practices. Oh &hellip; and turnover between teams is fine too ! If your company is large enough, you don&rsquo;t need to hire or fire people to create turnover, just encourage them to move to other teams !</p>

<h2>The tricky part of complexity</h2>

<p>By leaving time for other things than just cranking out stories, life will come back into the project, and zombies should go away. But wait, there&rsquo;s even more !</p>

<p>Software projects are pretty complex beasts. One of the most counter-intuitive thing with these complex system is that they make planning very difficult. Focusing too much on your main goal might be slowing you down !</p>

<p><img class="center" src="http://philippe.bourgau.net/imgs/2016-11-03-how-to-kill-scrum-zombies/large-tunnels-in-a-mine.jpg" title="Crossroad of large tunnels in a mine" ></p>

<p>In the face of complexity your project landscape is like a maze of tunnels ! Who said you&rsquo;re choosing the best ones ? By keeping free time to explore other, seemingly unrelated, topics you might discover opportunities that will remove a lot of the work to get to your final destination !</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Continuously Deliver a Rails App to your DigitalOcean Box using Docker]]></title>
    <link href="http://philippe.bourgau.net/continuously-deliver-a-rails-app-to-your-digital-ocean-box-using-docker/"/>
    <updated>2016-10-25T20:39:00+00:00</updated>
    <id>http://philippe.bourgau.net/continuously-deliver-a-rails-app-to-your-digital-ocean-box-using-docker</id>
    <category term="continuous-integration" /><category term="docker" /><category term="rails" />
    <content type="html"><![CDATA[<p>I decided to use <a href="https://github.com/philou/planning-poker">my latest side project</a> as an occasion to learn <a href="https://www.docker.com/">Docker</a>. I first used <a href="https://www.heroku.com/">Heroku</a> as a platform for deployment (see <a href="http://philippe.bourgau.net/how-to-boot-a-new-rails-project-with-docker-and-heroku/">previous post</a>). It works fine but I discovered the following shortcomings :</p>

<ul>
<li>Heroku does not deploy with Docker, which means that I&rsquo;d get quite different configurations between dev and prod, which is one of the promises of Docker :(</li>
<li>The dockerfile provided by docker runs bundle install in a directory outside of the docker main shared volume, this forces to do bundle update twice (once to update Gemfile.lock and a second time to update the actual gems &hellip;)</li>
</ul>


<p>None of these issues could be fixed without moving away from Heroku.</p>

<h2>A great Tutorial / Guide</h2>

<p>I followed <a href="http://chrisstump.online/">Chris Stump</a>&rsquo;s great tutorials to <a href="http://chrisstump.online/2016/02/20/docker-existing-rails-application/">setup Docker for my app</a>, to <a href="http://chrisstump.online/2016/03/03/continuous-integration-docker-rails/">continuously integrate</a> on <a href="https://circleci.com/">CircleCI</a> and to <a href="http://chrisstump.online/2016/03/17/continuous-deployment-docker-rails/">continuously deploy</a> on a private virtual server on <a href="https://www.digitalocean.com/">DigitalOcean</a>.</p>

<p>The first 2 steps (Docker &amp; CI) worked really out of the box after following the tutorial. Dealing with step 3 (CD) was a bit more complicated, because of :</p>

<ol>
<li>the specificities of DigitalOcean</li>
<li>the fact that I&rsquo;m a no deployment expert &hellip;</li>
</ol>


<p><img class="center" src="http://philippe.bourgau.net/imgs/2016-10-25-continuously-deliver-a-rails-app-to-your-digital-ocean-box-using-docker/docker-circleci-digitalocean.jpg" title="The logos of Docker, CircleCI and DigitalOcean" ></p>

<h2>What did I need to do to make it work</h2>

<h3>Setup SSH on the DigitalOcean box</h3>

<p>I started by creating a <a href="https://cloud.digitalocean.com/droplets/new?size=2gb&amp;region=nyc3&amp;appId=20423249&amp;type=applications">one-click DigitalOcean box</a> with Docker pre-installed. That&rsquo;s the moment where I had to setup SSH in order to make CircleCI deploy to my box. DigitalOcean has a <a href="https://www.digitalocean.com/community/tutorials/how-to-use-ssh-keys-with-digitalocean-droplets">guide for this</a>, but here is how I did it :</p>

<ol>
<li>Create a special user on my dev machine <code>adduser digitaloceanssh</code></li>
<li>Log as this user <code>su digitaloceanssh</code>, and generated ssh keys for it <code>ssh-keygen</code></li>
<li>Print the public key <code>cat ~/.ssh/id_rsa.pub</code> and copy paste it in your DigitalOcean box setup</li>
<li>Print the private key <code>cat ~/.ssh/id_rsa</code> and copy past it in your circle-ci job ssh keys</li>
</ol>


<p>The benefit of this is that you should now be able to ssh in your DigitalOcean box from your digitaloceanssh user <code>ssh root@&lt;ip.to.digital.ocean&gt;</code></p>

<h3>Optional : update the box</h3>

<p>The first time I logged into my box, I noted that packages were out of date. If you need it, updating the packages is a simple matter of <code>apt-get update &amp;&amp; apt-get upgrade</code></p>

<h3>Fix deployment directory</h3>

<p>By default, the home dir of the root user on the DigitalOcean box is <code>/root/</code>. Unfortunately, Chris Stump&rsquo;s tutorial assumes it to be <code>/home/root/</code>. In order to fix that, I ssh-ed in the box and created a symbolic link : <code>ln -s /root /home/root</code>.</p>

<h3>Install docker-compose on the box</h3>

<p>Chris Stump&rsquo;s tutorial expects docker-compose on the deployment box, but DigitalOcean only installs Docker on its boxes &hellip; Install instructions for docker-compose can be found <a href="https://docs.docker.com/compose/install/">here</a>. Don&rsquo;t use the container option, it does not inherit environment variables, and will fail the deployment, just use the first curl based alternative.</p>

<h3>Warning : replace ALL dockerexample</h3>

<p>This comes as an evidence, but be sure to replace all the references to &lsquo;dockerexample&rsquo; to your own app name in all of Chris Stump&rsquo;s templates (I forgot some and lost a few rebuilds for that)</p>

<h3>Create the production DB</h3>

<p>Chris Stump&rsquo;s deployment script works with an existing production DB. The first migration will fail. To fix this, just do the following :</p>

<ol>
<li>ssh into the DigitalOcean server</li>
<li>run <code>DEPLOY_TAG=&lt;latest_deploy_tag&gt; RAILS_ENV=production docker-compose -f docker-compose.production.yml run app bundle exec rake db:create</code></li>
</ol>


<p>You can find the latest DEPLOY_TAG from the CircleCi step <code>bundle exec rake docker:deploy</code></p>

<h3>How to access the logs</h3>

<p>It might come handy to check the logs of your production server ! Here is how to do this :</p>

<ol>
<li>ssh in your production server</li>
<li>run the following to tail on the logs <code>DEPLOY_TAG=`cat deploy.tag` RAILS_ENV=production docker-compose -f docker-compose.production.yml run app tail -f log/production.log</code></li>
</ol>


<p>Obviously, tail is just an example, use anything else at your convenience.</p>

<h3>Generate a secret token</h3>

<p>Eventually, the build and deployment job succeeded &hellip; I had still one last error when I tried to access the web site : <code>An unhandled lowlevel error occurred. The application logs may have details.</code>. After some googling, I understood that this error occurs when you did not set a secret key base for your rails app (<a href="http://stackoverflow.com/questions/37112804/an-unhandled-lowlevel-error-occurred-the-application-logs-may-have-details">details</a>). There is a <a href="http://www.jamesbadger.ca/2012/12/18/generate-new-secret-token/">rails task to generate a token</a>, all that was needed was to create a .env file on the server with the following :</p>

<p><code>SECRET_KEY_BASE=&lt;GENERATED_SECRET...&gt;</code></p>

<h2>What&rsquo;s next ?</h2>

<p>Obviously, I learned quite a lot with this Docker exploration. I am still in the discovery phase, but my planning poker side project is now continuously built on <a href="https://circleci.com/gh/philou/planning-poker">circleci</a>, and deployed to a <a href="http://104.131.47.10/">DigitalOcean box</a>.</p>

<p>The next steps (first, find a better subdomain, second, speed up the build job) will tell me if this kind of deployment is what I need for my pet projects. If it turns out too complicated or too difficult to maintain, <a href="http://dokku.viewdocs.io/dokku/">Dokku</a> is on my radar.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ReXP : Remote eXtreme Programming]]></title>
    <link href="http://philippe.bourgau.net/rexp-remote-extreme-programming/"/>
    <updated>2016-10-18T04:27:00+00:00</updated>
    <id>http://philippe.bourgau.net/rexp-remote-extreme-programming</id>
    <category term="agile" /><category term="remote" /><category term="rexp" /><category term="xp" />
    <content type="html"><![CDATA[<p>My colleague <a href="https://ahmadatwi.me/">Ahmad</a> from Beirut gave a talk at <a href="http://www.agiletourbeirut.org/">Agile Tour Beirut</a> on Saturday about how we adopted <a href="http://www.extremeprogramming.org/">XP</a> to a distributed team <a href="http://www.murex.com">at work</a>. I gave him a hand and played the remote guy during the talk.</p>

<blockquote class="twitter-tweet" data-lang="fr"><p lang="en" dir="ltr">If Marvel wants to create coding superheroes I propose <a href="https://twitter.com/ahmadatwi">@ahmadatwi</a> and <a href="https://twitter.com/pbourgau">@pbourgau</a> from <a href="https://twitter.com/Work_at_Murex">@Work_at_Murex</a>. &quot;Ballsy&quot; pres at <a href="https://twitter.com/hashtag/Agiletourbeirut?src=hash">#Agiletourbeirut</a> <a href="https://t.co/SkVMPPGcrq">pic.twitter.com/SkVMPPGcrq</a></p>&mdash; Xavier René-Corail (@XCorail) <a href="https://twitter.com/XCorail/status/787223833405161473">15 octobre 2016</a></blockquote>


<script async src="http://philippe.bourgau.net//platform.twitter.com/widgets.js" charset="utf-8"></script>


<p>With me through Skype, we did a first demo of remote pair programming on <a href="https://en.wikipedia.org/wiki/Fizz_buzz">FizzBuzz</a> using <a href="https://www.jetbrains.com/idea/">IDEA</a> and <a href="https://floobits.com">Floobits</a></p>

<iframe width="560" height="315" src="https://www.youtube.com/embed/5nKyfeq9CY0" frameborder="0" allowfullscreen></iframe>


<p>We then did a demo of <a href="http://philippe.bourgau.net/trellospectives-remote-retrospectives-with-trello/">remote retrospectives</a> using <a href="https://trello.com/">Trello</a></p>

<iframe width="560" height="315" src="https://www.youtube.com/embed/NCRM3rvb8WA" frameborder="0" allowfullscreen></iframe>


<h2>When should I use ReXP</h2>

<p>The conclusion is that :</p>

<ul>
<li>If people are spread over 2 or a few cities, and that they are enough at every place to build a teams, just build different teams at every location</li>
<li>If people are spread over a lot of places, maybe involving many time zones, then the open source, pull request based work-flow seems the best</li>
<li>Otherwise, if there are not enough people to build 2 teams, that they are spread over only a few locations, that the time difference is not too big, then stretching XP to Remote will work best</li>
</ul>


<p>As it is said that &ldquo;nothing beats XP for small collocated teams&rdquo;, I guess &ldquo;nothing beats ReXP for small almost collocated teams&rdquo;.</p>

<h2>Tools to make it better</h2>

<p>As Ahmad said in his talk, tools already exist. We could add that more would be welcome :</p>

<ul>
<li>Floobits or <a href="http://www.saros-project.org/">Saros</a> help tremendously for remote pairing, but maybe cloud based IDEs like <a href="http://www.eclipse.org/che/">Eclipse Che</a> or <a href="https://c9.io/">Cloud 9</a> will make all these tools useless !</li>
<li>Trello works well for remote retrospectives, but some great activities like the <a href="https://en.wikipedia.org/wiki/5_Whys">5 whys</a> are still difficult to do with Trello. I&rsquo;m sure new tools could do better.</li>
<li>I&rsquo;m currently building a <a href="https://github.com/philou/planning-poker">remote planning poker app</a></li>
<li>My other colleague <a href="https://twitter.com/mc_moe">Morgan</a> wants to build a virtual stand up token to make it flow</li>
</ul>


<p>Finally, here are the slides :</p>

<iframe src="http://philippe.bourgau.net//www.slideshare.net/slideshow/embed_code/key/vfbIUiRZNHqHo1" width="595" height="485" frameborder="0" marginwidth="0" marginheight="0" scrolling="no" style="border:1px solid #CCC; border-width:1px; margin-bottom:5px; max-width: 100%;" allowfullscreen> </iframe>


<p> <div style="margin-bottom:5px"> <strong> <a href="http://philippe.bourgau.net//www.slideshare.net/aatwi/extreme-practices-agiletourbeirut-2016" title="Extreme Practices - AgileTourBeirut - 2016" target="_blank">Extreme Practices &ndash; AgileTourBeirut &ndash; 2016</a> </strong> from <strong><a target="_blank" href="http://philippe.bourgau.net//www.slideshare.net/aatwi">Ahmad Atwi</a></strong> </div></p>

<p>EDIT 2016/11/23 : <a href="https://www.youtube.com/watch?v=oJsukJhxt7E">the full video</a> is now on YouTube</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[3 More Great Talks From JavaOne 2016]]></title>
    <link href="http://philippe.bourgau.net/3-more-great-talks-from-javaone-2016/"/>
    <updated>2016-10-14T04:05:00+00:00</updated>
    <id>http://philippe.bourgau.net/3-more-great-talks-from-javaone-2016</id>
    <category term="java" /><category term="open-source" /><category term="performance" /><category term="programming" />
    <content type="html"><![CDATA[<p>After the top <a href="http://philippe.bourgau.net/top-5-talks-i-attented-at-java-one-2016-part-1/">5 talks I attended at JavaOne</a> here are more !</p>

<h2>Managing Open Source Contributions in Large Organizations</h2>

<p><a href="http://www.jamesward.com/presos">James Ward</a></p>

<p>This talk was very interesting for companies or organizations that want to use Open Source in some way without ignoring the risks.</p>

<p>After an introduction listing the benefits of contributing to open source, James explained the associated risks :</p>

<ul>
<li>Security (evil contributions or information leaks)</li>
<li>Quality (bad contributions, increased maintenance or showing a bad image)</li>
<li>Legal (responsibility in case of patent infringing contribution, ownership of a contribution, licenses)</li>
</ul>


<p>He then explained that there are 3 ways to deal with the issue :</p>

<table>
<thead>
<tr>
<th> Strategy </th>
<th> Description </th>
<th> Pros </th>
<th> Cons </th>
<th> Popularity </th>
<th> Examples </th>
</tr>
</thead>
<tbody>
<tr>
<td> Do nothing </td>
<td> Devs just contribute without saying it </td>
<td> Easy, Gets it done </td>
<td> Need to stay under the radar, Risks for all parties are ignores </td>
<td> +++++ </td>
<td> Most open source code on <a href="https://github.com">Github</a> is shared in this manner |</td>
</tr>
<tr>
<td> Join a foundation </td>
<td> Joining an existing open source foundation, with a framework </td>
<td> Everything out of the box (infra, governance), builds trust </td>
<td> Rules can be heavy, Ownership is given to the foundation </td>
<td> +++ </td>
<td> <a href="https://www.linkedin.com/">Linkedin</a> put <a href="https://kafka.apache.org/">Kafka</a> in the <a href="https://www.apache.org/">Apache Foundation</a> |</td>
</tr>
<tr>
<td> Build tools </td>
<td> Use your own tools to mitigate the main risks associated with the &lsquo;Do nothing&rsquo; strategy </td>
<td> Built on top of Github, Keep control, Keeps things easy </td>
<td> Need to develop, test and operate the tools </td>
<td> + </td>
<td> Demo of a tool plugged into Github to enforce a contributor license agreement for anyone pushing a pull request |</td>
</tr>
</tbody>
</table>


<p><a href="http://philippe.bourgau.net/imgs/2016-10-14-3-more-great-talks-from-javaone-2016/CLA.jpg"><img class="center" src="http://philippe.bourgau.net/imgs/2016-10-14-3-more-great-talks-from-javaone-2016/CLA-small.jpg" title="Slide with a Github capture for Contributor License Agreement" ></a></p>

<p>The &lsquo;build tools&rsquo; strategy looks promising, even if it is not yet widely used !</p>

<p>Here are <a href="https://www.youtube.com/watch?v=X71HrW6vC_0">the talk</a> and <a href="http://presos.jamesward.com/managing_open_source_contributions_in_large_orgs/index.html#/">the slides</a> on the authors website.</p>

<h2>Java Performance Analysis in Linux with Flame Graphs</h2>

<p><a href="http://www.brendangregg.com/">Brendan Gregg</a></p>

<p>This is what a flame graph looks like :</p>

<p><a href="http://www.brendangregg.com/FlameGraphs/cpu-mixedmode-vertx.svg"><img class="center" src="http://philippe.bourgau.net/imgs/2016-10-14-3-more-great-talks-from-javaone-2016/flamegraph.png" title="An example of a Java flame graph" ></a></p>

<p>Technically, it&rsquo;s just an SVG with some Javascript. It shows the performance big picture. It aggregates data from Linux and JVM profilers. Vertically, you can see the call stacks in your system. The larger a block, the more time is taken inside a function (or in a sub call). The top border is where the CPU time is actually taken. If you want to speed up your system, speed up the wider zones at the top of the graph.</p>

<p>At <a href="https://www.netflix.com">Netflix</a>, the speaker is a performance engineer, and his job is to build tools to help other teams discover performance issues. This is how they use Flame Graphs :</p>

<ul>
<li>Compare 2 flame graphs at different times to see what changed</li>
<li>Do a <a href="http://martinfowler.com/bliki/CanaryRelease.html">canary release</a> and compare the new flame graph before finishing the deployment</li>
<li>Taking continuous flame graphs on running services helps identify JVM behavior like JIT or GC</li>
<li>They use different color themes to highlight different things</li>
<li>They also use them to identify CPU cache misses</li>
</ul>


<p>By the way, I also thought this was a great example of using an innovative visualization to manage tons of data.</p>

<p>I could find neither the video nor the slides of the talk, but I managed to find a lot of <a href="https://www.google.fr/search?safe=active&amp;client=ubuntu&amp;espv=2&amp;biw=1600&amp;bih=810&amp;tbm=vid&amp;q=Flame+Graphs&amp;oq=Flame+Graphs&amp;gs_l=serp.3...1396.1396.0.1616.1.1.0.0.0.0.59.59.1.1.0....0...1c.1.64.serp..0.0.0.z-3ygDHx4-Q">others talks about Flame Graphs</a>, as well as extra material on <a href="http://www.brendangregg.com/flamegraphs.html">the speaker&rsquo;s homepage</a>.</p>

<h2>Increasing Code Quality with Gamification</h2>

<p><a href="https://twitter.com/alex90_ch">Alexander Chatzizacharias</a></p>

<p>You might be wondering why we should care about gamification ?</p>

<ul>
<li>Worldwide 11.2 billion hours are spent playing every week !</li>
<li>People love to play because it makes them feel awesome</li>
<li>Games are good teachers</li>
<li>At work we are the ones who need to make others successful</li>
<li>But only 32% of workers are engaged in their work !</li>
</ul>


<p>Games rely on 4 main dynamics :</p>

<ul>
<li>Competition (be very careful of closed economics which can be very bad for teams)</li>
<li>Peer pressure (Public stats push teams and individual to conform to the norm)</li>
<li>Progression (regular recognition of new skills is motivating)</li>
<li>Rewards (Badges, Level ups, Monkey Money, real money &hellip;)</li>
</ul>


<p>He went on to demonstrate two games that are based on Jenkins and Sonar that aim at better code quality :</p>

<ul>
<li>One mobile app developed during a 24h Hackathon at CGI which might be open sourced at some point</li>
<li>Another one called &lsquo;Dev Cube&rsquo; created at an university, where you get to decorate you virtual cubicle</li>
</ul>


<p><a href="https://www.youtube.com/watch?v=hfT2_HxOQdk"><img class="center" src="http://philippe.bourgau.net/imgs/2016-10-14-3-more-great-talks-from-javaone-2016/quincy-adams.jpg" title="The speaker demoing his code quality game" ></a></p>

<p>At the end of the talk, he gave the following recommendations :</p>

<ul>
<li>Understand the needs of all to respond to everyone&rsquo;s personal goals</li>
<li>Don&rsquo;t assign things to do, that&rsquo;s not fun, give rewards instead</li>
<li>Keep managers out of the picture</li>
<li>To keep it going, you need regular improvements, special events and new rules</li>
<li>KISS !</li>
</ul>


<p>Playing at work might not be unproductive in the end !</p>

<p>The same <a href="https://www.youtube.com/watch?v=hfT2_HxOQdk">talk given at NLJug</a>, unfortunately, it&rsquo;s in Dutch. English slides are <a href="https://static.rainfocus.com/oracle/oow16/sess/14625567983370011wPS/ppt/increasing%20code%20quality%20with%20gamification.pdf">here</a> though.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Top 5 talks I attended at JavaOne 2016 (Part 2)]]></title>
    <link href="http://philippe.bourgau.net/top-5-talks-i-attended-at-javaone-2016-part-2/"/>
    <updated>2016-09-28T20:02:00+00:00</updated>
    <id>http://philippe.bourgau.net/top-5-talks-i-attended-at-javaone-2016-part-2</id>
    <category term="clojure" /><category term="java" /><category term="programming" />
    <content type="html"><![CDATA[<p>This is my second post relating the talks I attended at JavaOne 2016. <a href="http://philippe.bourgau.net/top-5-talks-i-attented-at-java-one-2016-part-1/">Here</a> is the beginning of the story. Here we go.</p>

<h2>Euphoria Despite the Despair</h2>

<p><a href="https://twitter.com/holly_cummins">Holly Cummins</a></p>

<p>Our jobs aren&rsquo;t always fun &hellip; and that&rsquo;s in fact an issue ! Studies show that people who have fun at work are 31% more productive ! The talk was organized in 3 parts :</p>

<ol>
<li>What is fun ?</li>
<li>How to remove the parts that are not fun ?</li>
<li>How to add even more fun ?</li>
</ol>


<p>She defined what she called the funtinuum, which is that fun is a function of engagement and interaction. Basically, you won&rsquo;t have fun if you are doing nothing, or if no one cares about your work. That aligns well with <a href="https://www.amazon.com/Drive-Surprising-Truth-About-Motivates/dp/1594484805/ref=sr_1_1?ie=UTF8&amp;qid=1475123675&amp;sr=8-1&amp;keywords=daniel+pink+drive">Daniel Pink&rsquo;s drivers of motivation</a> : Autonomy, Mastery and Purpose.</p>

<p>If something is not fun, it&rsquo;s because it does not require engagement or interaction. It&rsquo;s either boring or no one cares, or both. If that&rsquo;s the case, it&rsquo;s probably some kind of waste in some sense &hellip; Removing un-fun activities would mean removing waste. It&rsquo;s interesting to note how this sounds like <a href="https://en.wikipedia.org/wiki/Muda_(Japanese_term">lean Muda</a>) ! She gave examples such as :</p>

<ul>
<li>automate stuff</li>
<li>pair programming transforms criticism into collaboration (bonus: it gives excuse to skip meetings)</li>
<li>go <a href="https://twitter.com/search?q=%23NoEstimates">#NoEstimates</a> because estimating is painful and useless</li>
<li>YAGNI defers useless things until they really add value</li>
<li>Organize to skip meetings and other boring stuff</li>
<li>&hellip;</li>
</ul>


<p>Last step is to add fun to the workplace. She warned that adding fun before removing the un-fun stuff would feel fake and would make things worse &hellip;</p>

<iframe src="http://philippe.bourgau.net//www.slideshare.net/slideshow/embed_code/key/DMpHQcMebTVGsz?startSlide=148" width="595" height="485" frameborder="0" marginwidth="0" marginheight="0" scrolling="no" style="border:1px solid #CCC; border-width:1px; margin-bottom:5px; max-width: 100%;" allowfullscreen> </iframe>


<p>To add fun, she suggested using things like :</p>

<ul>
<li>gamification (there was actually another great talk about gamification)</li>
<li>build a hacking contest instead of a security training</li>
<li>Install a <a href="https://sirenofshame.com/">Siren of Shame</a> for whoever breaks the build</li>
<li>&hellip;</li>
</ul>


<p>Here are <a href="http://www.slideshare.net/HollyCummins/software-developers-guide-to-fun-in-the-workplace-euphoria-despite-the-despair">the slides</a></p>

<h2>Java 9: The Quest for Very Large Heaps</h2>

<p>Bernard Traversat, Antoine Chambille</p>

<p><a href="http://philippe.bourgau.net/imgs/2016-09-28-top-5-talks-i-attended-at-javaone-2016-part-2/java-9-gc.jpg"><img class="center" src="http://philippe.bourgau.net/imgs/2016-09-28-top-5-talks-i-attended-at-javaone-2016-part-2/java-9-gc-small.jpg" title="Slide of the memory regions in G1" ></a></p>

<p>This talk might not be of interest for all, but it is for us <a href="http://murex.com">at work</a>. It went through the improvement to come to Java 9&rsquo;s G1 garbage collector. To summarize, to scale to very large heaps, it will split the memory into regions. Objects should be allocated on different regions depending on their specificities, which might help to build NUMA aware applications. Having the heap split up in smaller chunks enables the GC to run in parallel, which can speed up the old generation GC by up to 50 times !</p>

<p><a href="http://www.java9countdown.xyz/">Java 9 is scheduled for march 2017</a></p>

<h2>Agility and Robustness: Clojure + spec</h2>

<p><a href="https://twitter.com/stuarthalloway">Stuart Halloway</a></p>

<p>I haven&rsquo;t been touching Clojure for a while but I gave the language a try a few years ago. I had heard about Clojure spec but hadn&rsquo;t taken the time to look at it in details. As I understood it all, Spec is like some sort of <a href="https://en.wikipedia.org/wiki/Design_by_contract">Design by Contract</a> on steroïds ! Clojure is not statically typed, but you can now assign spec metadata to values. A spec is roughly a predicate. By defining specs for the inputs and outputs of functions, it is possible to verify at runtime that the function is behaving correctly.</p>

<p>As did Bertrand Meyer in the classic <a href="https://www.amazon.com/Object-Oriented-Software-Construction-Book-CD-ROM/dp/0136291554/ref=sr_1_1?ie=UTF8&amp;qid=1475211259&amp;sr=8-1&amp;keywords=object+oriented+software+construction+meyer">OOSC2</a>, who advised to use contracts during development only, Stuart explained that we should care about developer vs production time instead of compile vs runtime. From this point of view, it is not of great importance whether the compiler or the continuously running test suite finds an issue.</p>

<p>But specs are a lot more than predicates ! They can be used to :</p>

<ul>
<li>enable assertions at runtime</li>
<li>generate documentation</li>
<li>generate test cases</li>
<li>generate precise call logs</li>
<li>get precise error messages</li>
<li>explore a function and see how it can be called</li>
</ul>


<p>He went on to compare the virtues of Clojure spec with static typing (à la Java) and example based testing :</p>

<p><img class="center" src="http://philippe.bourgau.net/imgs/2016-09-28-top-5-talks-i-attended-at-javaone-2016-part-2/clojure-spec.jpg" title="Slide comparing Clojure spec with example based testing and static typing" ></p>

<p>Although I don&rsquo;t believe that generative testing can ever replace example based testing altogether, it certainly can help.</p>

<p>All in all, the presentation was insanely great and engaging. It made me seriously think of going into Clojure programming again !</p>

<p>Here are <a href="https://t.co/0FBl2l473N">the slides</a> and the <a href="https://www.youtube.com/watch?v=VNTQ-M_uSo8">the same talk at Strangeloop</a></p>

<h2>Conclusion</h2>

<p>Overall, JavaOne was great ! If I had the opportunity, I&rsquo;d go back every year ! There was a lot of other great talks I did not write about in these 2 posts, for example :</p>

<ul>
<li>Development Horror Stories was a lot of fun, especially the winning story !</li>
<li>Hacking Hiring was full of good advises</li>
<li>Managing Open Source Contributions in Large Organizations was full of good ideas</li>
<li>Increasing Code Quality with Gamification was very inspiring</li>
</ul>


<h2>Edit 17 October 2016</h2>

<p>I summarized 3 others JavaOne talks <a href="http://philippe.bourgau.net/3-more-great-talks-from-javaone-2016/">here</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Top 5 talks I attended at JavaOne 2016 (Part 1)]]></title>
    <link href="http://philippe.bourgau.net/top-5-talks-i-attented-at-java-one-2016-part-1/"/>
    <updated>2016-09-28T19:20:00+00:00</updated>
    <id>http://philippe.bourgau.net/top-5-talks-i-attented-at-java-one-2016-part-1</id>
    <category term="java" /><category term="programming" />
    <content type="html"><![CDATA[<p>With a few other colleagues, I had the chance to be sent to San Francisco last week to attend the <a href="https://www.oracle.com/javaone/index.html">JavaOne 2016</a> conferences by my <a href="http://www.murex.com">company</a>.</p>

<p><a href="http://philippe.bourgau.net/imgs/2016-09-28-top-5-talks-i-attented-at-javaone-2016-part-1/exhibition-hall.jpg"><img class="center" src="http://philippe.bourgau.net/imgs/2016-09-28-top-5-talks-i-attented-at-javaone-2016-part-1/exhibition-hall-small.jpg" title="Photo of the JavaOne exhibition hall" ></a></p>

<p>Here is super short list of the conferences I attended which I found really interesting</p>

<h2>Preventing errors before they happen</h2>

<p><a href="https://ece.uwaterloo.ca/~wdietl/">Werner Dietl</a> &amp; <a href="https://homes.cs.washington.edu/~mernst/">Michael Ernst</a></p>

<p>Since Java 6, it is possible to pass custom annotation processors to javac. Since Java 8, it is possible to add annotations to types. The guys behind the <a href="http://checkerframework.org">Checker Framework</a> used this to create custom pluggable type systems for your Java programs. These type systems enforce properties on your program, and will emit warnings or errors at compile time otherwise.</p>

<p>Here are a few example :</p>

<ul>
<li>declare <code>@Immutable MyObject myObject</code> to make sure that myObject won&rsquo;t be muted</li>
<li>declare <code>@NonNull MyObject myObject</code> to make sure that myObject is never null</li>
</ul>


<p><a href="http://philippe.bourgau.net/imgs/2016-09-28-top-5-talks-i-attented-at-javaone-2016-part-1/type-systems.jpg"><img class="center" src="http://philippe.bourgau.net/imgs/2016-09-28-top-5-talks-i-attented-at-javaone-2016-part-1/type-systems-small.jpg" title="Architecture of the type checker" ></a></p>

<p>Under the hood, the compiler behaves as if <code>@Immutable MyObject</code> and <code>MyObject</code> where completely separate types, and it knows and tracks specific ways of converting between the two. The framework provides a simple API to define your own type systems. They did a live demo showing how to quickly define things like <code>@Regex String</code>, <code>@Encrypted String</code> or <code>@Untainted String</code> (which forbids user input strings to avoid SQL injections).</p>

<p>The talk was really interesting, the framework seems lightweight and to integrate well with the typical tool stack. I definitely will give it a try the next time I have a bit of slack time.</p>

<p>Here are <a href="http://types.cs.washington.edu/checker-framework/2016-javaone/2016-09-19%20CF%20@%20JavaOne.pdf">the slides</a> and a <a href="https://www.youtube.com/watch?v=kb6nz85jbuQ">previous session of the presentation</a></p>

<h2>Keeping Your CI/CD Pipeline as Fast as It Needs to Be</h2>

<p><a href="https://twitter.com/abrahammarin?lang=fr">Abraham Marin-Perez</a></p>

<p>Continuous Delivery and Microservices are what you need to do, aren&rsquo;t they ? Well, when actually trying to setup a CI / CD pipeline for all your code, things quickly get complicated pretty fast ! The speaker presented how to deal with this complexity by using metrics from your VCS and build servers to draw an annotated graph of your build pipeline.</p>

<p><a href="http://philippe.bourgau.net/imgs/2016-09-28-top-5-talks-i-attented-at-javaone-2016-part-1/build-pipeline.jpg"><img class="center" src="http://philippe.bourgau.net/imgs/2016-09-28-top-5-talks-i-attented-at-javaone-2016-part-1/build-pipeline-small.jpg" title="Graph of the build pipeline" ></a></p>

<ul>
<li>He used the build time to set the size of every node : the longer, the larger</li>
<li>The color for the change rate : the more often it was built the warmer the color</li>
</ul>


<p>It was then possible to determine other metrics such as :</p>

<ul>
<li>the impact time of every node : build time + build time of all the dependencies</li>
<li>the weighted impact time : impact time * change rate</li>
<li>the overall average impact time : sum of all the weighted impact times</li>
<li>the overall max impact time : max of all the impact times</li>
</ul>


<p>Using this and your SLAs it is possible to define policies for your build times such as &ldquo;the max build time should not be more than X&rdquo;. If you want to speed up your build, you can set a target build time and analyzing the graph should help you to understand what architecture changes you need to make to your system in order to meet this build time (this sounds a lot like <a href="http://www-personal.umich.edu/~mrother/The_Improvement_Kata.html">Toyota&rsquo;s Improvement Kata</a> &hellip;)</p>

<p>I loved this talk ! I found the speaker captivating, he presented novel ideas which is not always the case.</p>

<p>Here are <a href="http://www.slideshare.net/AbrahamMarinPerez/keeping-your-cicd-pipeline-as-fast-as-it-needs-to-be">the slides</a>, and <a href="https://www.youtube.com/watch?v=8JxoKJng_eQ">the same presentation at Devoxx UK</a>.</p>

<h2>To Be Continued</h2>

<p>I promised 5, and that&rsquo;s only 2 talks ! Stay tuned, I&rsquo;ll write about the 3 others in the coming weeks. <a href="http://philippe.bourgau.net/top-5-talks-i-attended-at-javaone-2016-part-2/">Here they are</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Flavors of TDD]]></title>
    <link href="http://philippe.bourgau.net/flavours-of-tdd/"/>
    <updated>2016-09-20T20:54:00+00:00</updated>
    <id>http://philippe.bourgau.net/flavours-of-tdd</id>
    <category term="programming" /><category term="tdd" /><category term="testing" />
    <content type="html"><![CDATA[<p>During the years doing some coding dojos with the same circle of people, I came up with my own style of practicing <a href="https://en.wikipedia.org/wiki/Test-driven_development">TDD</a>. Lately, I had the chance to do a pair programming session with someone I did not know. That made me realize that they are in fact even more ways to practice TDD than I thought.</p>

<h2>Mockist vs Classisist</h2>

<p>A lot has already been written (and discussed) about these two approaches. I myself have already <a href="http://philippe.bourgau.net/hitting-the-middle-ground-between-classicist-and-mockist-tdd/">blogged</a> about the subject, I even gave a <a href="http://philippe.bourgau.net/how-not-to-use-mocks-my-talk-at-paris-rb/">talk</a> about it. From my own point of view, I believe that the inconvenients of making mocking the default far outweights the benefits. I&rsquo;m not saying that mocks aren&rsquo;t useful from time to time, but rather that they should remain the exception.</p>

<h2>Top-Down vs Bottom-Up</h2>

<p>That&rsquo;s the reason why I wrote this post. This is the main difference I found between my style and my pair&rsquo;s. Let me explain.</p>

<p><img class="center" src="http://philippe.bourgau.net/imgs/2016-09-20-flavours-of-tdd/topdown-vs-bottomup.jpg" title="Top-Down vs Bottom-Up" ></p>

<h3>Top-Down</h3>

<p>Doing TDD top-down means starting with high level end to end tests, implementing the minimum to make it work, refactor and repeat. A bit like BDD, the point is to focus on the expected behavior, and avoid writing useless things. The bad point is that the refactoring part can get pretty difficult. On real life code, strictly following top-down would mean writing a feature test first, passing it with a quick and dirty implementation, to then spend hours trying to refactor all that mess &hellip; good luck !</p>

<p>Here is another example, from coding dojos this time. Having had success with the top-down approach during previous dojos, we once intentionally tried to code <a href="https://en.wikipedia.org/wiki/Conway%27s_Game_of_Life#">Conway&rsquo;s Game of Life</a> using a top-down approach. We did so by writing high level tests that were checking special patterns (gliders &hellip;). That was a nightmare ! It felt like trying to reverse engineer the rules of the game from real use cases. It did not bring us anywhere.</p>

<p><img class="center" src="http://philippe.bourgau.net/imgs/2016-09-20-flavours-of-tdd/glider.gif" title="Conway's game of life gliders" ></p>

<h3>Bottom-Up</h3>

<p>At the other side of the spectrum, you can do bottom-up TDD. This means unit testing and implementing all the small bricks you think you&rsquo;ll need to provide the expected overall feature. The idea is to avoid tunnels and to get fast feedback on what you are coding. The bad side is that you might be coding something that will end up being unnecessary. Be careful, if you find yourself spending a lot of time building up utility classes, you might be doing too much bottom-up implementation.</p>

<p>The <a href="http://codingdojo.org/cgi-bin/index.pl?KataRomanNumerals">Numerals to Romans Kata</a> is a good exercise to fail at bottom-up. Every time I did this exercise during a coding dojo, people new to it would start to come up with complicated ways to do it (often involving complex array manipulation). Compared to that, applying disciplined bottom-up TDD brings a <a href="https://github.com/FreeCodeCamp/FreeCodeCamp/wiki/Algorithm-Roman-Numeral-Converter">brutally effective solution for Numerals to Romans</a>.</p>

<h2>Mixed approach</h2>

<p>Both approaches have their pros and cons. I really believe developers who are serious about TDD should master both, and learn when to apply each. In fact, as often, the best approach lies somewhere in the middle. Here&rsquo;s my recipe :</p>

<ol>
<li>Start with a high level feature test</li>
<li>try to make it pass &hellip;</li>
<li>&hellip; (usually) fail</li>
<li>rollback or shelve your test and draft implementation</li>
<li>build a brick</li>
<li>unshelve</li>
<li>try to make it pass &hellip;</li>
<li>&hellip; and so one until the high level test finally passes.</li>
</ol>


<p>In fact, it&rsquo;s a lot like the <a href="https://mikadomethod.wordpress.com/">Mikado Method</a> for building features instead of refactoring.</p>

<h2>Practice in dojos</h2>

<p>It&rsquo;s possible to intentionally practice this in coding dojos as well. Most kata should be OK, as long as the group agrees to fix it using this particular approach up front.</p>

<p>If during the dojo, you&rsquo;ve just written a test, suddenly realize that it won&rsquo;t be easy to get it passing, and that you&rsquo;ve got the elements spread out in your code, this is the time ! Comment the test, get the green bar, refactor, uncomment the test, try to make it pass, repeat &hellip; Eventually, you&rsquo;ll have all the bricks to make it easy to pass your test.</p>

<p><img class="center" src="http://philippe.bourgau.net/imgs/2016-09-20-flavours-of-tdd/cargo-cult.jpg" title="Cargo Cult : People thought that by building something that looks like a plane, they would be able to fly" ></p>

<p>Some might say this is not &lsquo;pure&rsquo; TDD, but that sounds like cargo cult to me ! As long as you make sure you are not building useless stuff, and that you keep the feedback loop as short as possible, you&rsquo;re on the right track.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How NOT to use mocks, my talk at Paris.rb]]></title>
    <link href="http://philippe.bourgau.net/how-not-to-use-mocks-my-talk-at-paris-rb/"/>
    <updated>2016-09-13T04:03:00+00:00</updated>
    <id>http://philippe.bourgau.net/how-not-to-use-mocks-my-talk-at-paris-rb</id>
    <category term="mocking" /><category term="ruby" /><category term="testing" />
    <content type="html"><![CDATA[<p>As I already <a href="http://philippe.bourgau.net/blog/categories/mocking/">wrote about</a>, mocks can be trecherous &hellip; I gave a talk about how to avoid them last tuesday at <a href="http://www.meetup.com/fr-FR/parisrb/">Paris.rb meetup</a>. Here are the <a href="https://docs.google.com/presentation/d/1OH3eBgjyMcpupUnGWsHXm7kQjkckFpnJStYYYqBL6Yk/edit?usp=sharing">slides</a>.</p>

<p>It talks about testing, mocking, but also <a href="https://en.wikipedia.org/wiki/Domain-driven_design">Domain Driven Design</a> and <a href="https://wincent.com/blog/proxies-with-rr">test proxies à la RR</a> (but for rspec).</p>

<iframe src="https://docs.google.com/presentation/d/1OH3eBgjyMcpupUnGWsHXm7kQjkckFpnJStYYYqBL6Yk/embed?start=false&loop=false&delayms=3000" frameborder="0" width="790" height="470" allowfullscreen="true" mozallowfullscreen="true" webkitallowfullscreen="true"></iframe>




<p><p/>
Check the speaker&rsquo;s comments for all the details.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How to use Hackernews and Reddit for blogging]]></title>
    <link href="http://philippe.bourgau.net/how-to-use-hackernews-and-reddit-for-blogging/"/>
    <updated>2016-09-05T04:52:00+00:00</updated>
    <id>http://philippe.bourgau.net/how-to-use-hackernews-and-reddit-for-blogging</id>
    <category term="blogging" /><category term="software" />
    <content type="html"><![CDATA[<p>A few weeks ago, I posted my latest article <a href="http://philippe.bourgau.net/is-there-any-room-for-the-not-passionate-developer/">Is There Any Room for the Not-Passionate Developer ?</a> on <a href="https://news.ycombinator.com/">Hackernews</a> and <a href="https://www.reddit.com/r/programming/">Reddit Programming</a>. The post stayed on the fist page for a while, and I got a lot of traffic. If you are yourself blogging, you might be interested to know how it occurred, and what I learned in the process.</p>

<h2>How it started</h2>

<p><img class="center" src="http://philippe.bourgau.net/imgs/2016-09-05-how-to-use-hackernews-and-reddit-for-blogging/soft-skills.jpg" title="The cover of 'Soft Skills, the software developer's life manual'" ></p>

<p>In <a href="https://www.amazon.com/Soft-Skills-software-developers-manual/dp/1617292397/ref=sr_1_1?ie=UTF8&amp;qid=1473135683&amp;sr=8-1&amp;keywords=soft+skills">Soft Skills, the software developer&rsquo;s life manual</a> John Somnez explains that posting your blog articles on HN or Reddit might bring you a ton of traffic, but that comments can be hard to swallow at time. Within a few hours of writing my blog post it had generated some positive activity on twitter (favorites and retweets) from my regular followers. That&rsquo;s a good sign that the post is good enough. As I had promised myself in such case, I submitted the post to both HN and Reddit.</p>

<h2>What happened ?</h2>

<p><img class="center" src="http://philippe.bourgau.net/imgs/2016-09-05-how-to-use-hackernews-and-reddit-for-blogging/google-analytics.jpg" title="A Google Analytics screenshot, with the traffic spike" ></p>

<p>I don&rsquo;t know for sure on Reddit, but I know my post stayed on the first page of HN for a few hours, it even went up to the third place for a while. In the process I got a lot of traffic, a lot more than I am used to. I also got a ton of comments, on HN, Reddit and directly on my post. John Somnez had warned that comments on HN and Reddit can be very harsh, so I went through these quickly, took notes about the points that seemed interesting, but I only responded to comments on my website.</p>

<p>Overall, the comments were pretty interesting though, and brought a lot of valid points. I&rsquo;m planning to write a &lsquo;response&rsquo; article to take all these into perspective.</p>

<p>Most of the traffic was made in the day I submitted my post, but I had more traffic than usual for 2 or 3 days. Since then, the traffic has settled down, but I now get between 2 and 5 times more traffic than I typically had on a daily basis ! An online Taiwanese tech magazine also asked me the permission to translate <a href="http://www.inside.com.tw/2016/08/05/is-there-any-room-for-the-not-passionate-developer">my post in Chinese</a> !</p>

<p>I&rsquo;m not sure about the performance of my website during the traffic spike. I&rsquo;m using <a href="http://octopress.org/">Octopress</a> to statically generated html on <a href="https://pages.github.com/">Github Pages</a>, so that should be fine. I am also using a custom domain, and I need to make sure my <a href="https://news.ycombinator.com/item?id=7738293">DNS is correctly configured</a> for this to perform well.</p>

<h2>Advice for bloggers</h2>

<p>So here is what I am going to do regarding HN and Reddit in the future :</p>

<ol>
<li>It can bring so much traffic and backlinks that I&rsquo;ll definitely continue to submit blog posts from time to time</li>
<li>For the moment, I&rsquo;ll stick to only submitting the articles from which I already received good feedbacks, I don&rsquo;t want to get a bad karma or reputation on these websites</li>
<li>I might submit old articles that gathered good reviews at the time I wrote them</li>
<li>Concerning comments, I&rsquo;ll try to grow an even thicker skin. Maybe at some point I&rsquo;ll try to answer on HN or Reddit</li>
</ol>


<p>Of course, depending how this works, I will adapt !</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Kudo Boxes for Kids]]></title>
    <link href="http://philippe.bourgau.net/kudo-boxes-for-kids/"/>
    <updated>2016-08-30T04:48:00+00:00</updated>
    <id>http://philippe.bourgau.net/kudo-boxes-for-kids</id>
    <category term="agile" /><category term="management30" />
    <content type="html"><![CDATA[<p>How do you get your kids to participate with housekeeping ? I guess that&rsquo;s the dream of all parents. As so, we&rsquo;ve tried quite a lot of tactics throughout the years. Carrots and stick never really worked, so we tried positive reinforcement, gratitude &hellip; Unfortunately, nothing really made any noticeable improvement.</p>

<h2>Until now !</h2>

<p>At work, we&rsquo;ve been using <a href="https://management30.com/practice/intrinsic-motivation/">Kudo Boxes</a> for a <a href="http://philippe.bourgau.net/how-to-deal-with-the-incentive-system-in-an-agile-team/">while now</a>. A kudo box is a small mailbox where teammates can drop a word of thank or some praise (No blame allowed here !)</p>

<p>Why not try the same thing at home ? During the summer holidays, we&rsquo;ve build kudo boxes for everyone in the family.</p>

<p><img class="center" src="http://philippe.bourgau.net/imgs/2016-08-30-kudo-boxes-for-kids/kudo-box.jpg" title="Our family Kudo Box" ></p>

<p>It&rsquo;s a nice and easy way to express gratitude for any good stuff our kids do. The great thing is that it&rsquo;s cheap, it&rsquo;s easy to carry cards around and to hand one out at any moment.</p>

<h2>What happened ?</h2>

<p>First, we now have very joyful kudo reading sessions : our kids rush to the boxes to check for new cards. The second most noticeable change we observed is that they are both participating more in the house chores ! For example, as soon as we start cooking, they might spontaneously dress the table up. Or they might bring tools to help us as best as they can when we are tending to the garden.</p>

<p>To summarize, it seems it brought a lot of joy and love in the house.</p>

<h2>How we started ?</h2>

<p><img class="center" src="http://philippe.bourgau.net/imgs/2016-08-30-kudo-boxes-for-kids/typical-kudo-box.jpg" title="The typical employee's kudo box, as can be found on the management 3.0 website" ></p>

<p>They are many ways to build a kudo box. The simplest way might be to get an old shoe box, and to cut a hole in the cover. We bought a wooden box with four drawers, and spent some time all together to decorate it. This in itself was already fun.</p>

<p>We started using simple pieces of paper as kudo cards, but I later downloaded and printed a bunch of <a href="https://management30.com/product/kudo-cards/">official kudo cards</a> from the Management 3.0 website. It turns out there is a version in <a href="https://1qjpt15fhlq3xjfpm2utibj1-wpengine.netdna-ssl.com/wp-content/uploads/2016/03/Management30-KudoCards-2015-self-print-A4-French.pdf">french</a>.</p>

<h2>Bonus</h2>

<p>An unexpected, but great, side effect is that my spouse and I started to get kudos as well ! It&rsquo;s really nice to receive a word from your kids. For example, here is a drawing I got from my daughter.</p>

<p><img class="center" src="http://philippe.bourgau.net/imgs/2016-08-30-kudo-boxes-for-kids/kudo-drawing.jpg" title="A nice drawing from my daughter that I found in my kudo box" ></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[RSpecProxies now supports .to receive(xxx)... syntax]]></title>
    <link href="http://philippe.bourgau.net/rspecproxies-now-supports-to-receive-xxx-dot-dot-dot-syntax/"/>
    <updated>2016-08-23T04:47:00+00:00</updated>
    <id>http://philippe.bourgau.net/rspecproxies-now-supports-to-receive-xxx-dot-dot-dot-syntax</id>
    <category term="agile" /><category term="mocking" /><category term="rspec" /><category term="ruby" /><category term="tdd" /><category term="testing" />
    <content type="html"><![CDATA[<p><img class="center" src="http://philippe.bourgau.net/imgs/2016-08-23-rspecproxies-now-supports-to-receive-xxx-dot-dot-dot-syntax/test_probes.jpg" title="Hardware test probes" ></p>

<p>Pure mocks are dangerous. They let defect go through, give a false sense of security and are difficult to maintain.</p>

<p>I&rsquo;ve already talked about it <a href="http://philippe.bourgau.net/hitting-the-middle-ground-between-classicist-and-mockist-tdd/">before</a> but since then, <a href="http://david.heinemeierhansson.com/2014/tdd-is-dead-long-live-testing.html">DHH announced that he was quitting TDD</a>, the <a href="http://martinfowler.com/articles/is-tdd-dead/">Is TDD Dead ?</a> debate took place, and the conclusion is that <a href="https://www.thoughtworks.com/insights/blog/mockists-are-dead-long-live-classicists">mockist are dead</a>.</p>

<p>They are still times when mocks feel much simpler than any other things. For example, imagine your process leaks and crashes after 10 hours, the fix is to pass an option to a thirdparty, how would you test this in a fast test ? That&rsquo;s exactly the kind of situation where using test proxies saves you from mocks. A test proxy defers everything to the real object but also features unintrusive hooks and probes that you can use in your test. If you want a code example, check <a href="https://github.com/philou/mes-courses/commit/2c9fce17f9b59d0b3828f309015c07b17cceddf4?diff=split">this commit</a>, where I refactored a rails controller test from mocks to a RSpecProxies (v0.1).</p>

<p>I created RSpecProxies <a href="http://philippe.bourgau.net/my-new-gem-for-creating-rspec-proxies/">a while ago</a>, a while ago, and it&rsquo;s syntax made it alien to the RSpec work, it needed an update. <a href="http://rspec.info">RSpec</a> now supports basic proxying with partial stubs, spies, the <code>and_call_original</code> and the <code>and_wrap_original</code> methods. <a href="https://github.com/philou/rspecproxies">RSpecProxies 1.0</a> is a collection of hooks built on top of these to make proxying easier, with a syntax that will be familiar to RSpec users.</p>

<h2>Before original hook</h2>

<p>This hook is triggered before a call a method. Suppose you want to simulate a bad connection :</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">it</span> <span class="s1">&#39;can simulate unreliable connection&#39;</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span>
</span><span class='line'>  <span class="n">allow</span><span class="p">(</span><span class="no">Resource</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">receive</span><span class="p">(</span><span class="ss">:get</span><span class="p">)</span><span class="o">.</span><span class="n">and_before_calling_original</span> <span class="p">{</span> <span class="o">|*</span><span class="n">args</span><span class="o">|</span>
</span><span class='line'>    <span class="n">i</span> <span class="o">+=</span> <span class="mi">1</span>
</span><span class='line'>    <span class="k">raise</span> <span class="no">RuntimeError</span><span class="o">.</span><span class="n">new</span> <span class="k">if</span> <span class="n">i</span> <span class="o">%</span> <span class="mi">3</span> <span class="o">==</span> <span class="mi">0</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">resources</span> <span class="o">=</span> <span class="no">Resource</span><span class="o">.</span><span class="n">get_at_least</span><span class="p">(</span><span class="mi">10</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">expect</span><span class="p">(</span><span class="n">resources</span><span class="o">.</span><span class="n">size</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">eq</span><span class="p">(</span><span class="mi">10</span><span class="p">)</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h2>After original hooks</h2>

<p>RSpecProxies provides the same kind of hook after the call :</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">it</span> <span class="s1">&#39;can check that the correct data is used (using and_after_calling_original&#39;</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">user</span> <span class="o">=</span> <span class="kp">nil</span>
</span><span class='line'>  <span class="n">allow</span><span class="p">(</span><span class="no">User</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">receive</span><span class="p">(</span><span class="ss">:load</span><span class="p">)</span><span class="o">.</span><span class="n">and_after_calling_original</span> <span class="p">{</span> <span class="o">|</span><span class="n">result</span><span class="o">|</span> <span class="n">user</span> <span class="o">=</span> <span class="n">result</span> <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">controller</span><span class="o">.</span><span class="n">login</span><span class="p">(</span><span class="s1">&#39;joe&#39;</span><span class="p">,</span> <span class="s1">&#39;secret&#39;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">expect</span><span class="p">(</span><span class="n">response</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="kp">include</span><span class="p">(</span><span class="n">user</span><span class="o">.</span><span class="n">created_at</span><span class="o">.</span><span class="n">to_s</span><span class="p">)</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>Here we are capturing the return value to use it later in the test. For this special purpose, RSpecProxies also provides 2 other helpers :</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># Store the latest result in @user of self</span>
</span><span class='line'><span class="n">allow</span><span class="p">(</span><span class="no">User</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">receive</span><span class="p">(</span><span class="ss">:load</span><span class="p">)</span><span class="o">.</span><span class="n">and_capture_result_into</span><span class="p">(</span><span class="nb">self</span><span class="p">,</span> <span class="ss">:user</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># Collect all results in the users array</span>
</span><span class='line'><span class="n">users</span> <span class="o">=</span> <span class="o">[]</span>
</span><span class='line'><span class="n">allow</span><span class="p">(</span><span class="no">User</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">receive</span><span class="p">(</span><span class="ss">:load</span><span class="p">)</span><span class="o">.</span><span class="n">and_collect_results_into</span><span class="p">(</span><span class="n">users</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Proxy chains</h2>

<p>RSpec mocks provides the <code>message_chain</code> feature to do build chains of stubs. RSpecProxy provides a very similar proxy chain concept. The main difference is that it creates proxies along the way, and not pure stubs. Pure stubs assume that you are mocking everything, but as our goal is to mock as little as possible, using proxies makes more sense.</p>

<p>When using a mockist approach, the message chain is a bad smell because it makes your tests very brittle by depending on a lot of implementation. In contrast, proxy chains are meant to be used where they are the simplest way to inject what you need, without creating havoc.</p>

<p>For example, suppose you want to display the progress of a very slow background task. You could mock a lot of your objects to have a fast test, of if you wanted to avoid all the bad side effects of mocking, you could run the background task in your test, and have a slow test &hellip; Or, you could use a chain of proxies :</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">it</span> <span class="s1">&#39;can override a deep getter&#39;</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">allow</span><span class="p">(</span><span class="no">RenderingTask</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">proxy_message_chain</span><span class="p">(</span><span class="s2">&quot;load.completion_ratio&quot;</span><span class="p">)</span> <span class="p">{</span> <span class="o">|</span><span class="n">e</span><span class="o">|</span> <span class="n">e</span><span class="o">.</span><span class="n">and_return</span><span class="p">(</span><span class="mi">0</span><span class="o">.</span><span class="mi">2523</span><span class="p">)</span> <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">controller</span><span class="o">.</span><span class="n">show</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">expect</span><span class="p">(</span><span class="n">response</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="kp">include</span><span class="p">(</span><span class="s1">&#39;25%&#39;</span><span class="p">)</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>Here the simplest thing to do is just to override a small getter, because from a functionnal point of view, that&rsquo;s exactly what we want to test.</p>

<h2>Last word</h2>

<p>The code is on <a href="https://github.com/philou/rspecproxies">github</a>, v1.0.0 is on <a href="https://rubygems.org/gems/rspecproxies/versions/0.1.0">rubygems</a>, it requires Ruby v2.2.5 and RSpec v3.5, the license is MIT, help in any form are welcome !</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How to prepare a new Ruby env in 3 minutes using Docker]]></title>
    <link href="http://philippe.bourgau.net/how-to-prepare-a-new-ruby-env-in-3-minutes-using-docker/"/>
    <updated>2016-08-17T05:21:00+00:00</updated>
    <id>http://philippe.bourgau.net/how-to-prepare-a-new-ruby-env-in-3-minutes-using-docker</id>
    <category term="docker" /><category term="ruby" /><category term="software" />
    <content type="html"><![CDATA[<p>One or two weeks ago, I registered to the <a href="http://www.meetup.com/fr-FR/Paris-Ruby-Workshop/">Paris Ruby Workshop Meetup</a> and needed a Ruby env. I have been using <a href="https://www.vagrantup.com/">Vagrant</a> quite a lot to isolate my different dev envs from each other and from my main machine. As I&rsquo;ve been digging more into <a href="http://www.docker.com">Docker</a> lately, I thought I&rsquo;d simply use Docker and Docker Compose instead.</p>

<p>I turned out to be dead simple. All that is needed is a <code>docker-compose.yml</code> file to define the container, record the shared volume and set a bundle path inside it :</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='yaml'><span class='line'><span class="l-Scalar-Plain">rubybox</span><span class="p-Indicator">:</span>
</span><span class='line'>  <span class="l-Scalar-Plain">image</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">ruby:2.3</span>
</span><span class='line'>  <span class="l-Scalar-Plain">command</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">bash</span>
</span><span class='line'>  <span class="l-Scalar-Plain">working_dir</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">/usr/src/app</span>
</span><span class='line'>  <span class="l-Scalar-Plain">environment</span><span class="p-Indicator">:</span>
</span><span class='line'>    <span class="l-Scalar-Plain">BUNDLE_PATH</span><span class="p-Indicator">:</span> <span class="s">&#39;vendor/bundle&#39;</span>
</span><span class='line'>  <span class="l-Scalar-Plain">volumes</span><span class="p-Indicator">:</span>
</span><span class='line'>    <span class="p-Indicator">-</span> <span class="s">&#39;.:/usr/src/app&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Without the custom bundle path, bundled gems would be installed elsewhere in the container, and lost at every restart.</p>

<p>To use the Rubybox, just type <code>docker-compose run rubybox</code> and you&rsquo;ll get a shell from within your ruby machine, where you can do everything you want.</p>

<p>In fact, I found the thing so useful, that I created the <a href="https://github.com/philou/rubybox">Rubybox</a> git repo to simplify cloning and reusing. I&rsquo;ve already cloned it at least 3 times since then !</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>git clone git@github.com:philou/rubybox.git
</span><span class='line'><span class="nb">cd </span>rubybox
</span><span class='line'>docker-compose run rubybox
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
</feed>
