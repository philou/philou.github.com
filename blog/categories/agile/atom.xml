<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: agile | Philippe Bourgau's blog]]></title>
  <link href="http://philippe.bourgau.net/blog/categories/agile/atom.xml" rel="self"/>
  <link href="http://philippe.bourgau.net/"/>
  <updated>2016-01-16T07:32:14+00:00</updated>
  <id>http://philippe.bourgau.net/</id>
  <author>
    <name><![CDATA[Philippe Bourgau]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[How We Started Exploratory Testing]]></title>
    <link href="http://philippe.bourgau.net/how-we-started-exploratory-testing/"/>
    <updated>2016-01-08T18:18:00+00:00</updated>
    <id>http://philippe.bourgau.net/how-we-started-exploratory-testing</id>
    <content type="html"><![CDATA[<p>Manual testing is important. Here is how we got to love exploratory testing.</p>

<p><img class="center" src="/imgs/2016-01-08-how-we-started-exploratory-testing/explore.jpg" title="A map and a telescope for exploration" ></p>

<h2>Initial situation</h2>

<p><a href="http://www.murex.com">At work</a> we are building a risk computation engine for the financial markets. It uses a DSL to describe the exact computations to estimate the risk on the data it knows. This in itself is already complex enough to justify the heavy investment in automated testing we did.</p>

<p>With 90% of automated test coverage, Cucumber scenarios to verify quality, everything should just work &hellip; shouldn&rsquo;t it ?</p>

<h2>First try at exploratory testing</h2>

<p><a href="http://www.amazon.com/Art-Agile-Development-James-Shore/dp/0596527675/ref=sr_1_1?ie=UTF8&amp;qid=1452279644&amp;sr=8-1&amp;keywords=the+art+of+agile+development"><img class="center" src="/imgs/2016-01-08-how-we-started-exploratory-testing/art-of-agile-development.jpg" title="The cover of the Art Of Agile Development" ></a></p>

<p>In <a href="http://www.amazon.com/Art-Agile-Development-James-Shore/dp/0596527675/ref=sr_1_1?ie=UTF8&amp;qid=1452279644&amp;sr=8-1&amp;keywords=the+art+of+agile+development">The art of agile development</a>, James Shore details the practice of exploratory testing as a great way of both :</p>

<ul>
<li>improving the quality of the product by finding bugs</li>
<li>improving the process</li>
</ul>


<p>That&rsquo;s why we gave it a try. Here is the recipe for an exploratory session :</p>

<ol>
<li>Book 1 hour for the full team to do exploratory testing</li>
<li>Prepare a downloadable zip with all the material required to run and test your software</li>
<li>Ask everyone to pick a particular aspect of the system to test during this session</li>
<li>Record bugs when you find one</li>
<li>Spend 30 minutes just after the session to filter duplicate bugs and make sure they are well described</li>
</ol>


<p>Obviously, we also added our special sauce</p>

<ol>
<li>We were to do exploratory testing in pairs, as we do programming, to find more bugs</li>
<li>We gamified it by granting a price to the pair that finds the most bugs. Do you remember how I brought <a href="/how-to-setup-a-weekly-fruit-basket-in-no-time/">fruits for sale in the office</a> ? It turns out we are slowly earning money with the fruits &hellip; enough for the price to be 5 fruits each for the wining pair !</li>
</ol>


<p>This transformed developers into ferocious testers ! I guarantee that with such incentives you&rsquo;ll find bugs &hellip; as we did.</p>

<p><a href="/how-to-setup-a-weekly-fruit-basket-in-no-time/"><img class="center" src="/imgs/2016-01-08-how-we-started-exploratory-testing/fruits-basket.jpg" title="Our weekly fruit basket at work" ></a></p>

<h2>Doing it systematically</h2>

<p>We took some time to fix all these bugs during a few sprints. And did another exploratory testing session a few months after &hellip;</p>

<p>As we were still finding bugs in the second session, we decided to make them part of the every sprint. As we got better at testing, a lot of bugs started to get uncovered ! So much that we had to change something.</p>

<h2>Improving our process</h2>

<p>We meet in retrospective and here is what we decided :</p>

<ol>
<li>Fix all bugs before working on any other story (obviously, automated tests are added in the process)</li>
<li>Classify what exactly is a bug. For example, for us, a bug is something that used to work or silently returns bad results or corrupts the data</li>
<li>Add exploratory testing by another pair to our definition of done</li>
</ol>


<p>The number of bugs we find during exploratory testing sessions is starting to decrease. We hope that we&rsquo;ll soon be able to do exploratory testing on the fly, as part of our daily work and to completely remove the specific sessions.</p>

<h2>Benefits</h2>

<p>Exploratory testing brought us a lot.</p>

<ul>
<li>Obviously, the product is a lot more solid</li>
<li>We are surely saving time that would have been lost if the bugs had been uncovered by the users</li>
<li>Fixing the bugs forced us to fix some technical debt : bugs often came from areas of the code that we were not so proud or confident of</li>
</ul>


<p>Exploratory testing is a nobrainer. All teams should do it.</p>

<p>So, in the end, as in the old days, we are back to regular manual testing &hellip; but only for exploration.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How To Write Good Performance Stories]]></title>
    <link href="http://philippe.bourgau.net/how-to-write-good-performance-stories/"/>
    <updated>2016-01-08T07:58:00+00:00</updated>
    <id>http://philippe.bourgau.net/how-to-write-good-performance-stories</id>
    <content type="html"><![CDATA[<p>If you&rsquo;re having difficulties writing good performance related stories for your project, that&rsquo;s no surprise ! We&rsquo;ve been through the same troubles and we found a way that works a lot better.</p>

<p><img class="center" src="/imgs/2016-01-08-how-to-write-good-performance-stories/speed.jpg" title="A Mb speed counter" ></p>

<h2>Solution 1 : <a href="/performance-is-a-feature/">Performance is a feature</a></h2>

<p>Right ? In typical agile way, a story about performance would be written like</p>

<blockquote><p>As marketing, I want the page load to perform under 1 second, In order for the customers to stay on the site</p></blockquote>

<p>If the performance bottleneck and the fix are obvious, that might work very well. If that&rsquo;s your case, then go on, that&rsquo;s the simplest way!</p>

<p>Unfortunately for us, we are not in that case. <a href="http://www.murex.com">At work</a> we are building a risk engine and we need to perform extremely well on a wide set of different scenarios. Imagine a story such as</p>

<blockquote><p>As a risk manager, I want the VAR scenario to compute in less than 1 second, in order to have real time data</p></blockquote>

<ul>
<li>we&rsquo;re pretty sure that there won&rsquo;t be 1 but many bottlenecks to fix before reaching the expected performance</li>
<li>speeding up the VAR scenario might slow down other scenarios</li>
</ul>


<p>That makes this kind of story too fuzzy. We tried them, and we had difficulties to estimate and close them.</p>

<h2>Solution 2 : Back to the traditional way</h2>

<p>Without an agile backlog, developers would have worked on tasks such as</p>

<blockquote><p>Add caching to the computation engine</p></blockquote>

<p>That&rsquo;s estimable, but we&rsquo;ve got no clue of the <em>why</em> ! When it&rsquo;s done, we won&rsquo;t be able to know whether it&rsquo;s worth to keep it or not. In fact, tt&rsquo;s just not a <a href="https://en.wikipedia.org/wiki/INVEST_(mnemonic">story</a>) !</p>

<h2>Solution 3 : Mixing both</h2>

<p>Here is how we we are now writing performance stories at work :</p>

<blockquote><p>As a risk manager, I want to have caching in the computation engine, in order to the VAR scenario compute under 1 second (in order to have real time data)</p></blockquote>

<p>It&rsquo;s now estimable, we know what it&rsquo;s there for. It&rsquo;s obviously not enough though : we know that we will very likely need to do other performance stories after this one.</p>

<h2>Embrace uncertainty</h2>

<p><img class="center" src="/imgs/2016-01-08-how-to-write-good-performance-stories/engine.jpg" title="A Maserati engine" ></p>

<p>The fact is that in our context, getting better performances is <em>hard</em> :</p>

<ul>
<li>it requires a lot of work</li>
<li>we don&rsquo;t know how much at the beginning</li>
<li>we often try things that don&rsquo;t work</li>
</ul>


<p>This makes the whole project more uncertain, so we&rsquo;re better off embracing this uncertainty in the way we write and prioritize our performance stories.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[The technical debt ponzi scheme]]></title>
    <link href="http://philippe.bourgau.net/the-technical-debt-ponzi-scheme/"/>
    <updated>2015-10-01T19:34:00+00:00</updated>
    <id>http://philippe.bourgau.net/the-technical-debt-ponzi-scheme</id>
    <content type="html"><![CDATA[<p>Madoff would have been better off managing software projects than investing on Wall Street !</p>

<p><img class="center" src="/imgs/2015-10-01-the-technical-debt-ponzi-scheme/bernie.jpg" title="&ldquo;Madoff&rsquo;s photo in jail&rdquo;" ></p>

<p>Whereas in finance, a Ponzi scheme is a sure road to jail, it seems to be the de-facto standard in software development.</p>

<p>A few months ago, I read <a href="http://www.amazon.com/Managing-Software-Debt-Inevitable-Development/dp/0321554132/ref=sr_1_2?ie=UTF8&amp;qid=1443728175&amp;sr=8-2&amp;keywords=managing+technical+debt">Managing Software Debt</a>, hoping to find methods about how to manage technical debt with some hard numbers (instead I found some good practices to avoid it, but that&rsquo;s another story). At no place did I read that taking more debt to pay the interests of existing debt was a good practice though &hellip;</p>

<p>Thinking of it, I can remember of such <a href="https://en.wikipedia.org/wiki/Ponzi_scheme">Ponzi Schemes</a> in nearly every organization I worked in. Here are a few typical manifestations I saw :</p>

<ul>
<li>writing bogus code to compensate for some other bogus code</li>
<li>creating tools to workaround existing technical debt. Ex:

<ul>
<li>exotic build tools to build some code riddled with cyclic dependencies that no sane build tool can build</li>
<li>in house tools that do 10% of what standard (open source) tools can do on code following main standards</li>
</ul>
</li>
</ul>


<p>If this goes on for too long, you can end up in a technical debt death spiral : you know debt is out of control, so taking debt becomes the only way of actually getting anything done. &ldquo;Let&rsquo;s win this client now, because we won&rsquo;t be able to later &hellip;&rdquo;. It&rsquo;s like running to one&rsquo;s own ruin.</p>

<p><img class="center" src="/imgs/2015-10-01-the-technical-debt-ponzi-scheme/road-wall.jpg" title="&ldquo;A road going straight in a wall&rdquo;" ></p>

<p>If your organization is in this stage, you might think at the <a href="/a-plan-for-technical-debt-lean-software-development-part-7/">&lsquo;time horizon&rsquo;</a> of your product, and discover that fixing the technical debt sometimes brings more value than getting this new client !</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Binary Hand Planning Poker]]></title>
    <link href="http://philippe.bourgau.net/binary-hand-planning-poker/"/>
    <updated>2015-09-23T19:44:00+00:00</updated>
    <id>http://philippe.bourgau.net/binary-hand-planning-poker</id>
    <content type="html"><![CDATA[<p>At <a href="http://www.murex.com">work</a>, we are using as we all have Android phones, we are using the <a href="https://play.google.com/store/apps/details?id=artarmin.android.scrum.poker&amp;hl=fr">Scrum Poker Cards</a> app to do our <a href="https://en.wikipedia.org/wiki/Planning_poker">planning poker</a>.</p>

<p>This usually works fine, but newcomers usually have one bad remark about it :</p>

<blockquote><p>It&rsquo;s not geeky enough</p></blockquote>

<p>Obviously, it also does not work if one lakes a phone, but who would come in a meeting without it nowadays ?</p>

<p>Enters the binary hand poker !</p>

<table>
<thead>
<tr>
<th> Score </th>
<th> Sign </th>
</tr>
</thead>
<tbody>
<tr>
<td>1</td>
<td> <br/> <img src="/imgs/2015-09-23-binary-hand-planning-poker/01.jpg" alt="Sign for 1" /></td>
</tr>
<tr>
<td>2</td>
<td> <img src="/imgs/2015-09-23-binary-hand-planning-poker/02.jpg" alt="Sign for 2" /></td>
</tr>
<tr>
<td>3</td>
<td> <img src="/imgs/2015-09-23-binary-hand-planning-poker/03.jpg" alt="Sign for 3" /></td>
</tr>
<tr>
<td>5</td>
<td> <img src="/imgs/2015-09-23-binary-hand-planning-poker/05.jpg" alt="Sign for 5" /></td>
</tr>
<tr>
<td>8</td>
<td> <img src="/imgs/2015-09-23-binary-hand-planning-poker/08.jpg" alt="Sign for 8" /></td>
</tr>
<tr>
<td>13</td>
<td> <img src="/imgs/2015-09-23-binary-hand-planning-poker/13.jpg" alt="Sign for 13" /></td>
</tr>
<tr>
<td>20</td>
<td> <img src="/imgs/2015-09-23-binary-hand-planning-poker/20.jpg" alt="Sign for 20" /></td>
</tr>
</tbody>
</table>


<br/>


<p>Now that&rsquo;s geeky ! I still have to find a symbol for the coffee cup and the question mark though &hellip;</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Feedback On 360° Feedback Session]]></title>
    <link href="http://philippe.bourgau.net/feedback-on-360-degrees-feedback-session/"/>
    <updated>2015-08-27T19:40:00+00:00</updated>
    <id>http://philippe.bourgau.net/feedback-on-360-degrees-feedback-session</id>
    <content type="html"><![CDATA[<blockquote><p>If you remove your job, you are promoted. (a classic lean quote)</p></blockquote>

<p>In <a href="http://www.amazon.com/Management-3-0-Leading-Developers-Developing-ebook/dp/B004ISL6JY/ref=sr_1_1?ie=UTF8&amp;qid=1438085414&amp;sr=8-1&amp;keywords=management+3.0">Management 3.0</a>, <a href="http://jurgenappelo.com/">Jurgen Appelo</a> suggests doing full team 360° feedback sessions instead of more traditional manager-collaborator meetings.</p>

<p><a href="http://www.amazon.com/Management-3-0-Leading-Developers-Developing-ebook/dp/B004ISL6JY/ref=sr_1_1?ie=UTF8&amp;qid=1438085414&amp;sr=8-1&amp;keywords=management+3.0"><img class="center" src="/imgs/2015-08-27-feedback-on-360-degrees-feedback-session/management30.jpg" title="&ldquo;The cover of Management 3.0 book&rdquo;" ></a></p>

<p>He argues in favor of this practice in order to :</p>

<ul>
<li>obviously, get some feedback and improve</li>
<li>also give feedback to the manager so he too can improve</li>
<li>help the team to further self organize</li>
<li>practice everyone&rsquo;s people skills</li>
<li>have more quality objective feedback than subjective manager feedback</li>
<li>free some manager time</li>
</ul>


<h2>Our Experience</h2>

<p>We just gave it a try. As a fist experiment, we did it at just 3, all willing to try. Here is the ROTI (Return On Time Invested)</p>

<table>
<thead>
<tr>
<th>Grade(/5) </th>
<th> Comment</th>
</tr>
</thead>
<tbody>
<tr>
<td>5 </td>
<td> Useful and healthy. It&rsquo;s a way to stop grumbling. It&rsquo;s also the occasion to say things that we often don&rsquo;t.</td>
</tr>
<tr>
<td>5 </td>
<td> I&rsquo;m leaving the room with real improvement topics. It calms my emotions, it&rsquo;s like &ldquo;balm for the heart&rdquo;</td>
</tr>
<tr>
<td>5 </td>
<td> I&rsquo;m getting out with great advises. I think it&rsquo;s great for team spirit. It took 1h for just the 3 of us, I&rsquo;m wondering how we&rsquo;ll manage this if we are more ?</td>
</tr>
</tbody>
</table>


<h2>If you want to try it</h2>

<p>A few last minute advises  :</p>

<ul>
<li>Don&rsquo;t force it onto people, start with volunteers</li>
<li>There must be a safe and positive atmosphere in the team</li>
<li>This is an improvement exercices, and it should not be used as any kind of evaluation</li>
<li>Learn how to give feedback

<ul>
<li><a href="http://www.murex.com">Our company</a> provides trainings on non violent communication and positive feedback, maybe yours does too !</li>
<li>Appelo explains how to give written feedback in his other book <a href="http://www.amazon.com/gp/product/9492032023">#Workout</a>. Though better suited for email feedback, I found it a great way to prepare for the session.</li>
</ul>
</li>
</ul>


<p><a href="https://management30.com/product/workouts/"><img class="center" src="/imgs/2015-08-27-feedback-on-360-degrees-feedback-session/feedback-wrap.jpg" title="&ldquo;The front page of #Workout chapter about written feedback&rdquo;" ></a></p>

<p>I&rsquo;d like to ear about your experiences with such collaborative feedbacks.</p>
]]></content>
  </entry>
  
</feed>
