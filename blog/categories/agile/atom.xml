<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: agile | Philippe Bourgau's blog]]></title>
  <link href="http://philippe.bourgau.net/blog/categories/agile/atom.xml" rel="self"/>
  <link href="http://philippe.bourgau.net/"/>
  <updated>2016-08-18T07:15:38+00:00</updated>
  <id>http://philippe.bourgau.net/</id>
  <author>
    <name><![CDATA[Philippe Bourgau]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[How to Grow a Culture Book]]></title>
    <link href="http://philippe.bourgau.net/how-to-grow-a-culture-book/"/>
    <updated>2016-08-08T05:58:00+00:00</updated>
    <id>http://philippe.bourgau.net/how-to-grow-a-culture-book</id>
    <content type="html"><![CDATA[<p>Have you read valve&rsquo;s <a href="http://www.valvesoftware.com/company/Valve_Handbook_LowRes.pdf">Handbook for new employees</a> ?</p>

<p><a href="http://www.valvesoftware.com/company/Valve_Handbook_LowRes.pdf">{% img center /imgs/2016-08-08-how-to-grow-a-culture-book/valve-handbook-for-new-employees.jpg A stack of Valve&rsquo;s Handbook for new employees %}</a></p>

<p>In <a href="https://management30.com">Management 3.0</a> terms, that&rsquo;s a <a href="https://management30.com/practice/value-stories/">culture book</a>. It&rsquo;s a great way to build and crystallize a culture, and it serves as a guide for newcomers, and can later serve as an hiring ad for your team or company.</p>

<p>The good thing about a culture book, is that you don&rsquo;t have to write it in one go. It&rsquo;s a living artifact anyway, so you&rsquo;d better not ! Our current culture book has emerged from a collection of pages in our wiki.</p>

<h2>It started as working agreements</h2>

<p>The first real contributions to our culture book (though we did not know it at the time) was spending some time in retrospectives to define and review our working and coding conventions.</p>

<p>When we started doing retrospectives, we had to discuss, agree and formalize the decisions we made about our way of working. We usually did a &lsquo;review how we work&rsquo; activity at the beginning the retros, spending 10 minutes to make sure we all understood and agreed on our current working conventions. If there was any disagreement or update required, we would discuss them during the retro, and at the end, add, remove or modify items from our agreement page.</p>

<h2>It continued as self-organization workshops</h2>

<p>After a while, we had built up a pretty extensive set of working and coding conventions. The team had already become quite productive, but to keep the momentum in the long run, we needed to increase self-organization. By reading <a href="https://www.amazon.com/Jurgen-Appelo/e/B00460MCJM/ref=sr_tc_2_0?qid=1470715896&amp;sr=8-2-ent">Management 3.0 books</a> and <a href="https://www.amazon.com/Workout-Practices-Improve-Delight-Management-ebook/dp/B00N6REYKQ/ref=asap_bc?ie=UTF8#navbar">Management Workout</a> (which has been re-edited as <a href="https://www.amazon.com/Managing-Happiness-Games-Practices-Motivate/dp/1119268680/ref=asap_bc?ie=UTF8">Managing for Happiness</a>) in particular, I found description about how to use a <a href="https://management30.com/practice/delegation-board/">delegation board</a> and <a href="https://management30.com/product/delegation-poker/">delegation pokers</a> to measure and formalize the current delegation level of a team.</p>

<p>We did this, and started a lot of self-organization workshops :</p>

<ul>
<li><a href="/stop-feeling-like-a-kid-everytime-you-ask-a-day-off/">Stop feeling like a kid every time you ask a day off</a></li>
<li><a href="/scrum-teams-do-not-need-a-scrum-master/">Scrum Teams Do Not Need a Scrum Master</a></li>
<li><a href="/make-hiring-everyones-business/">Make hiring everyone&rsquo;s business</a></li>
<li><a href="/how-to-deal-with-the-incentive-system-in-an-agile-team/">How to deal with the incentive system in an agile team ?</a></li>
<li><a href="/how-we-decentralized-our-companys-training-program/">How We Decentralized Our Company&rsquo;s Training Program</a></li>
</ul>


<p>After each of these workshops, we created a wiki page, explaining how we planned to handle the subject in the team.</p>

<h2>The book</h2>

<p>At that point, we had fairly extensive and formal descriptions of our working practices and conventions. By reading this set of pages, someone would get a pretty accurate grasp of our principles and values.</p>

<p>Wondering how we could write our own culture book, I had an &ldquo;Aha !&rdquo; moment and realized that all I had to do was to create a wiki page pointing to all our different agreement pages. This only took 5 minutes.</p>

<p>{% img center /imgs/2016-08-08-how-to-grow-a-culture-book/content.jpg The table of content of our culture book %}</p>

<p>At the moment, our culture book serves 3 purposes :</p>

<ul>
<li>documentation for the team members</li>
<li>guide for newcomers</li>
<li>description about how we work for people in the company who might want to move to our team</li>
</ul>


<p>Next step would be to add a dash of design, a few war stories, export it as a PDF, and use it outside to advertise the team and the company.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Real Developers Ship]]></title>
    <link href="http://philippe.bourgau.net/real-developers-ship/"/>
    <updated>2016-05-11T04:33:00+00:00</updated>
    <id>http://philippe.bourgau.net/real-developers-ship</id>
    <content type="html"><![CDATA[<p>If you are a developer and you are not shipping, you&rsquo;re in the danger zone. I believe it&rsquo;s mostly your fault, and it&rsquo;s time to act.</p>

<p>{% img center /imgs/2016-05-11-real-developers-ship/deliver.jpg A delivery key on a keyboard %}</p>

<h2>Nothing new</h2>

<p>It&rsquo;s been told before. Famous blogs have said the same thing :</p>

<ul>
<li>In Hacker News <a href="https://news.ycombinator.com/item?id=290121">Real Programmers ship</a> without any explanation, as if it meant it all.</li>
<li>In Coding Horror <a href="http://blog.codinghorror.com/version-1-sucks-but-ship-it-anyway/">Version 1 Sucks, But Ship It Anyway</a> Jeff Atwood stresses the benefits of shipping early.</li>
<li>In Coding Horror again <a href="http://blog.codinghorror.com/shipping-isnt-enough/">Shipping Is Not Enough</a> Jeff Atwood goes one step further and explains that we need to create software that is going to be used.</li>
<li>In his <a href="http://removingalldoubt.com/post/2006/09/19/Fatherly-Advice-To-New-Programmers.aspx">fatherly advice to new programmers</a> Chuck Jazdzewski&rsquo;s says &ldquo;You don&rsquo;t get paid to program, you get paid to ship.&rdquo;</li>
</ul>


<h2>What does it really mean ?</h2>

<p>If you are not shipping, are you really developing something ? Maybe it&rsquo;s more some kind of research project, or maybe you are just there for learning ? <em>Real Developers know what they are in for.</em></p>

<p>If you are not shipping because the quality is too bad, that&rsquo;s because you&rsquo;ve been developing poor quality software &hellip; <em>Real developers write quality software.</em> (BTW, shipping bug fixes is not shipping)</p>

<p>If you are not shipping because you don&rsquo;t have yet enough features, that&rsquo;s because your MVP is not small enough (despite the current Skateboard metaphor, <a href="https://www.youtube.com/watch?v=rgETWBKCRSQ">this</a> is not an MVP). <em>So Real developers follow lean (startup) principles.</em></p>

<p>If you are not shipping because it&rsquo;s much work, that&rsquo;s because you did not automate delivery. <em>Real developers use continuous delivery.</em></p>

<p>If you are not shipping because someone else said so, maybe it&rsquo;s time to convince her. <em>Real developers know how to deal with people.</em></p>

<p>If you are not shipping because you are in a shitty environment &hellip; <em>Real developers work on their skills to be able to quit when needed.</em></p>

<h2>Shipping above all else</h2>

<p>My point is that every developer or organization containing developers should put shipping value as their absolute priority, and things should get a lot simpler.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Pair Programming, From Pain Zone To Skill Zone]]></title>
    <link href="http://philippe.bourgau.net/pair-programming-from-pain-zone-to-skill-zone/"/>
    <updated>2016-05-06T04:04:00+00:00</updated>
    <id>http://philippe.bourgau.net/pair-programming-from-pain-zone-to-skill-zone</id>
    <content type="html"><![CDATA[<p>We&rsquo;re doing pair programming almost all the the time in our team. A few weeks ago, we went to <a href="http://www.devoxx.fr/">Devoxx</a> Paris, and 2 team mates used pair programming at a hands on session : they finished way before the others and had the time to take a 30 minute break. Pair programming delivers more &hellip; when it works.</p>

<h2>Flavors of Pair Programming</h2>

<p>Throughout our experience, we have identified some situations where it does or does not work :</p>

<table>
<thead>
<tr>
<th>Pain Zone         </th>
<th> Skill Zone</th>
</tr>
</thead>
<tbody>
<tr>
<td>Wandering buddies </td>
<td> Mates</td>
</tr>
<tr>
<td>Expert / Novice   </td>
<td> Mentor &amp; Apprentice</td>
</tr>
</tbody>
</table>


<br>


<h2>The Pain Zone</h2>

<p>Pair programming can be painful. It can feel like a waste of time or extremely frustrating. Here are the typical situations and how to fix them.</p>

<h3>The Wandering Buddies</h3>

<p>{% img center /imgs/2016-05-06-pair-programming-from-pain-zone-to-skill-zone/going_nowhere.jpg A &lsquo;going nowhere&rsquo; sign %}</p>

<p>That&rsquo;s what you&rsquo;d get if you asked to newcomers straight out of school to pair program on existing source code on day 1. They&rsquo;d be dabbling here and there, without going anywhere. Each one would try to get the keyboard to try his way, but in the end, no general direction would be followed.</p>

<p>The cure in this case (as often) is to stop and think. At least one in the pair needs to lean how to pair program. It&rsquo;s not difficult, that&rsquo;s just :</p>

<ul>
<li>Discuss and agree on a general plan first</li>
<li>Keep a todo list</li>
<li>Track your advancement on your todo list while you don&rsquo;t have the keyboard</li>
<li>Stop and discuss from time to time</li>
</ul>


<p>By starting that, the pair will quickly move into the &lsquo;mates&rsquo; state.</p>

<h3>The Export / The Novice</h3>

<p>{% img center /imgs/2016-05-06-pair-programming-from-pain-zone-to-skill-zone/race.jpg A race where Usain Bolt leave everyone meters behind %}</p>

<p>That&rsquo;s when a &lsquo;lone wolf kind of&rsquo; expert pairs with a junior. The expert picks the keyboard, dashes through the tasks, doesn&rsquo;t make sure his pair follows (which usually means it does not).</p>

<p>Regular pair programming means a change in job responsibilities for such expert programmers. If they were expert doers before, they should now become expert mentors or coaches. That&rsquo;s quite a difference. To them, it means that their goal must be to make his pair finish the task &hellip; It can be very frustrating at first. Nevertheless, the overall skill level in teams doing that increases so fast that&rsquo;s it&rsquo;s very fulfilling for the team as a whole.</p>

<h2>The Skill Zone</h2>

<p>The is where we want to be. When it happens, pair programming feels productive, interesting and fulfilling. Contrary to what is often thought, this can happen whatever the skill levels of the 2 programmers.</p>

<h3>The Mates</h3>

<p>{% img center /imgs/2016-05-06-pair-programming-from-pain-zone-to-skill-zone/to-do-list.jpg A Todo list %}</p>

<p>The programmers have equivalent skills on the subject at hand. They organized in a way that they are both learning from each other. By having to verbalize what and why they are doing things, by challenging each others assumptions and by sometimes doing differently than what they&rsquo;d alone.</p>

<h3>The Mentor &amp; The Apprentice</h3>

<p>{% img center /imgs/2016-05-06-pair-programming-from-pain-zone-to-skill-zone/help.jpg People helping each other to climb a mountain %}</p>

<p>Other times, there can be a real difference in skills for what the pair is attempting to do. In this situation, the goal of the most knowledgeable is to train his pair, who&rsquo;s goal is to learn. The task becomes some kind of exercise on which to practice.</p>

<p>During a typical pairing session, a pair might switch many times between mentor and mates states. Each one in the pair might assume the mentor&rsquo;s role for different aspect of the work. At the end of the day, everyone should feel as if they had learned and accomplished good work.</p>

<h2>Last Word of Caution</h2>

<p>Pair programming is exhausting. Don&rsquo;t expect to be able to do 40 hours of pair programming per week. After 6 hours in a day, one usually starts to get a lot less efficient.</p>

<p>Both juniors and experienced programmers also need some time by their own, to experiment things by themselves or to complete a simple task without having worry about explaining everything.</p>

<p>These are the reasons why <a href="http://www.extremeprogramming.org/">XP</a> stresses having a sustainable pace and leaving space for <a href="http://www.jamesshore.com/Agile-Book/slack.html">Slack time</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[5 Books About Data Driven Lean Software Development]]></title>
    <link href="http://philippe.bourgau.net/5-books-about-data-driven-lean-software-development/"/>
    <updated>2016-04-29T05:25:00+00:00</updated>
    <id>http://philippe.bourgau.net/5-books-about-data-driven-lean-software-development</id>
    <content type="html"><![CDATA[<p>In french, we say &ldquo;Le cordonnier est toujours le plus mal chaussé&rdquo; which I found an English equivalent in &ldquo;the shoemaker’s son always goes barefoot&rdquo;. I believe this is nowhere more true than in the software industry !</p>

<p>&ldquo;Software is eating the world&rdquo; they say. Software is now able to do things that only humans used to be. So why the hell are we driving our projects as if we were a horde of amateur hitch hikers ?</p>

<h2>What does it mean to be data driven ?</h2>

<p>Being data driven would allow us to answer questions such as :</p>

<ul>
<li>How much is the feature we delivered last week contributing to the bottom line ?</li>
<li>How much is the feature we are currently developing expected to contribute to the bottom line ?</li>
<li>What are the estimated cost <em>and value</em> of increasing our test coverage of 1% ?</li>
<li>What are the estimated interests and nominal amounts of our current technical debt ?</li>
<li>Which is the most valuable : improving our build system or building this new feature ?</li>
</ul>


<p>Most projects I&rsquo;ve worked in have absolutely no clue about the answers to these questions. The decision is left to experts, to the one with most influence, or simply to the developer, who can do how he thinks is best &hellip;</p>

<h2>The books</h2>

<p>Hopefully, some people are thinking differently, they believe it is possible to quantify all this, they even explain how !</p>

<h3><a href="http://www.amazon.com/Running-Lean-Iterate-Works-OReilly/dp/1449305172/ref=sr_1_1?ie=UTF8&amp;qid=1461906957&amp;sr=8-1&amp;keywords=running+lean">Running Lean: Iterate from Plan A to a Plan That Works</a> by <a href="https://ashmaurya.com/">Ash Maurya</a></h3>

<p><a href="http://www.amazon.com/Running-Lean-Iterate-Works-OReilly/dp/1449305172/ref=sr_1_1?ie=UTF8&amp;qid=1461906957&amp;sr=8-1&amp;keywords=running+lean">{% img center /imgs/2016-04-29-5-books-about-data-driven-lean-software-development/running_lean.jpg The cover of the Running Lean book %}</a></p>

<p>Details a very practical guide about the lean startup process, which is a very good starting point to any kind of lean software development.</p>

<h3><a href="http://www.amazon.com/Kanban-Successful-Evolutionary-Technology-Business/dp/0984521402/ref=sr_1_1?ie=UTF8&amp;qid=1461906998&amp;sr=8-1&amp;keywords=kanban+anderson">Kanban: Successful Evolutionary Change for Your Technology Business</a> by <a href="http://www.djaa.com/">David J. Anderson</a></h3>

<p><a href="http://www.amazon.com/Kanban-Successful-Evolutionary-Technology-Business/dp/0984521402/ref=sr_1_1?ie=UTF8&amp;qid=1461906998&amp;sr=8-1&amp;keywords=kanban+anderson">{% img center /imgs/2016-04-29-5-books-about-data-driven-lean-software-development/kanban.jpg The cover of the Kanban book %}</a></p>

<p>This book explains with real world examples how to use Kanban board to control your work queues and improve your flow of work, a real basic for any lean product development.</p>

<h3><a href="http://www.amazon.com/Principles-Product-Development-Flow-Generation/dp/1935401009/ref=sr_1_1?ie=UTF8&amp;qid=1461907905&amp;sr=8-1&amp;keywords=principles+of+product+development+flow">The Principles of Product Development Flow: Second Generation Lean Product Development</a> by <a href="http://reinertsenassociates.com/">Donald G. Reinertsen</a></h3>

<p><a href="http://www.amazon.com/Principles-Product-Development-Flow-Generation/dp/1935401009/ref=sr_1_1?ie=UTF8&amp;qid=1461907905&amp;sr=8-1&amp;keywords=principles+of+product+development+flow">{% img center /imgs/2016-04-29-5-books-about-data-driven-lean-software-development/flow.jpg The cover of the Flow book %}</a></p>

<p>This book is rather theoretical, but it links all subjects together : lean startup, risk management, Kanban, and economics. I guess it&rsquo;s a must read on the subject.</p>

<h3><a href="http://www.amazon.com/How-Measure-Anything-Intangibles-Business/dp/1118539273/ref=sr_1_1?ie=UTF8&amp;qid=1461908177&amp;sr=8-1&amp;keywords=how+to+measure+anything">How to Measure Anything: Finding the Value of Intangibles in Business</a> by <a href="http://www.hubbardresearch.com/">Douglas W. Hubbard</a></h3>

<p><a href="http://www.amazon.com/How-Measure-Anything-Intangibles-Business/dp/1118539273/ref=sr_1_1?ie=UTF8&amp;qid=1461908177&amp;sr=8-1&amp;keywords=how+to+measure+anything">{% img center /imgs/2016-04-29-5-books-about-data-driven-lean-software-development/how_to_measure_anything.jpg The cover of How to measure anything %}</a></p>

<p>If the flow book gives a big picture view of what you want, this one explains how you can actually measure all the aspects of your product development in $ value.</p>

<h3><a href="http://www.amazon.com/Waltzing-Bears-Managing-Software-Projects/dp/0932633609/ref=sr_1_sc_1?ie=UTF8&amp;qid=1461908398&amp;sr=8-1-spell&amp;keywords=walzting+with+bears">Waltzing With Bears: Managing Risk on Software Projects</a> by <a href="http://www.systemsguild.com/">Tom DeMarco and Timothy Lister</a></h3>

<p><a href="http://www.amazon.com/Waltzing-Bears-Managing-Software-Projects/dp/0932633609/ref=sr_1_sc_1?ie=UTF8&amp;qid=1461908398&amp;sr=8-1-spell&amp;keywords=walzting+with+bears">{% img center /imgs/2016-04-29-5-books-about-data-driven-lean-software-development/waltzing_with_bears.jpg The cover of Waltzing with bears %}</a></p>

<p>Although this book is getting old, and is a bit outdated when compared to agile development practices, it provides real world examples of how scientific measurement can be applied to software product development.</p>

<h2>An opportunity</h2>

<p>Reading these books was a real eye opener for me. The software development world is plagued with cargo cult and supposed best practices. We follow advises, but most often without verifying if they actually work ! I believe that by applying the techniques in these books, we could create standard ways to measure the values of productivity, technical debt, quality, testing &hellip;</p>

<p>I see real opportunities to avoid a lot of useless argument between proponents of A and B, but also to communicate better with all stakeholders and finally, to reduce stress for all of us.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How We Decentralized Our Company's Training Program]]></title>
    <link href="http://philippe.bourgau.net/how-we-decentralized-our-companys-training-program/"/>
    <updated>2016-04-18T05:31:00+00:00</updated>
    <id>http://philippe.bourgau.net/how-we-decentralized-our-companys-training-program</id>
    <content type="html"><![CDATA[<p>Maybe your company too has a development program you can use to track and organize your training path. That&rsquo;s already great ! It is often not perfect though. Sometimes, the initiative in itself can feel like an afterthought. Some other times, the process is completely left to the employee and his manager, with varying results, from great to forced upon everyone.</p>

<p>{% img center /imgs/2016-04-18-how-we-decentralized-our-companys-training-program/learning.jpg A &lsquo;learning&rsquo; word cloud %}</p>

<h2>How did we rebuild this program in our team</h2>

<p>As you might remember if you read my <a href="/blog/categories/selforganizing/">previous posts</a>, we started a self organization initiative using a <a href="https://management30.com/product/workouts/delegation-employee-engagement/">delegation board</a>. When we tried to decentralize <a href="/how-to-deal-with-the-incentive-system-in-an-agile-team/">the end of year evaluation</a>, we started discussing the subjects of personal development. We decided to have a dedicated workshop about this subject</p>

<h2>Guiding principles</h2>

<p>In our company, the development program allows a manager to assign specific learning goals to his collaborators, and anyone can also create his own goals to justify going to specific trainings. Starting from that, we agreed that the development program should be used to help anyone in the team to improve skills that are interesting for both the company and the employee. If the employee is interested in something completely unrelated to work, then he should obviously tackle that in his own time. If the company needs its employee to acquire some immediate mandatory skills, then that should be part of the daily job and subject to the end of year evaluation.</p>

<p>The idea is to try to find a win-win combinations, were employees are motivated to work their best at a company that they know helps them to full-fill their long term goals.</p>

<h2>What did we came us with ?</h2>

<p>{% img center /imgs/2016-04-18-how-we-decentralized-our-companys-training-program/mentor-mentee.jpg A lion and a lion cub side by side %}</p>

<p>This workshop was quite effective :</p>

<ul>
<li>First of all, everyone is responsible for his own development, it&rsquo;s a chance offered by the company. It cannot be forced unto people.</li>
<li>It is based on volunteer mentorship : everyone should have regular meetings with his mentor to asses his progress on his long term goal, to try to get feedback and ideas about how to move forward. We started by saying that the team leader is the default mentor, but anyone can find another mentor at any moment.</li>
<li>The process starts with the search for a long term goal. Examples are &ldquo;I want to be an agile coach&rdquo;, or &ldquo;I want to be a performance expert&rdquo;</li>
<li>With the help of the mentor if needed, the long term goal should be split in yearly objectives and tracked using <a href="http://fr.slideshare.net/HenrikJanVanderPol/how-to-outperform-anyone-else-introduction-to-okr">OKRs</a></li>
<li>Everyone is free to track his progress has he wishes. Visual tracking makes the discussion with the mentor a lot easier. We have been looking at tools to track OKRs but it was surprisingly difficult to find one that suited our use. Most are enterprisy tools with manager-managee relationships. We just wanted simple personal tracking tools. For my part, I adapted a <a href="https://trello.com/b/MPM4rspd/okrs">Trello</a> board I found on the internet.</li>
</ul>


<h2>Conclusion</h2>

<p>After doing a few months of this, I can say that this has a positive aspect on motivation, people told me that they felt more in control of their destiny. Something else I noted, is that junior developers need help and guidance. They often don&rsquo;t really know what they want to do in a few years, so they really need a mentor to help them find out the what and the how. The other side of this is that a team obviously needs senior developers to act as mentor &hellip; among other things.</p>
]]></content>
  </entry>
  
</feed>
