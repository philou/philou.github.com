<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: agile | Philippe Bourgau's blog]]></title>
  <link href="http://philippe.bourgau.net/blog/categories/agile/atom.xml" rel="self"/>
  <link href="http://philippe.bourgau.net/"/>
  <updated>2015-03-21T08:16:04+00:00</updated>
  <id>http://philippe.bourgau.net/</id>
  <author>
    <name><![CDATA[Philippe Bourgau]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Measure The Business Value of Your Spikes and Take High Payoff Risks (Lean Software Development Part 4)]]></title>
    <link href="http://philippe.bourgau.net/measure-the-business-value-of-your-spikes-and-take-high-payoff-risks-lean-software-development-part-4/"/>
    <updated>2015-01-31T15:13:00+00:00</updated>
    <id>http://philippe.bourgau.net/measure-the-business-value-of-your-spikes-and-take-high-payoff-risks-lean-software-development-part-4</id>
    <content type="html"><![CDATA[<p>Lately <a href="http://www.murex.com">at work</a>, we&rsquo;ve unexpectedly been asked by other teams if they could use our product for something that we had not forseen. As we are not sure whether we&rsquo;ll be able to tune our product to their needs, we are thinking about doing a short study to know the answer. This looks like a great opportunity to try out <a href="http://en.wikipedia.org/wiki/Cost_of_delay">Cost of Delay</a> analysis about uncertain tasks.</p>

<p>Unfortunately, I cannot write the details of what we are creating at work in this blog, so let&rsquo;s assume that we are building a Todo List Software.</p>

<p>We have been targeting the enterprise market. Lately, we&rsquo;ve seen some interest from individuals planning to use our todo list system for themselves at home.</p>

<p>For individuals, the system would need to be highly available and live 24/7 over the internet, latency will also be critical to retain customers, but the product could get a market share with a basic feature set.</p>

<p>On the other side, enterprise customers need advanced features, absolute data safety, but they can cope with nightly restarts of the server.</p>

<p>In order to know if we can make our todo list system available and fast enough for the individuals market, we are planning to conduct a pre-study, so as not to waste time on an unreachable goal. In <a href="http://www.extremeprogramming.org/">XP</a> terms, this is a <a href="http://www.extremeprogramming.org/rules/spike.html">spike</a>, and it&rsquo;s a bunch of experiments rather than a theoretical study.</p>

<p><a href="/imgs/2015-01-31-measure-the-business-value-of-your-spikes-and-take-high-payoff-risks-lean-software-development-part-4/study.jpg">{% img center /imgs/2015-01-31-measure-the-business-value-of-your-spikes-and-take-high-payoff-risks-lean-software-development-part-4/study-petit.jpg Photo of someone studying behind piles of books%}</a></p>

<h2>When should we prioritize this spike ?</h2>

<p>If we are using the <a href="http://www.scaledagileframework.com/wsjf/">Weighted Shortest Job First</a> metric to prioritize our work, we need to estimate the cost of delay of a task to determine its priority. Hereafter I will explain how we could determine the value of this spike.</p>

<h2>Computing the cost of delay</h2>

<p>The strategy to compute the cost of delay for such a risk mitigation task is to compute the difference in cost of delays with or without doing it.</p>

<h3>1. The products, the features, the MVP and the estimates</h3>

<p>As I explained in <a href="/how-to-measure-your-speed-with-your-business-value-lean-software-development-part-3/">a previous post</a>, for usual features, cost of delay is equivalent to it&rsquo;s value. Along with our gross estimates, here are the relative values that our product owner gave us for the different products we are envisioning.</p>

<table>
<thead>
<tr>
<th>Feature                   </th>
<th> $ Enterprise </th>
<th> $ Individuals </th>
<th> Estimated work</th>
</tr>
</thead>
<tbody>
<tr>
<td>Robustness            </td>
<td> 20*          </td>
<td> 20*           </td>
<td> 2</td>
</tr>
<tr>
<td>Availability              </td>
<td> 0            </td>
<td> 40*           </td>
<td> 2</td>
</tr>
<tr>
<td>Latency                   </td>
<td> 0            </td>
<td> 40*           </td>
<td> 1</td>
</tr>
<tr>
<td>Durability            </td>
<td> 40*          </td>
<td> 13            </td>
<td> 2</td>
</tr>
<tr>
<td>Multi user lists          </td>
<td> 20*          </td>
<td> 8             </td>
<td> 2</td>
</tr>
<tr>
<td>Labels                    </td>
<td> 20           </td>
<td> 13            </td>
<td> 2</td>
</tr>
<tr>
<td>Custom report tool        </td>
<td> 13           </td>
<td> 0             </td>
<td> 3</td>
</tr>
<tr>
<td>TOTAL Cost Of Delay of v1 </td>
<td> 80           </td>
<td> 100           </td>
<td></td>
</tr>
</tbody>
</table>


<p><small>Stared (*) features are required for the first version of the product. Features with a value of 0 are not required for the product. Eventually, unstared features with a non null business value would be great for a second release.</small><br></p>

<p>It seems that the individuals market is a greater opportunity, so it&rsquo;s worth thinking about it. Unfortunately for the moment, we really don&rsquo;t know if we&rsquo;ll manage to get the high availability that is required for such a product.</p>

<p>The availability spike we are envisioning would take 1 unit of time.</p>

<h3>2. Computing the cost of delay of this spike</h3>

<p>The cost of delay of a task involving some uncertainty is the probabilistic expected value of its cost of delay. We estimate that we have 50% of chances of matching the availability required by individuals. It means that CoD of the spike = 50% * CoD if we match the latency + 50% CoD if we don&rsquo;t match the availability.</p>

<h4>2.a. The Cost of Delay if we get the availability</h4>

<p>Let&rsquo;s consider the future in which we&rsquo;ll manage to reduce the latency.
The cost of delay of a spike task is the difference in Cost with and without doing the spike, per relevent months.</p>

<h5>2.a.i. The cost if we don&rsquo;t do the spike</h5>

<p>Unfortunately, at this point in this future, we don&rsquo;t yet know that we&rsquo;ll manage to get to the availability.</p>

<table>
<thead>
<tr>
<th>Feature                   </th>
<th> $ Enterprise </th>
<th> $ Individuals </th>
<th> $ Expected   </th>
<th> Estimated work </th>
<th> WSJF</th>
</tr>
</thead>
<tbody>
<tr>
<td>Latency                   </td>
<td> 0            </td>
<td> 40*           </td>
<td> 20           </td>
<td> 1              </td>
<td> 20</td>
</tr>
<tr>
<td>Durability            </td>
<td> 40*          </td>
<td> 13            </td>
<td> 26           </td>
<td> 2              </td>
<td> 13</td>
</tr>
<tr>
<td>Robustness            </td>
<td> 20*          </td>
<td> 20*           </td>
<td> 20           </td>
<td> 2              </td>
<td> 10</td>
</tr>
<tr>
<td>Availability              </td>
<td> 0            </td>
<td> 40*           </td>
<td> 20           </td>
<td> 2              </td>
<td> 10</td>
</tr>
<tr>
<td>Labels                    </td>
<td> 20           </td>
<td> 13            </td>
<td> 17           </td>
<td> 2              </td>
<td> 9</td>
</tr>
<tr>
<td>Multi user lists          </td>
<td> 20*          </td>
<td> 8             </td>
<td> 14           </td>
<td> 2              </td>
<td> 7</td>
</tr>
<tr>
<td>Custom report tool        </td>
<td> 13           </td>
<td> 0             </td>
<td> 8            </td>
<td> 3              </td>
<td> 3</td>
</tr>
</tbody>
</table>


<br>


<p>We&rsquo;ll resort to WSJF to prioritize our work. Here is what we&rsquo;ll be able to ship :</p>

<table>
<thead>
<tr>
<th>Product </th>
<th> Delay </th>
<th> CoD </th>
<th> Cost</th>
</tr>
</thead>
<tbody>
<tr>
<td>Individuals                     </td>
<td> 7    </td>
<td> 100   </td>
<td>  700</td>
</tr>
<tr>
<td>Individuals Durability          </td>
<td> 7    </td>
<td> 13    </td>
<td>   91</td>
</tr>
<tr>
<td>Individuals Labels              </td>
<td> 9    </td>
<td> 13    </td>
<td>  117</td>
</tr>
<tr>
<td>Enterprise                      </td>
<td> 11   </td>
<td> 80    </td>
<td>  880</td>
</tr>
<tr>
<td>Enterprise labels               </td>
<td> 11   </td>
<td> 20    </td>
<td>  220</td>
</tr>
<tr>
<td>Individuals Multi user lists    </td>
<td> 13   </td>
<td> 8     </td>
<td>  104</td>
</tr>
<tr>
<td>Enterprise Custom reports       </td>
<td> 16   </td>
<td> 13    </td>
<td>  208</td>
</tr>
<tr>
<td>                                </td>
<td>      </td>
<td>       </td>
<td> 2320</td>
</tr>
</tbody>
</table>


<br>


<h5>2.a.ii. The cost if we do the spike</h5>

<p>In this case, we would start by the spike, and it would tell us that we can reach the individuals availability and so that we should go for this feature first. Here will be our planning</p>

<table>
<thead>
<tr>
<th>Feature                   </th>
<th> $ Enterprise </th>
<th> $ Individuals </th>
<th> Estimated work </th>
<th> Enterprise WSJF </th>
<th> Individuals WSJF</th>
</tr>
</thead>
<tbody>
<tr>
<td>Feasibility spike         </td>
<td>              </td>
<td>               </td>
<td> 1              </td>
<td>                 </td>
<td></td>
</tr>
<tr>
<td>Latency                   </td>
<td> 0            </td>
<td> 40*           </td>
<td> 1              </td>
<td>                 </td>
<td> 40</td>
</tr>
<tr>
<td>Availability              </td>
<td> 0            </td>
<td> 40*           </td>
<td> 2              </td>
<td>                 </td>
<td> 20</td>
</tr>
<tr>
<td>Robustness            </td>
<td> 20*          </td>
<td> 20*           </td>
<td> 2              </td>
<td> 10              </td>
<td> 10</td>
</tr>
<tr>
<td>Durability            </td>
<td> 40*          </td>
<td> 13            </td>
<td> 2              </td>
<td> 20              </td>
<td> 7</td>
</tr>
<tr>
<td>Multi user lists          </td>
<td> 20*          </td>
<td> 8             </td>
<td> 2              </td>
<td> 10              </td>
<td> 4</td>
</tr>
<tr>
<td>Labels                    </td>
<td> 20           </td>
<td> 13            </td>
<td> 2              </td>
<td> 10              </td>
<td> 7</td>
</tr>
<tr>
<td>Custom report tool        </td>
<td> 13           </td>
<td> 0             </td>
<td> 3              </td>
<td> 4               </td>
<td></td>
</tr>
</tbody>
</table>


<br>


<p>Here is how we will be able to ship :</p>

<table>
<thead>
<tr>
<th>Product </th>
<th> Delay </th>
<th> CoD </th>
<th> Cost</th>
</tr>
</thead>
<tbody>
<tr>
<td>Individuals                     </td>
<td> 6    </td>
<td> 100   </td>
<td>  600</td>
</tr>
<tr>
<td>Individuals Durability          </td>
<td> 8    </td>
<td> 13    </td>
<td>  104</td>
</tr>
<tr>
<td>Individuals Multi user lists    </td>
<td> 10   </td>
<td> 8     </td>
<td>   80</td>
</tr>
<tr>
<td>Enterprise                      </td>
<td> 10   </td>
<td> 80    </td>
<td>  800</td>
</tr>
<tr>
<td>Individuals Labels              </td>
<td> 12   </td>
<td> 13    </td>
<td>  156</td>
</tr>
<tr>
<td>Enterprise Labels               </td>
<td> 12   </td>
<td> 20    </td>
<td>  240</td>
</tr>
<tr>
<td>Enterprise Custom reports       </td>
<td> 15   </td>
<td> 13    </td>
<td>  195</td>
</tr>
<tr>
<td>                                </td>
<td>      </td>
<td>       </td>
<td> 2175</td>
</tr>
</tbody>
</table>


<br>


<h5>2.a.iii. Cost of delay of the spike if we reach the availability</h5>

<p>By making the spike, we would save 2320 &ndash; 2175 = 145$</p>

<p>Without doing the spike, we would discover whether we would reach the availability when we try it, around time 7 (see 2.a.i).</p>

<p>So the cost of delay for the spike would be around 145/7 = 21 $/m</p>

<h4>2.b. The Cost of Delay if we don&rsquo;t get the availability</h4>

<p>Let&rsquo;s now consider the future in which we don&rsquo;t manage to increase the availability.</p>

<p>Using the same logic as before, let&rsquo;s now see what happens</p>

<h5>2.b.i. The cost if we don&rsquo;t do the spike</h5>

<p>Unfortunately, at this point in this future, we don&rsquo;t yet know that we&rsquo;ll not manage to get to the availability.</p>

<table>
<thead>
<tr>
<th>Feature                   </th>
<th> $ Enterprise </th>
<th> $ Individuals </th>
<th> $ Expected   </th>
<th> Estimated work </th>
<th> WSJF</th>
</tr>
</thead>
<tbody>
<tr>
<td>Latency                   </td>
<td> 0            </td>
<td> 40*           </td>
<td> 20           </td>
<td> 1              </td>
<td> 20</td>
</tr>
<tr>
<td>Durability            </td>
<td> 40*          </td>
<td> 13            </td>
<td> 26           </td>
<td> 2              </td>
<td> 13</td>
</tr>
<tr>
<td>Robustness            </td>
<td> 20*          </td>
<td> 20*           </td>
<td> 20           </td>
<td> 2              </td>
<td> 10</td>
</tr>
<tr>
<td>Availability              </td>
<td> 0            </td>
<td> 40*           </td>
<td> 20           </td>
<td> 2              </td>
<td> 10</td>
</tr>
<tr>
<td>Multi user lists          </td>
<td> 20*          </td>
<td> 8             </td>
<td> 14           </td>
<td> 2              </td>
<td> 7</td>
</tr>
<tr>
<td>Labels                    </td>
<td> 20           </td>
<td> 13            </td>
<td> 17           </td>
<td> 2              </td>
<td> 9</td>
</tr>
<tr>
<td>Custom report tool        </td>
<td> 13           </td>
<td> 0             </td>
<td> 8            </td>
<td> 3              </td>
<td> 3</td>
</tr>
</tbody>
</table>


<br>


<p>When we&rsquo;ll fail at the availability, we&rsquo;ll switch multi user lists and labels to be able to ship to enterprises as quickly as possible.
Here is what we&rsquo;ll ship.</p>

<table>
<thead>
<tr>
<th>Product </th>
<th> Delay </th>
<th> CoD </th>
<th> Cost</th>
</tr>
</thead>
<tbody>
<tr>
<td>Enterprise                      </td>
<td>  9   </td>
<td> 80    </td>
<td>  720</td>
</tr>
<tr>
<td>Enterprise Labels               </td>
<td> 11   </td>
<td> 20    </td>
<td>  220</td>
</tr>
<tr>
<td>Enterprise Custom reports       </td>
<td> 14   </td>
<td> 13    </td>
<td>  182</td>
</tr>
<tr>
<td>                                </td>
<td>      </td>
<td>       </td>
<td> 1122</td>
</tr>
</tbody>
</table>


<br>


<h5>2.b.ii. The cost if we do the spike</h5>

<p>In this case, we would start by the spike, and it would tell us that we won&rsquo;t match the availability required for individuals and so that that there&rsquo;s no need to run after this now.</p>

<table>
<thead>
<tr>
<th>Feature            </th>
<th> $ Enterprise </th>
<th> Estimated work </th>
<th> WSJF</th>
</tr>
</thead>
<tbody>
<tr>
<td>Feasibility spike  </td>
<td>              </td>
<td> 1              </td>
<td></td>
</tr>
<tr>
<td>Durability     </td>
<td> 40*      </td>
<td> 2              </td>
<td> 13</td>
</tr>
<tr>
<td>Robustness     </td>
<td> 20*      </td>
<td> 2              </td>
<td> 10</td>
</tr>
<tr>
<td>Multi user lists   </td>
<td> 20*          </td>
<td> 2              </td>
<td> 7</td>
</tr>
<tr>
<td>Labels             </td>
<td> 20           </td>
<td> 2              </td>
<td> 9</td>
</tr>
<tr>
<td>Custom report tool </td>
<td> 13           </td>
<td> 3              </td>
<td> 3</td>
</tr>
</tbody>
</table>


<br>


<p>Here is how we will be able to ship :</p>

<table>
<thead>
<tr>
<th>Product </th>
<th> Delay </th>
<th> CoD </th>
<th> Cost</th>
</tr>
</thead>
<tbody>
<tr>
<td>Enterprise                      </td>
<td>  7   </td>
<td> 80    </td>
<td>  560</td>
</tr>
<tr>
<td>Enterprise Labels               </td>
<td>  9   </td>
<td> 20    </td>
<td>  180</td>
</tr>
<tr>
<td>Enterprise Custom reports       </td>
<td> 12   </td>
<td> 13    </td>
<td>  156</td>
</tr>
<tr>
<td>                                </td>
<td>      </td>
<td>       </td>
<td>  896</td>
</tr>
</tbody>
</table>


<br>


<h5>2.b.iii. Cost of delay of the spike if we reach the availability</h5>

<p>By making the spike, we would save 1122 &ndash; 896 = 226$</p>

<p>As before, without doing the spike, we would discover whether we would get the availability when we try it, around time 7.</p>

<p>So the cost of delay for the spike is around 226/7 = 32 $/m</p>

<h4>2.c. Compute overall Cost of Delay of the Spike</h4>

<p><a href="/imgs/2015-01-31-measure-the-business-value-of-your-spikes-and-take-high-payoff-risks-lean-software-development-part-4/CoD.jpg">{% img center /imgs/2015-01-31-measure-the-business-value-of-your-spikes-and-take-high-payoff-risks-lean-software-development-part-4/CoD-petit.jpg Bank notes going through an hourglass%}</a></p>

<p>Given that we estimate that there is a 50% chances of making the latency, the overall expected cost of delay is</p>

<p>50% * 21 + 50% * 32 = 26.5 $/m</p>

<p>Inject the spike in the backlog</p>

<p>With the Cost of Delay of the spike, we can compute it&rsquo;s WSJF and prioritize it against other features.</p>

<table>
<thead>
<tr>
<th>Feature </th>
<th> $ Enterprise </th>
<th> $ Individuals </th>
<th> Expected $ </th>
<th> Estimated work </th>
<th> WSJF</th>
</tr>
</thead>
<tbody>
<tr>
<td>Feasibility Spike         </td>
<td>              </td>
<td>               </td>
<td> 26.5         </td>
<td> 1              </td>
<td> 26.5</td>
</tr>
<tr>
<td>Latency                   </td>
<td> 0            </td>
<td> 40*           </td>
<td> 20           </td>
<td> 1              </td>
<td> 20</td>
</tr>
<tr>
<td>Durability            </td>
<td> 40*          </td>
<td> 13            </td>
<td> 26           </td>
<td> 2              </td>
<td> 13</td>
</tr>
<tr>
<td>Robustness            </td>
<td> 20*          </td>
<td> 20*           </td>
<td> 20           </td>
<td> 2              </td>
<td> 10</td>
</tr>
<tr>
<td>Availability              </td>
<td> 0            </td>
<td> 40*           </td>
<td> 20           </td>
<td> 2              </td>
<td> 10</td>
</tr>
<tr>
<td>Multi user lists          </td>
<td> 20*          </td>
<td> 8             </td>
<td> 14           </td>
<td> 2              </td>
<td> 7</td>
</tr>
<tr>
<td>Labels                    </td>
<td> 20           </td>
<td> 13            </td>
<td> 17           </td>
<td> 2              </td>
<td> 9</td>
</tr>
<tr>
<td>Custom report tool        </td>
<td> 13           </td>
<td> 0             </td>
<td> 8            </td>
<td> 3              </td>
<td> 3</td>
</tr>
</tbody>
</table>


<br>


<p>The spike comes at the top of our backlog. Which confirms our gut feeling.</p>

<h2>Conclusion</h2>

<p>Doing this long study confirmed classic rule of thumbs</p>

<ul>
<li>Don&rsquo;t develop many products at the same time</li>
<li>Do some Proof Of Concepts early before starting to work on uncertain features</li>
<li>Tackle the most risky features first</li>
</ul>


<p>By improving the inputs, we could get more quality results :</p>

<ul>
<li>If we had access to real sales or finance figures for the costs</li>
<li>If we did some sort of poker risk estimation instead of just guessing at 50% chances</li>
</ul>


<p>Obviously, the analysis itself is not perfect, but it hints to the good choices. And as <a href="http://reinertsenassociates.com/">Don Reinertsen</a> puts it, using an economical framework, the spread between people estimations goes down from <a href="http://leanmagazine.net/lean/cost-of-delay-don-reinertsen/">50:1</a> to 2:1 ! This seems a good alternative to the experience and gut feeling approach which :</p>

<ul>
<li>can trigger heated unfounded discussions</li>
<li>often means high dependence on the intuition of a single individual</li>
</ul>


<p>As everything is quantitative though, one could imagine that with other figures, we could have got to another conclusion, such as :</p>

<ul>
<li>The spike is not worth doing (it costs more than it might save)</li>
<li>The spike can wait a bit</li>
</ul>


<p><a href="http://dilbert.com/strip/2014-03-30">{% img center /imgs/2015-01-31-measure-the-business-value-of-your-spikes-and-take-high-payoff-risks-lean-software-development-part-4/dt140330.jpg A dilbert strip about gut feeling at work%}</a></p>

<p>This was part 4 of my <a href="/the-flow-book-summary-lean-software-development_part_1/">Lean Software Development Series</a>. Part 3 was <a href="/how-to-measure-your-speed-with-your-business-value-lean-software-development-part-3/">How to measure your speed with your business value</a>, Part 5 will be &ldquo;Measure the value of the lean startup &lsquo;learning&rsquo;&rdquo;.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[From Zero to Pair Programming Hero]]></title>
    <link href="http://philippe.bourgau.net/from-zero-to-pair-programming-hero/"/>
    <updated>2015-01-27T06:31:00+00:00</updated>
    <id>http://philippe.bourgau.net/from-zero-to-pair-programming-hero</id>
    <content type="html"><![CDATA[<p>In my team at <a href="http://www.murex.com">Murex</a>, we&rsquo;ve been doing Pair programming 75% of our time for the past 9 months now.</p>

<p><a href="/imgs/2015-01-27-from-zero-to-pair-programming-hero/real-teamwork.JPG">{% img center /imgs/2015-01-27-from-zero-to-pair-programming-hero/real-teamwork.resized.JPG Photo of all the team doing pair programming%}</a></p>

<p>Before I explain how we got there, let&rsquo;s summarize our observations :</p>

<ul>
<li>No immediate productivity drop</li>
<li>Pair programming is really tiring</li>
<li>Quality expectations throughout the team soared up</li>
<li>As a result, the quality actually increased a lot</li>
<li>But existing technical debt suddenly became incompatible with the team&rsquo;s own quality criterion. We went on to pay it back, which slowed us down for a while</li>
<li>Productivity is regularly going up as the technical debt is reduced</li>
<li>It helped us to define shared coding conventions</li>
<li>Pair programming is not for everyone. It has likely precipitated the departure of one team member</li>
<li>It certainly helped the team to <a href="http://www.hans-eric.com/2007/08/13/is-your-team-jelled/">jell</a></li>
<li>Newcomers can submit code on day 1</li>
<li>The skills of everyone increase a lot quicker than before</li>
<li><em>Bonus</em> : it improves personal skills of all the team members</li>
</ul>


<p>If you are interested in how we got there, read on, here is our story :</p>

<h2>Best Effort Code Reviews</h2>

<p>At the beginning, only experienced team members were reviewing the submitted code, and making remarks for improvement over our default review system : <a href="http://smartbear.com/product/collaborator/overview/">Code Collaborator</a>.</p>

<p>This practice revealed tedious, especially with large change lists. As it was not systematic, reviewers constantly had to remind to the reviewees to act on the remarks, which hindered empowerment.</p>

<h2>Systematic Code Reviews</h2>

<p>Observing this during a <a href="/how-we-introduced-efficient-agile-retrospectives/">retrospective</a>, we decided to do add code review to our <a href="https://www.scrum.org/Resources/Scrum-Glossary/Definition-of-Done">Definition Of Done</a>. Inspired by <a href="http://producingoss.com/en/setting-tone.html#code-review">best practices in the Open Source world</a>, we created a ruby review script that automatically creates Code Collaborator reviews based on the <a href="www.perforce.com">Perforce</a> submits. Everyone was made observer of any code change, and everyone was to participate in the reviews.</p>

<p>At first, to make this practice stick, a few benevolent review champions had to comment all the submitted code; once the habit was taken, everyone participated in the reviews.</p>

<p>Code Collaborator spamming was certainly an issue, but using Code Collaborator System Tray App helped each of us to keep up to date with the remaining reviews to do.</p>

<p><em>Bonus</em> : As everyone was doing reviews, and that reviews of small changes are easier, submits became smaller.</p>

<p><a href="/imgs/2015-01-27-from-zero-to-pair-programming-hero/code-collaborator.png">{% img center /imgs/2015-01-27-from-zero-to-pair-programming-hero/code-collaborator.resized.png A screenshot of our code collaborator installation%}</a></p>

<p>This was certainly an improvement, but it remained time consuming. We believed we could do better.</p>

<h2>Pair Programming</h2>

<p>After 1 or 2 months of systematic code reviews, during a retrospective (again) nearly all the team members decided to give <a href="http://blogs.sourceallies.com/2011/03/pair-programming-101/">pair programming</a> a try.</p>

<p>We felt the difference after the very first day : pair programming is intense, but the results are great. We never turned back.</p>

<p>With pair programming in place, we had to settle a pair switching frequency. We started with the full story, tried a one day rotation, and eventually settled on &ldquo;MIN(1 week, the story)&rdquo;.</p>

<p>This is not set in stone and is team dependent. It may vary depending on the learning curve required to work on a story. We might bring it down later maybe.</p>

<h2>Remote Pair Programming</h2>

<p>Ahmad, a Murex guy from Beirut joined the team a few months ago. We did not want to change our way of working, and decided to try remote pair programming.</p>

<h3>Initial Setup</h3>

<p>At the beginning, we were using <a href="http://products.office.com/en-us/Lync/lync-2013-video-conferencing-meeting-software">Lync</a> (Microsoft&rsquo;s chat system) with webcams, headphones and screen sharing. It works, but Lync&rsquo;s screen sharing does not allow seamless remote control between Paris and Beirut. Here is how we coped with this :</p>

<ul>
<li>Only exceptionally use Lync&rsquo;s &ldquo;Give Control&rdquo; feature : it lags too much</li>
<li>Do small submits, and switch control at submits</li>
<li>When you cannot submit soon, shelve the code on perforce (you would just pull your buddy&rsquo;s repo with git), and switch control</li>
</ul>


<p>As a result, Ahmad became productive a lot more quickly. We are not 2 sub teams focusing on their own area of expertise, but 1 single distributed team sharing everything.</p>

<p><a href="/imgs/2015-01-27-from-zero-to-pair-programming-hero/remote-pairing-setup.jpg">{% img center /imgs/2015-01-27-from-zero-to-pair-programming-hero/remote-pairing-setup.resized.jpg My remote pair programming setup%}</a></p>

<h3>Improved Setup</h3>

<p>Remote pair programming as such is workable, but does not feel as easy as being collocated. Here are a few best practices we are now using to improve the experience :</p>

<ul>
<li>Keep your pair&rsquo;s video constantly visible : either on your laptop of in a corner of you main screen, but it&rsquo;s important to see his facial expression all the time</li>
<li>In order to allow eye contact, place your cam next to the window containing the video of your pair.</li>
<li>Using 2 cameras, <a href="http://download.manycam.com/">ManyCams</a> and a small whiteboard allows to share drawings !</li>
</ul>


<p><a href="/imgs/2015-01-27-from-zero-to-pair-programming-hero/remote-pairing-screenshot.jpg">{% img center /imgs/2015-01-27-from-zero-to-pair-programming-hero/remote-pairing-screenshot.resized.jpg A screenshot of my pair programming environment%}</a></p>

<ul>
<li>We started using the <a href="http://pomodorotechnique.com/">Pomodoro technique</a> for control switching. <a href="http://www.marinaratimer.com/">MarinaraTimer</a> provides an online and shareable timer.</li>
<li>We also started maintaining a todo list with an online shareable editor such as <a href="http://collabedit.com/">CollabEdit</a> or <a href="https://docs.google.com/">Google Docs</a>.</li>
</ul>


<h3>Future Setup</h3>

<p>We are currently welcoming a new engineer in Beirut, and as we will be doing more remote pair programming, we&rsquo;ll need to make this more seamless. Control sharing and lag through Lync remain the main issues. We don&rsquo;t have a solution for that yet, but here are the fixes we are looking into</p>

<ul>
<li><a href="http://www.saros-project.org/">Saros</a> is an <a href="https://eclipse.org/">Eclipse</a> plugin for remote concurrent and real time editing of files. Many people can edit the files at the same time. We are waiting for the <a href="https://www.jetbrains.com/idea/">Intellij</a> version that is still under development</li>
</ul>


<p><a href="http://www.saros-project.org/screenshots">{% img center /imgs/2015-01-27-from-zero-to-pair-programming-hero/saros.resized.png A screenshot from Eclipse with Saros plugin%}</a></p>

<ul>
<li><a href="https://floobits.com/">Floobits</a> is a commercial equivalent of saros. We tried it and it seems great. It&rsquo;s not cheap though, especially with in-house servers.</li>
<li><a href="https://screenhero.com/">Screenhero</a> is a commercial low-lag, multi cursor screen sharing tool. Unfortunately, it currently does not work behind a proxy, and so we were not able to evaluate it yet.</li>
</ul>


<h2>Final thoughts</h2>

<p>I believe that collocated, and remote, pair programming are becoming key skills for a modern software engineer.</p>

<p>I hope this will help teams envisioning pair programming. We&rsquo;d love to read about your best practices as well !</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Can agile teams commit?]]></title>
    <link href="http://philippe.bourgau.net/can-agile-teams-commit/"/>
    <updated>2015-01-21T06:57:00+00:00</updated>
    <id>http://philippe.bourgau.net/can-agile-teams-commit</id>
    <content type="html"><![CDATA[<p>Making commitments to deliver software is always difficult. Whatever the margin you might take, it invariably seems wrong afterward &hellip;</p>

<p>Most Scrum, XP or Kanban litterature does not adress the issue, simply saying that commitment is not required, as long as you continuously deliver value (faster than your competition). That&rsquo;s kind of true, but sometimes you need commitments, for example if your customer is not yet ready to deploy your new software every friday worldwide &hellip;</p>

<p>So how can you do it while remaining agile ?</p>

<p>Grossly speaking, you have 2 options :</p>

<h2>Do it as usual</h2>

<p>Discuss with your experts, take some margin, do whatever voodoo you are used to. This will not be worse than it used to be. It might turn out better, thanks to your agile process, you should be able to deploy with a reduced the scope if needed.</p>

<p>{% img center /imgs/2015-01-21-can-agile-teams-commit/voodoo.jpg A guy entranced with voodoo %}</p>

<h2>Use your agile process metrics</h2>

<p>This technique is explained in <a href="http://www.amazon.com/Art-Agile-Development-James-Shore/dp/0596527675/ref=sr_1_1?s=books&amp;ie=UTF8&amp;qid=1411140759&amp;sr=1-1&amp;keywords=the+art+of+agile+development">The Art of Agile Development</a>, in section &ldquo;Risk Management&rdquo;, page 227.</p>

<p><a href="http://www.amazon.com/Art-Agile-Development-James-Shore/dp/0596527675/ref=sr_1_1?s=books&amp;ie=UTF8&amp;qid=1411140759&amp;sr=1-1&amp;keywords=the+art+of+agile+development">{% img center /imgs/2015-01-21-can-agile-teams-commit/art-of-agile-development.jpg The cover of The Art of Agile Development%}</a></p>

<h3>Let&rsquo;s estimate the time you&rsquo;ll need before the release</h3>

<ul>
<li>First, list all the stories you want it your release</li>
<li>Then estimate them with story points.</li>
<li>Now that you have the total number of story points you&rsquo;ll have to deliver before the release, apply a generic risk multiplier :</li>
</ul>


<table>
<thead>
<tr>
<th>Chances of making it </th>
<th> Using XP practices </th>
<th> Otherwise </th>
<th> Description</th>
</tr>
</thead>
<tbody>
<tr>
<td>10%              </td>
<td>x1              </td>
<td> x1        </td>
<td> Almost impossible (ignore)</td>
</tr>
<tr>
<td>50%              </td>
<td>x1.4            </td>
<td> x2        </td>
<td> 50-50 chance (stretch goal)</td>
</tr>
<tr>
<td>90%              </td>
<td>x1.8            </td>
<td> x4        </td>
<td> Virtually certain (commit)</td>
</tr>
</tbody>
</table>


<p><em>As explained in <a href="http://www.amazon.com/Art-Agile-Development-James-Shore/dp/0596527675/ref=sr_1_1?s=books&amp;ie=UTF8&amp;qid=1411140759&amp;sr=1-1&amp;keywords=the+art+of+agile+development">The Art of Agile Development</a> page 227, these numbers com from <a href="http://www.systemsguild.com/riskology/">DeMarco&rsquo;s Riskology</a> system. Using XP practices means fixing all bugs at all iteration, sticking rigorously to DONE-DONE, and having a stable velocity over iterations.</em></p>

<p>This factor will account for unavoidable scope creep and wrong estimations.
* Use you iteration velocity to know how many sprints you&rsquo;ll need to finish.</p>

<h4>For example :</h4>

<p>Suppose you have 45 stories that account for a total of 152 story points, and that your velocity is 23 story points per iteration. You need to do a commitment, but hopefully, you are applying all the XP practices. So you can compute :</p>

<blockquote><p>Number of sprints = 152*1.8/23 = 12 sprints, (24 weeks, or about 5.5 months)</p></blockquote>

<h3>What about unknown risks ?</h3>

<p>Unfortunately, using just the previous, you might miss some unavoidable important tasks you&rsquo;ll need to do before you can release. Think about monitoring tools and stress testing, when did your product owner prioritize these ? These are risk management activities that need to be added to your backlog in the first place. Here is how to list most of them.</p>

<ul>
<li>Do a full team brainstorming about anything that could possibly go bad for your project</li>
<li>For every item discovered, estimate

<ul>
<li>It&rsquo;s probability of occurrence (low, medium, high)</li>
<li>It&rsquo;s consequences (delay, cost, cancellation of the project)</li>
</ul>
</li>
<li>For every item, decide whether to

<ul>
<li>avoid it : you have to find a way to make sure this will not happen</li>
<li>contain it : you&rsquo;ll deal with the risk when it occurs</li>
<li>mitigate it : you have to find a way to reduce it&rsquo;s impact</li>
<li>ignore it : don&rsquo;t bother with unlikely risks of no importance</li>
</ul>
</li>
<li>Finally, create stories to match your risk management decisions. These might be :

<ul>
<li>Monitoring systems helps to contain a risk</li>
<li>Logging helps to mitigate a risk</li>
<li>An automated scaling in script for situations of high demand helps both mitigate and contain the risk</li>
</ul>
</li>
<li>Simply add these stories to your backlog, and repeat the previous section. You can now make your commitment</li>
</ul>


<h2>Afterthoughts</h2>

<p>Contrary to the widespread belief, agile practices and metrics actually helps to make commitments.</p>

<p>It would be better if we had project specific statistics instead of generic risk multipliers. It&rsquo;s a shame that task tracking tools (JIRA &amp; friends) still don&rsquo;t help us with this.</p>

<p>We should keep in mind though, that estimating all your backlog in advance takes some time and is actually some kind of waste. If possible, just sticking to build (and sell) the thing that is the most useful now is more simple (<a href="http://vimeo.com/75196281">this guy calls it drunken stumble</a>).</p>

<iframe src="http://philippe.bourgau.net//player.vimeo.com/video/75196281" width="500" height="281" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen></iframe>


<p> <p><a href="http://vimeo.com/75196281">Tech Mesh 2012 &ndash; Building an Application Platform: Lessons from CloudBees &ndash; Garrett Smith</a> from <a href="http://vimeo.com/erlang">Erlang Solutions</a> on <a href="https://vimeo.com">Vimeo</a>.</p></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Performance is a feature]]></title>
    <link href="http://philippe.bourgau.net/performance-is-a-feature/"/>
    <updated>2015-01-19T06:46:00+00:00</updated>
    <id>http://philippe.bourgau.net/performance-is-a-feature</id>
    <content type="html"><![CDATA[<p>Now that is a widespread title for blog articles ! Just <a href="https://www.google.fr/search?sourceid=chrome-psyapi2&amp;ion=1&amp;espv=2&amp;ie=UTF-8&amp;q=performance%20is%20a%20feature">search Google</a>, and you&rsquo;ll find &ldquo;Performance is a feature&rdquo; in <a href="http://blog.codinghorror.com/performance-is-a-feature/">Coding Horror</a> and <a href="http://coffeeonthekeyboard.com/performance-is-a-feature-623/">others</a>.</p>

<p><a href="http://www.motorstown.com/50701-dragster-jet.html">{% img center /imgs/2015-01-19-performance-is-a-feature/dragster.jpg A Dragster at full speed %}</a></p>

<h1>What&rsquo;s in it for us ?</h1>

<p>If performance is indead a feature, then it can be managed like any feature :</p>

<ul>
<li><p>It should result from use cases</p>

<blockquote><p>During use case X, the user should not wait more than Y seconds for Z</p></blockquote></li>
<li><p>It can be split into user stories</p></li>
</ul>


<blockquote><ul>
<li>Story 1: During use case X, the user should not wait more than 2*Y seconds for Z</li>
<li>Story 2: During use case X, the user should not wait more than Y seconds for Z</li>
</ul>
</blockquote>

<ul>
<li>They can be prioritized against other stories</li>
</ul>


<blockquote><ul>
<li>Let&rsquo;s forget about performance for now and deliver functionality A as soon as ready, we&rsquo;ll speed things up later.</li>
<li>Let&rsquo;s fix basic performance constraints for use case X for now, every story will have to comply with these constraints later.</li>
</ul>
</blockquote>

<ul>
<li>The performance on these use cases should be automatically tested and non regressed</li>
</ul>


<blockquote><ul>
<li>If we slow things too much and these tests breaks, we&rsquo;ll have to optimize the code.</li>
<li>But as long as we don&rsquo;t break the tests, it&rsquo;s ok to unoptimize the code !</li>
</ul>
</blockquote>

<p>Maybe that&rsquo;s a chance to stop performance related gut feeling quarrels !</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How to measure your speed with your business value ? (Lean Software Development Part 3)]]></title>
    <link href="http://philippe.bourgau.net/how-to-measure-your-speed-with-your-business-value-lean-software-development-part-3/"/>
    <updated>2014-10-16T07:07:00+00:00</updated>
    <id>http://philippe.bourgau.net/how-to-measure-your-speed-with-your-business-value-lean-software-development-part-3</id>
    <content type="html"><![CDATA[<p>There is a french idiom that basicaly is</p>

<blockquote><p>No use to run, all that is needed is to start on time &hellip;</p></blockquote>

<p>an agile engineer would add</p>

<blockquote><p>&hellip; and to go in the good direction</p></blockquote>

<p>Indeed, velocity or mean cycle time as speed measures have their shortcomings :</p>

<ul>
<li>Can be falsified by story point inflation !</li>
<li>Does not tell the team or its product owner whether they are working on the right thing.</li>
</ul>


<p>Wouldn&rsquo;t it be great if we could track the business value we are creating instead ? Wouldn&rsquo;t it be more motivating for developpers to know how they are contributing to the bottom line ? Wouldn&rsquo;t it help various people to align inside the organization ?</p>

<h2>How to track and prioritize based on your business value</h2>

<p>From <a href="http://www.amazon.com/The-Principles-Product-Development-Flow/dp/1935401009/ref=sr_1_1?ie=UTF8&amp;qid=1413953773&amp;sr=8-1&amp;keywords=product+development+flow">Reinertsen&rsquo;s Flow book</a>, we learned that the cost of delay is the main driver of the value creation : the faster you deliver a feature, less you spend the cost of delay of that feature, the more value you are creating for your company. <a href="http://scaledagileframework.com/wsjf/">This article</a> suggests that the cost of delay can be computed with the following formula :</p>

<blockquote><p>cost of delay = f(user business value) + g(time criticality) + h(risk reduction opportunity)</p></blockquote>

<p><a href="http://fr.slideshare.net/jchyip/estimating-cost-of-delay/27">This other article</a> suggests that they are different types of tasks that corresponds to the different terms of the formula above.</p>

<p>{% img center /imgs/2014-10-16-how-to-measure-your-speed-with-your-business-value-lean-software-development-part-3/task-types.jpeg &ldquo;Different kind of tasks&rdquo; %}</p>

<p>Here is how we could link the 2 articles :</p>

<ul>
<li>Stories with deadlines : either through legal or market constraints, not doing this will put you out of business (&lsquo;time criticality&rsquo; in the formula)</li>
<li>Stories that influence the bottom line : by increasing the sales figures when delivered, or decreasing them when not delivered, which is kind of the same (&lsquo;user business value&rsquo; in the formula)</li>
<li>Risk reduction tasks : by mitigating risk or streamlining the process, these tasks actually improve the bottom line of other stories (&lsquo;risk reduction opportunity&rsquo; in the formula)</li>
</ul>


<p>The later type of task will be detailed in other articles. Let&rsquo;s focus on the two others.</p>

<h2>The case of the deadlined feature ?</h2>

<p>First, I&rsquo;d say its business value is 0, until it&rsquo;s too late. You should not be working on it too soon, but you should not be working on it too late neither !</p>

<p>In his book <a href="http://www.amazon.com/Art-Agile-Development-James-Shore/dp/0596527675/ref=sr_1_1?s=books&amp;ie=UTF8&amp;qid=1413954965&amp;sr=1-1&amp;keywords=the+art+of+agile+development">The Art of Agile Development</a> James Shore details in great details how an agile team can commit to deliverables (I really recommend this part, I might even write a post about it). He explains that in order to commit, teams should multiply their estimates by 4, or by 1.8 if they are very rigourous in their application of all the XP practices.</p>

<p>So a rule to handle such a task could be to</p>

<ul>
<li>estimate it</li>
<li>multiply that estimate by 4</li>
<li>substract this time from the deadline</li>
<li>prioritize it so that it can be started at that date, but not earlier</li>
<li>don&rsquo;t expect to be creating any value by completing these stories</li>
</ul>


<h2>What&rsquo;s the business value of other typical user stories</h2>

<p><a href="http://scaledagileframework.com/wsjf/">This article</a> suggests that in this case the cost of delay is equal to the business value of the feature for the user. But how can we have an idea of its actual user business value ?</p>

<p>Before actually selling and getting the money, it&rsquo;s just an estimation. With the good information, some people will make better estimates than others, never the less, it&rsquo;s still an estimate. Let&rsquo;s try a &ldquo;Business Value Poker&rdquo; ! Here are a few ideas about how to conduct this:</p>

<ul>
<li>Estimate business value at the same time as you estimate the complexity of a story</li>
<li>Create some business value $ poker estimate cards, write an app for this, or bring in some Poker Chips to estimate the value</li>
<li>Invite some business people (sales, marketting &hellip;) to the meeting to get real knowledge (being organized as a feature team will help)</li>
</ul>


<p><a href="https://gigaom.com/2012/05/16/social-gaming-to-gambling-states-inch-forward/poker-chips-by-sanzar-murzin/">{% img center /imgs/2014-10-16-how-to-measure-your-speed-with-your-business-value-lean-software-development-part-3/all-in.jpg &ldquo;Hands pushing poker chips for an all-in&rdquo; %}</a></p>

<p>At the end, when you have the estimated cost of delay and duration of every task, you can directly prioritize using the WSJF (Weighted Shortest Job First) :</p>

<blockquote><p>WSJF = Cost of Delay / Duration</p></blockquote>

<p>Just do the tasks by decreasing order of WSJF.</p>

<p>At the end of the sprint, just as we track the story points we completed with the velocity, we could track the business value we created, that would be our business value speed. If you have access to real sales numbers, it might be interesting to see if it&rsquo;s possible to correlate the figures.</p>

<h2>Afterthoughts</h2>

<p>The more I learn about Lean principles, the more I find our current Issues Tracking Systems (I&rsquo;m used to Jira) limited. They seem to be databases with a nice UI, whereas what we need are tools to help us to make better decisions out of the multitude of items &hellip; How come they do not provide something as simple as the WSJF ?</p>

<h2>Edit 12/09/2014</h2>

<p>I got some pretty positive feedback from practicing these business value pokers. Inviting the product owner forced him to explain in details why he believed some features were more valuable than others. On the opposite, it allowed the developpers to hightlight how some seemingly unimportant stories were critical to a long term goal. In the end, everyone, including the product owner, is asking for more. It&rsquo;s a good practice that helps introducing the business value / cost of delay concept.</p>

<p>This was part 3 of my <a href="/the-flow-book-summary-lean-software-development_part_1/">suite of article about Lean Software Development</a>, Part 2 was <a href="/why-extreme-programming-works-lean-software-development-part-2/">Why eXtreme Programming works ?</a>, Part 4 will be <a href="/measure-the-business-value-of-your-spikes-and-take-high-payoff-risks-lean-software-development-part-4/">Measure the business value of your spikes and take high payoff risks</a>.</p>
]]></content>
  </entry>
  
</feed>
