<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: ruby | Philippe Bourgau's blog]]></title>
  <link href="http://philou.github.com/blog/categories/ruby/atom.xml" rel="self"/>
  <link href="http://philou.github.com/"/>
  <updated>2013-04-01T22:01:02+02:00</updated>
  <id>http://philou.github.com/</id>
  <author>
    <name><![CDATA[Philippe Bourgau]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[The poor man's memory profiling]]></title>
    <link href="http://philou.github.com/blog/2013/02/01/the-poor-mans-memory-profiling/"/>
    <updated>2013-02-01T00:00:00+01:00</updated>
    <id>http://philou.github.com/blog/2013/02/01/the-poor-mans-memory-profiling</id>
    <content type="html"><![CDATA[<p>While working on <a href="http://www.mes-courses.fr">www.mes-courses.fr</a>, a background scheduled task that was running fine on heroku started to fail with out of memory errors. After searching a bit, I discovered that the inputs had changed, and that the memory consumption of my task was linearly correlated to the size of the inputs.</p>


<p>So I tried to setup an automatic test to verify that the memory consumption of my task would remain small enough for it to run on <a href="http://www.heroku.com">heroku</a>. This is what I wanted to do :</p>


<ul>
<li>write a unit test for this</li>
<li>run the task once to warm up the memory</li>
<li>run the task once for some small sample input and note the peak memory usage</li>
<li>run the task once for some large sample input and note the peak memory usage</li>
<li>check that the memory usages are very close, whatever the size of the inputs</li>
</ul>


<p>Everything there is quite straightforward, appart from "note the peak memory usage". Here is what I came up with</p>


<ul>
<li>note the initial memory usage</li>
<li>start a thread that garbage collects and notes the memory usage every 10 ms</li>
<li>process the data</li>
<li>tell the thread to stop</li>
<li>memory usage is the difference between the maximum and initial memory usages</li>
</ul>


<p>Here is the code in ruby, but it can be easily translated to any language (I did it for C# once)</p>


<p>
<script src="https://gist.github.com/4696311.js"></script>
</p>


<p>Unfortunately in ruby, memory usage is not directly available without <a href="http://philippe.bourgau.net/how-to-install-a-patched-ruby-interpreter-wit">patching and rebuilding the interpreter</a>, but allocated objects count is available, and it's actually enough for our purpose.</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[TOO_MANY_REDIRECTS when changing ssl requirements]]></title>
    <link href="http://philou.github.com/blog/2013/01/28/toomanyredirects-when-changing-ssl-requiremen/"/>
    <updated>2013-01-28T00:00:00+01:00</updated>
    <id>http://philou.github.com/blog/2013/01/28/toomanyredirects-when-changing-ssl-requiremen</id>
    <content type="html"><![CDATA[<p>While I was trying to enforce no ssl on a page of <a href="http://www.mes-courses.fr">www.mes-courses.fr</a> with Rack::SslEnforcer, I lost a few hours trying to fix a TOO_MANY_REDIRECTS error ... The server was redirecting from http to https in loop !<p /><div>It turned out it was my browser (chromium) that had cached a previous redirection.</div><p /><div>I fixed it by right-clicking the faulty redirection in the chrome network debugger and asking a cache clear.</div></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Cloning an rbenv version]]></title>
    <link href="http://philou.github.com/blog/2012/11/08/cloning-an-rbenv-version/"/>
    <updated>2012-11-08T00:00:00+01:00</updated>
    <id>http://philou.github.com/blog/2012/11/08/cloning-an-rbenv-version</id>
    <content type="html"><![CDATA[<p>There is no doc about this, but it turns out to be very simple, just copy the version directory :</p>


<p><code>sh
cd ~/.rbenv/versionscp -R original-version new-version
</code></p>

<p>That's it !</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Setting up Postgre 9.1 for rails development]]></title>
    <link href="http://philou.github.com/blog/2012/05/28/setting-up-postgre-91-for-rails-development/"/>
    <updated>2012-05-28T00:00:00+02:00</updated>
    <id>http://philou.github.com/blog/2012/05/28/setting-up-postgre-91-for-rails-development</id>
    <content type="html"><![CDATA[<p>I am using rails to build <a href="http://www.mes-courses.fr">www.mes-courses.fr</a>. I use ubuntu for my development os, and heroku for deployment. As heroku enforces the usage of Postgre, I chose to use Postgre on my development setup also. When I upgraded from ubuntu 10.04, I had to review my database configuration.</p>


<p>I have a script in script/setup that installs dependencies and databases to setup a new dev environment :</p>


<p>
```sh
#!/bin/sh

## packages dependencies
 sudo apt-get install libxml2-dev libxslt1-dev postgresql libpq-dev sqlite3 libsqlite3-dev

## installing gems
 bundle install   rbenv rehash

## creating dbs
 sudo -u postgres createuser --superuser mes_courses
 sudo -u postgres psql --command="alter user mes_courses with encrypted password 'secret'"
 sudo sed -i 's/\(local *all *all *\)peer/\1md5/' /etc/postgresql/9.1/main/pg_hba.conf
 bundle exec rake db:create:all

## initializing dbs
 bundle exec rake db:migrate
 RAILS_ENV=test bundle exec rake db:migrate
 RAILS_ENV=production bundle exec rake db:migrate
```
</p>


<p>Here is the corresponding config/database.yml</p>


<p>
```yaml
development:
 adapter: postgresql
 database: mes_courses_development
 encoding: utf8
 pool: 5
 timeout: 5000
 username: mes_courses
 password: secret
 host: localhost
 port: 5433

test:
 adapter: postgresql
 database: mes_courses_test
 encoding: utf8
 pool: 5
 timeout: 5000
 username: mes_courses
 password: secret
 host: localhost
 port: 5433

production:
 adapter: postgresql
 database: mes_courses_production
 encoding: utf8
 pool: 5
 timeout: 5000
 username: mes_courses
 password: secret
 host: localhost
 port: 5433

```
</p>


<p>Hope this helps !</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[stub_model and mock_model]]></title>
    <link href="http://philou.github.com/blog/2012/04/16/stubmodel-and-mockmodel/"/>
    <updated>2012-04-16T00:00:00+02:00</updated>
    <id>http://philou.github.com/blog/2012/04/16/stubmodel-and-mockmodel</id>
    <content type="html"><![CDATA[<p>I decided to stop using stub_model and mock_model. I do not use them enough to get fluent with them. Everytime I have to deal with them, something breaks in an unexpected way. I just decided to stand with good old stubs.</p>


<p>I am also thinking of switching to RR (double ruby) and to use proxy objects to get simplify mocking even further. Did you try it ?</p>

]]></content>
  </entry>
  
</feed>
