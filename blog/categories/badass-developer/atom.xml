<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: badass-developer | Philippe Bourgau's blog]]></title>
  <link href="http://philippe.bourgau.net/blog/categories/badass-developer/atom.xml" rel="self"/>
  <link href="http://philippe.bourgau.net/"/>
  <updated>2018-07-12T06:01:03+02:00</updated>
  <id>http://philippe.bourgau.net/</id>
  <author>
    <name><![CDATA[Philippe Bourgau]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[5 mistakes badass developers never do]]></title>
    <link href="http://philippe.bourgau.net/5-mistakes-badass-developers-never-do/"/>
    <updated>2018-07-12T12:51:00+02:00</updated>
    <id>http://philippe.bourgau.net/5-mistakes-badass-developers-never-do</id>
    <content type="html"><![CDATA[<p>Here is a one sentence summary of my <a href="/why-we-need-badass-developers-to-perform-large-scale-refactorings/">previous post</a>.</p>

<blockquote><p>Badass developers negotiate large scale refactorings with the business better.</p></blockquote>

<p> Unfortunately, not all of us are sitting next to a true badass developer &hellip; Hopefully, we can all become one ! Depending on our track record, it&rsquo;s going to be more or less difficult, but with time and the good attitude, we can all do it. Becoming a badass developer is all about trustworthiness.</p>

<p>This post is the third in a <a href="/blog/categories/large-scale-refactoring-sponsorship-series/">series about how to get sponsorship for a large scale refactoring</a>. If you haven&rsquo;t, I recommend you to start from <a href="/how-to-convince-your-business-to-sponsor-a-large-scale-refactoring/">the beginning</a>.</p>

<p>The first thing to become trustworthy is to avoid things that kill trust. Sounds obvious, but it&rsquo;s very easy to forget. Here are 5 examples of trust killers you should never do if you want to become a badass developer.</p>

<p><img src="http://philippe.bourgau.net/imgs/2018-07-03-5-mistakes-badass-developers-never-do/mistake.jpg" alt="Drawing of a hurt finger after someone made a mistake with a hammer. Badass developer don't do this kind of mistakes !" /></p>

<h2>Resume Driven Development</h2>

<p>We should pick the best tools for the job. The best tools are often a bit old, precisely because they&rsquo;ve been battle tested in production for a while ! That&rsquo;s exactly the kind of technologies you want your business to rely on.</p>

<p>To keep his skills up to date, a badass developer will not add a funky new tech in the production code. He would rather negotiate <a href="http://www.jamesshore.com/Agile-Book/slack.html">slack time</a> with the business. He might also openly <em>take</em> his Friday afternoons to experiment the latest techs ! He would simply explain that it&rsquo;s to avoid polluting the production system.</p>

<blockquote><p>ðŸ’¡ A badass developer will not add a funky new tech in the production code.</p></blockquote>

<h2>Over-engineering</h2>

<p>Gold plating or over-engineering are similar anti-patterns. A badass developer always keeps the business&rsquo;s interest in mind. This means he knows how to balance long term design and short term features. A good rule of thumb is to keep a vision in sight, but to get there in baby steps.</p>

<h2>Build features with no agreed upon value</h2>

<p>Product managers are here to select what should and what should not be in the product. As product experts, they are the ones who know how much a feature is worth. Except (maybe) when we are building tools for others developers, they know better than us. Adding something of dubious value in the product is bad in two ways.Â </p>

<ul>
<li>First, it takes some time to build, time that we could use to build valuable features instead. Remember : <a href="/real-developers-ship/">Real developers ship</a> !</li>
<li>Second, it creates unnecessary code to maintain. In the worst case, it can <a href="/incremental-architecture-a-cure-against-architecture-astronauts/">constraint the architecture</a>. Which might eventually prevent us from adding other more valuable features afterwards.</li>
</ul>


<h2>Hide in a tunnel</h2>

<p>We should always be careful of the tunnel effect. Seeing their money vanishing with no visible output makes business people, understandably, creepy. As soon as things become too complicated, a badass developer will raise the alarm. The fact is that he has been in this kind of situation before, and knows how to recognize it. At that point, it&rsquo;s still possible to discuss the problem with everyone, and adjust the plan.</p>

<p>As an interesting side note, I was at the <a href="https://www.meetup.com/fr-FR/DDD-Paris/">Paris DDD Meetup</a> last Thursday. We had the chance to welcome <a href="https://twitter.com/ericevans0">Eric Evans</a> as a surprise guest ! When asked what were his worst mistakes, he said something along this line :</p>

<blockquote><p>ðŸ’¡ Some of my biggest mistakes were not backtracking soon enough a few times as I was drifting in quagmire. Eric Evans</p></blockquote>

<p><a href="https://www.meetup.com/fr-FR/DDD-Paris/events/248022866/"><img src="http://philippe.bourgau.net/imgs/2018-07-03-5-mistakes-badass-developers-never-do/eric-evans-ddd-paris.jpg" alt="Eric Evans, the father of DDD, a true badass developer, answering questions at the Paris DDD meetup" /></a><div class="image-credits">By <a href="https://www.grodziski.com/">JÃ©rÃ©mie Grodziski</a>, on <a href="https://www.meetup.com/fr-FR/DDD-Paris/events/248022866/">Paris DDD Meetup</a></div><br></p>

<h2>Let the team down</h2>

<p>It&rsquo;s not only about getting the business&rsquo;s trust. We must also build trust from our fellow developers. Whenever we break the build and leave, or worse, deploy and leave, that trust is gone for a long while&hellip; We should not do that !</p>

<h2>There&rsquo;s more to a badass developer</h2>

<p>I&rsquo;m done with this list of things badass developers don&rsquo;t do. Avoiding these is only the first step to become a badass developer. In <a href="http://eepurl.com/dxKE95">next post</a>, I&rsquo;ll write about what we need to do if we want to build strong trust with the business.</p>

<p>This post is the third post in a <a href="/blog/categories/large-scale-refactoring-sponsorship-series/">series about how to get sponsorship for a large scale refactoring.</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Why we need Badass developers to perform large scale refactorings]]></title>
    <link href="http://philippe.bourgau.net/why-we-need-badass-developers-to-perform-large-scale-refactorings/"/>
    <updated>2018-07-05T13:28:00+02:00</updated>
    <id>http://philippe.bourgau.net/why-we-need-badass-developers-to-perform-large-scale-refactorings</id>
    <content type="html"><![CDATA[<p><a href="/how-to-convince-your-business-to-sponsor-a-large-scale-refactoring/">My last post</a> was about the challenge for dev teams to get sponsorship for large scale refactorings. I listed two main reasons :</p>

<ol>
<li>The business doubts developers to have their interests in mind</li>
<li>They are also not aware of the cost of the current technical debt</li>
</ol>


<p>This post (and the next) will be about how to gain the business&rsquo;s trust. This is exactly where badass developers can help. Let me start with a story.</p>

<p><img src="http://philippe.bourgau.net/imgs/2018-06-27-why-we-need-badass-developers-to-perform-large-scale-refactorings/badass-dev.jpg" alt="Drawing of 2 hands of a badass developer over his keyboard, with &quot;&gt;badass&lt;&quot; tatooed on his fingers" /></p>

<p>Back in 2002, at my first job, I started to read <a href="https://www.amazon.com/Refactoring-Improving-Design-Existing-Code/dp/0201485672/ref=sr_1_1?ie=UTF8">Refactoring, Improving the Design of Existing code</a>. That&rsquo;s where I read about unit testing. I found it so great that I made a demo to other programmers. Being the junior dev in the team, my co-workers reaction was something between &ldquo;Meh&rdquo; and &ldquo;Maybe&rdquo;. Fortunately, a more experienced and respected developer gave it a try. A few weeks after my demo, he announced to the team that unit testing worked great on new code. This time, people showed no questioning about his opinion : he if said so, it must have been true. Even business people blessed the practice !</p>

<p><a href="https://www.amazon.com/Refactoring-Improving-Design-Existing-Code/dp/0201485672/ref=sr_1_1?ie=UTF8"><img src="http://philippe.bourgau.net/imgs/2018-06-27-why-we-need-badass-developers-to-perform-large-scale-refactorings/refactoring.jpg" alt="The &quot;Refactoring, improving the design of existing code&quot; cover. Badass developers know how to perform large scale refactoring" /></a></p>

<p>I had given a good live coding demo, but it was this respected developer&rsquo;s opinion that won the point. To convince business people of sponsoring a large scale refactoring, we need their trust. That&rsquo;s why we need badass developers around.</p>

<blockquote><p>ðŸ’¡ I had given a good live coding demo, but it was this respected developer&rsquo;s opinion that won the point.</p></blockquote>

<h2>What is a badass developer</h2>

<p><a href="https://commons.wikimedia.org/wiki/File:I_am_Badass_%28Unsplash%29.jpg"><img src="http://philippe.bourgau.net/imgs/2018-06-27-why-we-need-badass-developers-to-perform-large-scale-refactorings/i-am-badass.jpg" alt="Badass Developer's fist with a ring &quot;I am badass&quot;" /></a></p>

<div class="image-credits">By Brooke Lark<a href="https://unsplash.com/photos/jtvGydbUn30">CC0</a>, via Wikimedia Commons</div>


<br>


<p>Badass developers are first of all people who are credible to the business. This usually implies a track record of <a href="/real-developers-ship/">delivering features</a> and refactorings. Badass developers understand the business constraints. That&rsquo;s why they learned how to deliver <a href="/7-reasons-why-learning-refactoring-techniques-will-improve-your-life-as-a-software-engineer/">refactorings alongside features</a>. They also need to be responsible and bold enough to <a href="/are-software-developers-overworked-or-undecided/">stand ground in front of the business</a>. Finally, badass developers are able to train others.</p>

<blockquote><p>ðŸ’¡ Badass developers are first of all people who are credible to the business</p></blockquote>

<p>Unfortunately, there are not so many badass developers in the industry &hellip; <a href="/developer-are-you-losing-your-rat-race/">It has a youngster bias</a>, and tends to push experienced developers to other activities. As if 10 years of systems design was less valuable than knowing the latest language !</p>

<h2>Learn more about Badasss developers</h2>

<p>I tried to find other words before resorting to &lsquo;Badass&rsquo;. Unfortunately, I could find none that got the point so clearly. <a href="https://blog.cleancoder.com/">Uncle bob</a> calls them &lsquo;software professionals&rsquo; in <a href="https://www.amazon.com/Clean-Coder-Conduct-Professional-Programmers/dp/0137081073/ref=sr_1_1?s=books&amp;ie=UTF8">The Clean Coder</a>. Professionalism is not specific enough to me. Adam Nowak also calls them &lsquo;responsible developers&rsquo; in a <a href="https://thenextweb.com/dd/2016/03/28/how-to-be-a-responsible-developer/">blog post</a>. Â That does not convey the idea that, sometimes devs need to stand guard in front of the business.</p>

<p><a href="https://www.amazon.com/Clean-Coder-Conduct-Professional-Programmers/dp/0137081073/ref=sr_1_1?s=books&amp;ie=UTF8"><img src="http://philippe.bourgau.net/imgs/2018-06-27-why-we-need-badass-developers-to-perform-large-scale-refactorings/clean-coder.jpg" alt="The clean coder book cover. Clean coder looks like a form of badass developer" /></a></p>

<p>These concepts, though, are very close to my definition of a badass developer. Check by yourself :</p>

<ul>
<li><a href="https://thenextweb.com/dd/2016/03/28/how-to-be-a-responsible-developer/">How to be a responsible and badass developer</a> by Adam Nowak</li>
<li><a href="https://www.youtube.com/watch?v=BgPj5b6d6nk">Developer under influence</a> by Guillaume Duquesnay</li>
<li><a href="https://www.amazon.com/Clean-Coder-Conduct-Professional-Programmers/dp/0137081073/ref=sr_1_1?ie=UTF8&amp;qid=1530082880&amp;sr=8-1&amp;keywords=the+clean+coder">The clean coder</a> by <a href="https://blog.cleancoder.com/">Robert Martin</a></li>
</ul>


<h2>To be continued</h2>

<p>This was why badass developers matter to the success of large scale refactorings. This was the second post in a <a href="/blog/categories/large-scale-refactoring-sponsorship-series/">series about how to get sponsorship for a large scale refactoring</a>. Â In the next post, we&rsquo;ll look at what we can do to all become Badass developers.</p>

<p><a href="http://eepurl.com/dxKE95">Stay tuned !</a></p>
]]></content>
  </entry>
  
</feed>
