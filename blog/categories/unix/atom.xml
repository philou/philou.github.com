<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: unix | Philippe Bourgau's blog]]></title>
  <link href="http://philippe.bourgau.net/blog/categories/unix/atom.xml" rel="self"/>
  <link href="http://philippe.bourgau.net/"/>
  <updated>2018-08-07T13:20:41+02:00</updated>
  <id>http://philippe.bourgau.net/</id>
  <author>
    <name><![CDATA[Philippe Bourgau]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Fixing the 'TLS-enabled daemon' docker error on Ubuntu]]></title>
    <link href="http://philippe.bourgau.net/fixing-the-tls-enabled-daemon-docker-error-on-ubuntu/"/>
    <updated>2015-12-04T04:29:00+01:00</updated>
    <id>http://philippe.bourgau.net/fixing-the-tls-enabled-daemon-docker-error-on-ubuntu</id>
    <content type="html"><![CDATA[<p><img src="http://philippe.bourgau.net/imgs/2015-12-04-fixing-the-tls-enabled-daemon-docker-error-on-ubuntu/docker-vagrant-ubuntu.jpg" alt="The 3 logos of Docker, Vagrant and Docker" /></p>

<p>I am using <a href="http://www.ubuntu.com/">Ubuntu</a>, <a href="https://www.vagrantup.com/">Vagrant</a> and <a href="https://www.docker.com/">Docker</a> together to handle my various development environments. It usually works just fine : it&rsquo;s fast, low weight, it keeps my machine clean and it&rsquo;s quite simple once you&rsquo;ve setup your first VM. Until last time &hellip; read on !</p>

<p>When I tried to start my docker session through Vagrant as usuall, here is the error I suddenly got :</p>

<p>```
philou@philou-UX31E:~/code/concurrency-kata$ vagrant up
/home/philou/.ssh/known_hosts updated.
Original contents retained as /home/philou/.ssh/known_hosts.old
A Docker command executed by Vagrant didn&rsquo;t complete successfully!
The command run along with the output from the command is shown
below.</p>

<p>Command: [&ldquo;docker&rdquo;, &ldquo;ps&rdquo;, &ldquo;-a&rdquo;, &ldquo;-q&rdquo;, &ldquo;&mdash;no-trunc&rdquo;, {:notify=>[:stdout, :stderr]}]</p>

<p>Stderr: time=&ldquo;2015-10-19T06:16:27+02:00&rdquo; level=&ldquo;fatal&rdquo; msg=&ldquo;Get <a href="http:///var/run/docker.sock/v1.17/containers/json?all=1:">http:///var/run/docker.sock/v1.17/containers/json?all=1:</a> dial unix /var/run/docker.sock: no such file or directory. Are you trying to connect to a TLS-enabled daemon without TLS?&rdquo;</p>

<p>Stdout:
ssh: connect to host localhost port 2222: Connection refused
```</p>

<p>After a bit of Google searching, I found that the docker service needed to be started. <code>service docker start</code> did the trick &hellip; until next reboot !</p>

<p>With still some more Googling, I found a <a href="http://askubuntu.com/questions/19320/how-to-enable-or-disable-services">page</a> explaining how to manage Ubuntu services. In order to make the docker service automaticaly start at every reboot, I just had to enter the following :</p>

<p><code>
systemctl enable docker.service
</code></p>

<p>That did the trick ! I thought that might be useful for others.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Using stock ruby with rbenv]]></title>
    <link href="http://philippe.bourgau.net/using-stock-ruby-with-rbenv/"/>
    <updated>2012-01-26T00:00:00+01:00</updated>
    <id>http://philippe.bourgau.net/using-stock-ruby-with-rbenv</id>
    <content type="html"><![CDATA[<p>While migrating to ruby 1.9, I started using rbenv. I was wondering how it would handle my stock ubuntu ruby 1.8. It works out of the box with the rbenv "system" version. I just have to run</p>


<p>
```sh
rbenv global system
```
</p>


<div>to come back to my stock ruby. Great !</div>

]]></content>
  </entry>
  
</feed>
