<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: heroku | Philippe Bourgau's blog]]></title>
  <link href="http://philippe.bourgau.net/blog/categories/heroku/atom.xml" rel="self"/>
  <link href="http://philippe.bourgau.net/"/>
  <updated>2015-08-18T05:56:56+00:00</updated>
  <id>http://philippe.bourgau.net/</id>
  <author>
    <name><![CDATA[Philippe Bourgau]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Automatic Travis daily build with Heroku scheduler]]></title>
    <link href="http://philippe.bourgau.net/automatic-travis-daily-build-with-heroku-scheduler/"/>
    <updated>2014-03-24T06:31:00+00:00</updated>
    <id>http://philippe.bourgau.net/automatic-travis-daily-build-with-heroku-scheduler</id>
    <content type="html"><![CDATA[<p>As <a href="/auchandirect-scrapi-an-unofficial-api-ruby-gem/">I just released</a> <a href="https://github.com/philou/auchandirect-scrAPI">auchandirect-scrAPI</a>, and that it relies on scrapping, I needed a daily build.</p>

<p>The <a href="https://travis-ci.org">Travis</a> team <a href="https://github.com/travis-ci/travis-ci/issues/582">is already working</a> on this, and I found a small utility app called <a href="http://traviscron.pythonanywhere.com/">TravisCron</a> where anyone can register his repo for an automatic build.</p>

<p>Unfortunately, the feature is not yet ready in Travis, and the TravisCron guys did not yet activate my repo. After having a look at the <a href="https://github.com/FiloSottile/travis-cron">TravisCron source code</a> and the <a href="https://github.com/travis-ci/travis.rb">Travis API</a>, I found out that it is really simple to do the same thing on my own.</p>

<p>That&rsquo;s how I created <a href="https://github.com/philou/daily-travis">daily-travis</a>. It&rsquo;s a tiny Rake task, ready to be pushed and automaticaly scheduled on heroku that will restart the latest build when run.</p>

<p>Details are in the <a href="https://github.com/philou/daily-travis/blob/master/README.md">README</a></p>

<p>@Travis : Thanks again for your service.</p>

<p>{% img center /imgs/2014-03-24-automatic-travis-daily-build-with-heroku-scheduler/travis-ci.jpeg I love Travis logo %}</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How to copy a database from an heroku app to another]]></title>
    <link href="http://philippe.bourgau.net/how-to-copy-a-database-from-an-heroku-app-to/"/>
    <updated>2013-01-11T00:00:00+00:00</updated>
    <id>http://philippe.bourgau.net/how-to-copy-a-database-from-an-heroku-app-to</id>
    <content type="html"><![CDATA[<p>For <a href="http://www.mes-courses.fr">mes-courses.fr</a>, I am using another heroku app as "integration" app, where I can do late verifications before deploying to my production app. If you don't already do this, I recommend you to start now !</p>


<p>One thing that I needed was to copy data from my production app to my integration app. It turns out that <a href="https://devcenter.heroku.com/articles/heroku-postgres-import-export">heroku</a> makes this very easy :</p>


<p><code>sh
heroku pgbackups:restore DATABASE `heroku pgbackups:url --app my-app-prod` --app my-app-integ --confirm my-app-integ
</code></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How I set up a trustico rapid ssl certificate on heroku ssl endpoint]]></title>
    <link href="http://philippe.bourgau.net/how-i-set-up-a-trustico-rapid-ssl-certificate/"/>
    <updated>2012-12-13T00:00:00+00:00</updated>
    <id>http://philippe.bourgau.net/how-i-set-up-a-trustico-rapid-ssl-certificate</id>
    <content type="html"><![CDATA[<p>This can be quite time consuming if it is the first time you set up an ssl endpoint. Here is how I did it :</p>


<ol><li>Purchase a rapidssl certificate for my domain on <a href="http://www.trustico.com" target="_blank">www.trustico.com</a>. Make sure to use the insurrance option so that you can download the private key later. I had to setup an email account at <a href="mailto:admin@mes-courses.fr" target="_blank">admin@mes-courses.fr</a> so that I could receive their confirmation link email.</li> <li>Once you have bought your certificate, login in to you trustico account and download your certificate, the intermediate certificate, and the private key.</li><li>Concatenate the final and intermediate certificates to a single file (let&#39;s call it server.crt).</li> <li>Add the ssl endpoint add on to your heroku application
```sh
heroku addons:add ssl:endpoint
```
</li><li>Upload your certificate
```sh
heroku certs:add server.crt private.key
```
</li><li>Run the following and verify that you have an ssl endpoint with an explicit trusted &quot;True&quot; value
```sh
heroku certs
```
</li><li>Note the ssl-endpoint full domain from the previous command line, and add a DNS CNAME record from your domain to this endpoint</li>
<li>Check that there are no A DNS records pointing to heroku ips on your dns configuration (It used to be the case with older versions of heroku)</li>
<li>Wait until dns are updated to check that it is working.</li>
</ol>


<p> You can check how your dns settings are spreading with <a href="http://www.whatsmydns.net/" target="_blank">www.whatsmydns.net</a> and <a href="http://www.reverse-dns.fr/">http://www.reverse-dns.fr/</a>. The <a href="https://devcenter.heroku.com/articles/ssl-endpoint">heroku ssl-endpoint help page</a> was a real brain saver<a href="https://devcenter.heroku.com/articles/ssl-endpoint">.</a></p>


<p>EDIT 10/10/2013</p>

<p>Any certificate will eventually expire, and need to be renewed. The process for this (at Trustico at least) is to generate a completly new certificate. To install this new certificate on heroku, start by combining the new certificate files as you did the first time, and then use</p>

<p><code>
heroku certs:update server.crt private.key
</code></p>

<p>instead of heroku certs:add. This should be enough, there is no need to update any dns entry.</p>

<p>To make sure the new certificate is used, visit the heroku ssl endpoint directly (get it by running heroku certs) and then visit your ssl site to check the certificate infos from your browser.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Don't forget the heroku stack]]></title>
    <link href="http://philippe.bourgau.net/dont-forget-the-heroku-stack/"/>
    <updated>2011-11-10T00:00:00+00:00</updated>
    <id>http://philippe.bourgau.net/dont-forget-the-heroku-stack</id>
    <content type="html"><![CDATA[<p>Don&#39;t waste your time as I did !<p />If ever you get a dependency gem version error when deploying to a new heroku test app, before starting to mess up your Gemfile configuration, check that the heroku stack of your new app is what you are expecting &hellip;</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Using gems instead of rails plugins on heroku]]></title>
    <link href="http://philippe.bourgau.net/using-gems-instead-of-rails-plugins-on-heroku/"/>
    <updated>2011-09-22T00:00:00+00:00</updated>
    <id>http://philippe.bourgau.net/using-gems-instead-of-rails-plugins-on-heroku</id>
    <content type="html"><![CDATA[<p>Heroku is great, you can have a rails app running live in a few minutes ! There are still a few tricky points you've got to sort out a little differently. One of them is using rails plugins or extensions. The usage way is to have a submodule in your git repository, but heroku does not support submodules ... You are left with 2 choices :</p>


<ul>
<li>Expand the submodule as classical files in your main git repository</li>
<li>Use the extension or plugin as a gem (if possible)</li>
</ul>


<p><p>When I can, I&rsquo;ll go the second route. Last time, I ran into a problem. I wanted to use radiant-tags-extension gem with my radiant app, but I could not launch the install rake task<p />
<code>sh
rake radiant:extensions:tags:install
</code>
<p />I eventually found out that rake tasks from gems are not automatically available from the mail rake command. I also found <a href="http://ggr.com/how-to-include-a-gems-rake-tasks-in-your-rails-app.html">this</a> and it did the trick.</p>
<p>in &lt;railsapproot&gt;/lib/tasks/gems.rake<br />
<code>ruby
Dir["#Gem.searcher.find('radiant-tags-extension').full_gem_path}/lib/tasks/*.rake"].each { |ext| load ext }
</code>
</p></p>
]]></content>
  </entry>
  
</feed>
