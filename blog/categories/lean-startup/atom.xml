<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: lean-startup | Philippe Bourgau's blog]]></title>
  <link href="http://philippe.bourgau.net/blog/categories/lean-startup/atom.xml" rel="self"/>
  <link href="http://philippe.bourgau.net/"/>
  <updated>2017-01-19T05:03:43+00:00</updated>
  <id>http://philippe.bourgau.net/</id>
  <author>
    <name><![CDATA[Philippe Bourgau]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[How Long Can Your Inner Drive Last ?]]></title>
    <link href="http://philippe.bourgau.net/how-long-can-your-inner-drive-last/"/>
    <updated>2016-02-25T06:41:00+00:00</updated>
    <id>http://philippe.bourgau.net/how-long-can-your-inner-drive-last</id>
    <content type="html"><![CDATA[<p>Any software project (job, startup or side project) will require some time before one can get real feedback from real users.</p>

<p><img class="center" src="/imgs/2016-02-25-how-long-can-your-inner-drive-last/exhausted-runner.jpg" title="An exhausted runner" ></p>

<h2>The hard truth</h2>

<p>Your inner drive will only last up to some point. Without feedback, your motivation will die, and this will kill your project.</p>

<h2>How to deal with it ?</h2>

<h3>Know it before you start</h3>

<p>From my own past experiences, I could find that my inner drive has usually disappeared after 2 years (I don&rsquo;t want a word about the time I actually wasted to discover this &hellip;). You too can try to estimate how long you can keep on without much feedback, go through your previous experiences to get an idea.</p>

<p>Once you have an idea of how long you can keep on without much feedback, you&rsquo;re in a much better place to decide to embark on a new project.</p>

<h3>Don&rsquo;t drown in the code</h3>

<p>I once started a <a href="http://philippe.bourgau.net/rip-mes-courses-dot-fr/">side project</a> partly because I was fed up with the poor technologies I was asked to use at work. My project was some kind of salvation. The drawback of this situation is that I tended to dive into code way too early ! Building a real product takes time, and that&rsquo;s a sure way to get late feedback.</p>

<h3>Use Lean Startup techniques</h3>

<p><a href="http://www.amazon.com/UX-Lean-Startups-Experience-Research/dp/1449334911"><img class="center" src="/imgs/2016-02-25-how-long-can-your-inner-drive-last/ux-for-lean-startups.jpg" title="The cover of the book &lsquo;UX For Lean Startups&rsquo;" ></a></p>

<p><a href="http://theleanstartup.com/">Lean Startup</a> is all about getting constant user feedback, even before having any user. I especially liked the book <a href="http://www.amazon.com/UX-Lean-Startups-Experience-Research/dp/1449334911">UX for Lean Startups</a> that explains all the ways to get feedback from the cheapest (interviews) to the most expensive (HTML mockups) without actually coding anything</p>

<h3>Watch out for the Duke Nukem Forever syndrome</h3>

<p>Be very careful of endeavors that promise an Eldorado after long hard work that should last months or years. Products need to ship early with as fewest features, not late with many features. If you embark on such project, you&rsquo;re pretty likely to :</p>

<ul>
<li>burn out before the end</li>
<li>deliver something that is already outdated the day it goes live</li>
<li>never deliver anything</li>
</ul>


<p>If you&rsquo;re already on such a project, I strongly suggest quitting.</p>

<h2>End word</h2>

<p>Maybe getting real feedback from real users takes time, but getting very early feedback from future users is almost always possible.</p>

<p>Keep going, get some feedback !</p>
]]></content>
  </entry>
  
</feed>
