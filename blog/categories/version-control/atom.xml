<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: version control | Philippe Bourgau's blog]]></title>
  <link href="http://philippe.bourgau.net/blog/categories/version-control/atom.xml" rel="self"/>
  <link href="http://philippe.bourgau.net/"/>
  <updated>2018-02-12T06:18:26+01:00</updated>
  <id>http://philippe.bourgau.net/</id>
  <author>
    <name><![CDATA[Philippe Bourgau]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Reviews for everyone]]></title>
    <link href="http://philippe.bourgau.net/reviews-for-everyone/"/>
    <updated>2013-12-02T06:33:00+01:00</updated>
    <id>http://philippe.bourgau.net/reviews-for-everyone</id>
    <content type="html"><![CDATA[<p>We are using <a href="http://www.scrum.org">Scrum</a> at work. As an <a href="http://www.extremeprogramming.org/">eXtreme Programmer</a> to the bones, I wanted more <a href="http://www.extremeprogramming.org/rules/collective.html">collective code ownsership</a>. We were already doing some <a href="http://en.wikipedia.org/wiki/Pair_programming">pair programming</a> from time to time, but I thought it might be a good time to try public <a href="http://en.wikipedia.org/wiki/Code_review">code reviews</a>.</p>

<p>I have already been doing code reviews in other jobs, but the experience has been disappointing up till now for the following reasons :</p>

<ul>
<li>Even with review tools, they involved too much manual efforts</li>
<li>I&rsquo;ve been in jobs with reinforcing loops :
<img class="center" src="/imgs/2013-12-02-reviews-for-everyone/graph.png" title="Schema of a vicious circle : poor quality, bugs, not enough time, poor quality &hellip;" >
In this kind of environment, even mandatory code reviews tend to become a useless &ldquo;tick in the box&rdquo; operation</li>
<li>Often they are used as a control mechanism rather than a share tool</li>
</ul>


<p>Public reviews, <a href="http://producingoss.com/en/setting-tone.html#code-review">as discribed by Karl Fogel in Producing Free Open Source Software</a> on the other hand seem something great to encourage share and peer review. The principles are simple :</p>

<ul>
<li>All commits must be reviewed by at least one person</li>
<li>Anyone can review anyone&rsquo;s code</li>
</ul>


<p>At work, we are using <a href="http://www.perforce.com">Perforce</a> and <a href="http://smartbear.com/products/software-development/code-review/">Code Collaborator</a> as a review tool. We did not have the possibility to send an email at every perforce submit, and manually creating code collaborator reviews for every change is a chore. I spent an afternoon writing a small ruby script that polls perforce for new changes, and automaticaly creates reviews in Code Collaborator from these. I also added something to spot existing Jira ids in commit messages, to enlarge the existing review instead of creating a new one for every commit.</p>

<p>We are very pleased with the result, all the team is participating to the reviews. As with all good code reviews, it&rsquo;s helps :</p>

<ul>
<li>Spoting some bugs</li>
<li>Spoting some possible design improvements</li>
<li>Discussing the global design and architechure of our system</li>
<li>Gathering coding standards</li>
</ul>

]]></content>
  </entry>
  
</feed>
