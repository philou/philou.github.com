<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: vagrant | Philippe Bourgau's blog]]></title>
  <link href="http://philippe.bourgau.net/blog/categories/vagrant/atom.xml" rel="self"/>
  <link href="http://philippe.bourgau.net/"/>
  <updated>2015-04-23T05:10:36+00:00</updated>
  <id>http://philippe.bourgau.net/</id>
  <author>
    <name><![CDATA[Philippe Bourgau]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Setting up Octopress with Vagrant and rbenv]]></title>
    <link href="http://philippe.bourgau.net/setting-up-octopress-with-vagrant-and-rbenv/"/>
    <updated>2015-03-20T05:33:00+00:00</updated>
    <id>http://philippe.bourgau.net/setting-up-octopress-with-vagrant-and-rbenv</id>
    <content type="html"><![CDATA[<p>I recently got hands on an abandonned laptop that was better than the one I was currently using for my personnal hackings, so I decided to switch to this one. I felt this was the time to learn Vagrant and save me some time later on. I settled on creating a <a href="https://www.vagrantup.com/">Vagrant</a> environment for this <a href="http://octopress.org/">Octopress</a> blogging. That proved a lot longer than I thought it would.</p>

<p>{% img center /imgs/2015-03-20-setting-up-octopress-with-vagrant-and-rbenv/vagrant-octopress.png Vagrant logo + Octopress logo%}</p>

<p>If you want to jump to the solution, just have a look at this <a href="https://github.com/philou/philou.github.com/commit/67b17f7702c213ff40313fc7bd0cbfa8a6e8e29b">git change</a>. Here is the slightly longer version.</p>

<ul>
<li><p>Add a Vagrantfile and setup a VM. There are explainations about how to do this all over the web, that was easy.</p></li>
<li><p>Provision your VM. That proved a lot more complex. There are a lot of examples using variants of <a href="https://www.chef.io/">Chef</a>, but the steep learning curve for Chef seemed unneccessarily complex compared to what I wanted to do. Eventually, I figured it out using simple shell provisioning.</p></li>
</ul>


<p>```ruby
  config.vm.provision &ldquo;shell&rdquo;, inline: &lt;&lt;-SHELL</p>

<pre><code>echo "Updating package definitions"
sudo apt-get update

echo "Installing git and build tools"
sudo apt-get -y install git autoconf bison build-essential libssl-dev libyaml-dev libreadline6-dev zlib1g-dev libncurses5-dev libffi-dev libgdbm3 libgdbm-dev
</code></pre>

<p>  SHELL</p>

<p>  config.vm.provision &ldquo;shell&rdquo;, privileged: false, inline: &lt;&lt;-SHELL</p>

<pre><code>git config --global user.name "john.doe"
git config --global user.email "john.doe@mail.com"

if [ ! -d "$HOME/.rbenv" ]; then
  echo "Installing rbenv and ruby-build"

  git clone https://github.com/sstephenson/rbenv.git ~/.rbenv
  git clone https://github.com/sstephenson/ruby-build.git ~/.rbenv/plugins/ruby-build

  echo 'export PATH="$HOME/.rbenv/bin:$PATH"' &gt;&gt; ~/.bashrc
  echo 'eval "$(rbenv init -)"' &gt;&gt; ~/.bashrc

else
  echo "Updating rbenv and ruby-build"

  cd ~/.rbenv
  git pull

  cd ~/.rbenv/plugins/ruby-build
  git pull
fi

export PATH="$HOME/.rbenv/bin:$PATH"
eval "$(rbenv init -)"

if [ ! -d "$HOME/.rbenv/versions/2.2.0" ]; then
  echo "Installing ruby"

  rbenv install 2.2.0
  rbenv global 2.2.0

  gem update --system
  gem update

  gem install bundler
  bundle config path vendor/bundle

  rbenv rehash
fi

cd /vagrant
bundle install

if [ ! -d "/vagrant/_deploy" ]; then
  bundle exec rake setup_github_pages["git@github.com:philou/philou.github.com"]
  git checkout . # Revert github deploy url to my domain
  cd _deploy
  git pull origin master # pull to avoid non fast forward push
  cd ..
fi
</code></pre>

<p>  SHELL
```</p>

<ul>
<li><p>Setup port forwarding. That should have been simple &hellip; after forwarding port 4000 to 4000, I could still not manage to access my blog preview from the host machine. After searching throughout the web for a long time, I eventually fixed it with by adding <code>--host 0.0.0.0</code> to the rackup command line in <a href="https://github.com/philou/philou.github.com/commit/67b17f7702c213ff40313fc7bd0cbfa8a6e8e29b/Rakefile">Octopress Rackfile</a></p></li>
<li><p>Setup ssh forwarding. In order to be able to deploy to github pages with my local ssh keys, I added the following to my Vagrantfile.</p></li>
</ul>


<p>```ruby
  # The path to the private key to use to SSH into the guest machine. By
  # default this is the insecure private key that ships with Vagrant, since
  # that is what public boxes use. If you make your own custom box with a
  # custom SSH key, this should point to that private key.
  # You can also specify multiple private keys by setting this to be an array.
  # This is useful, for example, if you use the default private key to
  # bootstrap the machine, but replace it with perhaps a more secure key later.
  config.ssh.private_key_path = &ldquo;~/.ssh/id_rsa&rdquo;</p>

<p>  #  If true, agent forwarding over SSH connections is enabled. Defaults to false.
  config.ssh.forward_agent = true
```</p>

<ul>
<li>Fix virtual box synced folder. When I tried to pimp my favicon up, changing the png in the host machine did not update it on the guest ! I lost almost 3 hours figuring this out &hellip; searching google, I eventually found that <a href="http://docs.vagrantup.com/v2/synced-folders/virtualbox.html">Virtual Box synced folders can have issues</a>, and that <a href="http://stackoverflow.com/questions/18933547/vagrant-virtualbox-shared-folder-out-of-sync-when-there-are-many-file-related">installing the guest additions is recommended</a>. For this, just enter the following in the command line from your project&rsquo;s working dir :</li>
</ul>


<p><code>
vagrant plugin install vagrant-vbguest
vagrant reload
</code></p>

<p>I&rsquo;ll tell you if this does not do the trick.</p>

<p>I admit it was a lot longer than I expected it to be, but at least now it&rsquo;s repeatable !</p>

<p><a href="http://docker.io">{% img center /imgs/2015-03-20-setting-up-octopress-with-vagrant-and-rbenv/docker.png The Docker logo%}</a></p>

<p>Next steps will be to use <a href="http://docker.io">Docker</a> providers and Dockerfile to factorize provisioning and speedup up VM startup.</p>
]]></content>
  </entry>
  
</feed>
