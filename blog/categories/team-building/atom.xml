<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: team-building | Philippe Bourgau's blog]]></title>
  <link href="http://philippe.bourgau.net/blog/categories/team-building/atom.xml" rel="self"/>
  <link href="http://philippe.bourgau.net/"/>
  <updated>2017-08-08T06:51:29+02:00</updated>
  <id>http://philippe.bourgau.net/</id>
  <author>
    <name><![CDATA[Philippe Bourgau]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Recipes For An Agile Workspace]]></title>
    <link href="http://philippe.bourgau.net/recipes-for-an-agile-workspace/"/>
    <updated>2016-02-17T06:40:00+01:00</updated>
    <id>http://philippe.bourgau.net/recipes-for-an-agile-workspace</id>
    <content type="html"><![CDATA[<p>Nowadays, start-ups and tech companies seem to be competing for the most beautiful offices in order to attract top talents.</p>

<p><img class="center" src="/imgs/2016-02-17-recipes-for-an-agile-workspace/open-space.jpg" title="A nice modern and beautiful co-working space" ></p>

<p>Unfortunately, sometimes, it&rsquo;s just the good old office in disguise. At the opposite, some teams or companies actually think and decide how to organize their offices. For example, here is what <a href="https://twitter.com/kentbeck">Kent Beck</a> says about office setup in <a href="http://www.amazon.com/Extreme-Programming-Explained-Embrace-Change/dp/0201616416/ref=sr_1_2?tag=pbourgau-20&amp;amp;ie=UTF8&amp;qid=1456177035&amp;sr=8-2&amp;keywords=extreme+programming+embrace+change">XP embrace change</a></p>

<blockquote><p>If you don&rsquo;t have a reasonable place to work, your project won&rsquo;t be successful. The difference
between a good space for the team and a bad space for the team is immediate and dramatic.</p></blockquote>

<p>Joel Spolsky has been blogging a lot about the office setups at <a href="http://www.joelonsoftware.com/articles/BionicOffice.html">FogBugz</a></p>

<p><a href="http://www.joelonsoftware.com/articles/BionicOffice.html"><img class="center" src="/imgs/2016-02-17-recipes-for-an-agile-workspace/fog-bugz.jpg" title="The beautiful FogBugz office" ></a></p>

<p>While defining its agile culture, <a href="http://fr.slideshare.net/JoakimSunden/agile-at-spotify">Spotify too designed custom offices</a></p>

<p><a href="http://fr.slideshare.net/JoakimSunden/agile-at-spotify"><img class="center" src="/imgs/2016-02-17-recipes-for-an-agile-workspace/spotify.jpg" title="Spotify offices" ></a></p>

<h2>How does it work ?</h2>

<p>Let&rsquo;s review a few office design practices to understand how they work :</p>

<h3>The team room or space</h3>

<p>Having a delimited room helps to build a real team. First, by isolating from noises, it helps the team to focus on its work and current topics. Second, by providing a visual barrier to cross before anyone can disturb the team. Finally, it allows the team to organize its own visual management.</p>

<p><img class="center" src="/imgs/2016-02-17-recipes-for-an-agile-workspace/spotify-team-room.jpg" title="Team private work place at spotify" ></p>

<h3>Private team gathering area</h3>

<p>An area where the team (and only the team) can meet at any time is great to do on the spot meetings (without the hassle of finding a room). This area should be comfortable and provide a relaxed and creative atmosphere (which is very important to conduct efficient retrospectives). It can also be used to take breaks and lunches, fostering team spirit again.</p>

<p><img class="center" src="/imgs/2016-02-17-recipes-for-an-agile-workspace/spotify-gathering-area.jpg" title="Team gathering area with writable walls and a wall screen at spotify" ></p>

<h3>Writable walls</h3>

<p>It&rsquo;s pretty easy to cover the walls with whiteboard stickers so that there is plenty of room for discussing design and otherwise keeping important things visible for everyone.</p>

<h3>Laptops, Wifi and movable desks</h3>

<p>Lean manufacturing favors simple, versatile and configurable machines over powerful specialised ones, which are often pretty long to setup. In software, we don&rsquo;t rely on machines as much as factories do, but there might be something to take here. Using laptops, a good Wifi and movable desks, it is pretty easy to reconfigure your office as it best fits the team at a particular moment. This way a team can easily adapt to personal preferences and turnover.</p>

<h3>Wall screens</h3>

<p>Agile and Lean thinkings both heavily use visual management. Having a lot of wall screens dedicated to displaying team relevant information in the team space brings a lot of value. To get the maximum benefit, these wall screens should be fully configurable and movable by the team.</p>

<p><img class="center" src="/imgs/2016-02-17-recipes-for-an-agile-workspace/wall-screens.jpg" title="Our own wall screens at work" ></p>

<h3>Team budget</h3>

<p>Eventually, in order to make sure the team can always work as efficiently as possible, it should have some money to spend for its workspace. It could be used to buy any of the upper, but also anything else that might help the team at a particular point in time. Without such a budget, teams have to make a request to the office department to get anything, often to no avail, or with extra long delays.</p>

<h2>Distributed teams</h2>

<p>Distributed teams bring their own challenges &hellip; and workplaces needs.</p>

<h3>Remote team space</h3>

<p>If your team is split between 2 places (as our team is at <a href="http://www.murex.com">Murex</a>) then obviously, each site should have its own delimited space, with its own gathering area.</p>

<h3>Constant visio connection</h3>

<p>Connecting gathering areas through visio is a great way to build the distributed team. It prevents loosing time when a meeting is required. It also builds the team by showing what&rsquo;s happening on the other side and by making it possible to take distributed lunches and breaks !</p>

<p><a href="http://www.infoq.com/presentations/distributed-team-agile"><img class="center" src="/imgs/2016-02-17-recipes-for-an-agile-workspace/distributed-lunch.jpg" title="A team sharing food remotely between offices" ></a></p>

<h3>Distributed whiteboards</h3>

<p>I never had the chance to work with one of these, but I often missed a whiteboard when working remotely &hellip; Any input on this subject would be welcome !</p>

<h2>Lego offices</h2>

<p>Here is another extract from Kent Beck&rsquo;s &ldquo;XP Embrace Change&rdquo;</p>

<blockquote><p>The courage value finds its expression in the XP attitude toward facilities. If the corporate attitude
toward facilities is at odds with the team&rsquo;s attitude, the team wins. If the computers are in the
wrong place, they are moved. If the partitions are in the way, they are taken down. If the lights are
too bright, they are taken out. If the phones are too loud, one day, mysteriously, they are all found
to have cotton stuffed in the bells.</p></blockquote>

<p>Improving the office is a cheap way to make a software organization more efficient. For another reference, here is what Tom DeMarco &amp; Tim Lister wrote in <a href="http://www.amazon.com/gp/product/0321934113/ref=s9_simh_gw_g14_i3_r?tag=pbourgau-20&amp;amp;pf_rd_m=ATVPDKIKX0DER&amp;pf_rd_s=desktop-1&amp;pf_rd_r=1K2KEWBRQK6F1R26D5D2&amp;pf_rd_t=36701&amp;pf_rd_p=2079475242&amp;pf_rd_i=desktop">Peopleware</a></p>

<blockquote><p>Police-mentality planners design workplaces the way they would design prisons: optimized for containment at minimal cost. We have unthinkingly yielded to them on the subject of workplace
design, yet for most organizations with productivity problems, there is no more fruitful area for improvement than the workplace. As long as workers are crowded into noisy, sterile, disruptive space, it&rsquo;s not worth improving anything but the <strong>workplace</strong>.</p></blockquote>

<p>Instead of designing offices, furniture departments in companies could provide a constant stock of building blocks for office building. Teams could use a workplace budget to build the workspace that suits them most. A good Wifi, laptops, enough floor power plugs, extra screens, movable tables, movable walls and easy to fix wall monitors are all things that would make this possible.</p>

<p><img class="center" src="/imgs/2016-02-17-recipes-for-an-agile-workspace/lego-office.jpg" title="A miniature office in Legos" ></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Great Developers Are Free]]></title>
    <link href="http://philippe.bourgau.net/great-developers-are-free/"/>
    <updated>2015-12-31T12:24:00+01:00</updated>
    <id>http://philippe.bourgau.net/great-developers-are-free</id>
    <content type="html"><![CDATA[<p>For many reasons. But mostly because they are key to efficiently growing a software organization.</p>

<p><img class="center" src="/imgs/2015-12-31-great-developers-are-free/cat-codes-for-food.jpg" title="A funny picture sleeping on a keyboard, with the mention &lsquo;Will code for food&rsquo;" ></p>

<h2>A tale of 2 teams</h2>

<p>Let&rsquo;s have a look at 2 software teams in the world of corporate finance.</p>

<h3>The junior in-house team</h3>

<p><a href="http://www.lefigaro.fr/emploi/2013/12/07/09005-20131207ARTFIG00309-bruit-temperature-air8230-les-salaries-reserves-sur-l-open-space.php"><img class="center" src="/imgs/2015-12-31-great-developers-are-free/open-space.jpg" title="A big corporate open space" ></a></p>

<p>One is an in-house software development team in a large bank. The project already has a bad reputation among developers.The bank has difficulties to hire so the team is constituted of 10 rather junior developers. Unfortunately, without guidance and long term vision, the quality of the code suffers. It looks like an ad-hoc composition of various technolgies, glue code, and reinvented frameworks. The overall result is a barely good enough product that costs a small fortune in maintainance and support. The user experience is awful, which make it difficult to the the team leaders and the users to collaborate effectively. As a result of all this, the project is suffering from high turnover. Managing this project is really challenging &hellip; and kind of depressing.</p>

<h3>The experienced software team</h3>

<p><a href="http://www.personalized-software.ie/aboutus"><img class="center" src="/imgs/2015-12-31-great-developers-are-free/experienced-team.jpg" title="An experienced software team" ></a></p>

<p>Now let&rsquo;s imagine the same product developed at a software house. It&rsquo;s been on the market for a while now, but new features are regularly added to it at a good pace. The product is solid and the users are happy using it. The structure of the team is completely different : 5 developers, mainly experienced, coming from various backgrounds. As a result, the team builds on all their different expertises to build real competitive advantages. They tend to get into healthy debates about a lot of things, such as :</p>

<ul>
<li>Should we re-use or re-write ?</li>
<li>Is this gold plating or plain technical debt ?</li>
<li>Which technology should we use to build this ?</li>
</ul>


<p>In the end, that makes the product even better. The humane side of the team is also completely different. These experienced developers have all been exposed to the big picture during their careers, and they know things like :</p>

<ul>
<li>&lsquo;Business talk&rsquo; and so they can discuss product topics with the product managers</li>
<li>The best way to go through chores at work is to do them right now</li>
<li>Enough management, testing, ops to make the team self organized</li>
</ul>


<p>The single junior developer in the team tends to mimic this model, and has ease finding mentors, to teach him their trade and to give him career counsels.</p>

<p>As a result, the product and the team remain healthy, and keep providing benefits to all stakeholders.</p>

<h2>Benefits of experienced teams</h2>

<p>First, from a purely short term financial point of view, it&rsquo;s a no brainer ! Even if you pay experienced developers twice as much as juniors, the costs will still be on par. But the difference in created value is huge !</p>

<p>Let&rsquo;s then have a look at the longer term, organizational aspect of things. Obviously, managing such teams requires a lot less work ! Both because of their size and because experienced developers tends to manage themselves very well &hellip; Promoting self-organized &amp; cross-functionnal teams is a great opportunity to reduce the management cost and friction, making the organization more reactive and cost efficient in the long run.</p>

<h2>What is an experienced developer ?</h2>

<p>Obviously, I&rsquo;ve worked with people that were experienced on paper, but not in practice. I <a href="http://www.jrothman.com/htp/interview/2004/12/whats-a-year-of-experience/">read</a> that repeating 10 times the same year of work only amounts to 1 year of experience.</p>

<p>If I was asked to give a definition, I&rsquo;d say that experienced developers have worked on different kind of systems (embeded, web, client, server &hellip;) using different technologies (Java, Ruby, C, Spring, Rails, Javascript &hellip;). Their experiences need not be professional, I&rsquo;ve seen a physics teacher that hacked himself into a great hacker through side projects and open source. Speaking of the subject, good developers always spent a lot of time learning, reading, doing side projects and contributing to open source. Some can be found in local user groups and online programming communities.</p>

<h2>So How do you get them ?</h2>

<p>I can only think of 3 obvious ways :</p>

<ul>
<li>train them</li>
<li>keep them</li>
<li>hire them</li>
</ul>


<p>I&rsquo;m pretty sure training them will not be an issue if you already have enough of them. So that brings us to the 2 other points.</p>

<p><a href="https://www.prestashop.com/blog/en/guided-visit-prestashops-new-paris-headquarters/"><img class="center" src="/imgs/2015-12-31-great-developers-are-free/prestashop.jpg" title="The prestashop offices in Paris" ></a></p>

<p>Lot&rsquo;s of articles have been written about attracting and keeping the best developers. Some companies even made it <a href="http://www.joelonsoftware.com/articles/HighNotes.html">their differentiating point</a>. Here are a few links :</p>

<ul>
<li>In his post <a href="http://avc.com/2012/02/the-management-team-guest-post-from-joel-spolsky/">&ldquo;The Management Team&rdquo;</a> Joel Splosky details the inverted pyramid model</li>
<li>Joel Spolsky&rsquo;s (again) <a href="http://www.joelonsoftware.com/articles/DevelopmentAbstraction.html">Development Abstraction Layer</a> explains all the physical environment that makes programmers happy at work</li>
<li><a href="http://qz.com/169147/applications-have-doubled-to-the-company-that-discloses-its-salaries/">After disclosing employee salaries, Buffer was inundated with resumes</a> when <a href="http::/www.buffer.com">buffer.com</a> publicly disclosed <a href="https://open.buffer.com/introducing-open-salaries-at-buffer-including-our-transparent-formula-and-all-individual-salaries/">their salary formula</a>, the number of applications the company received doubled</li>
<li>Spotify organizes <a href="https://labs.spotify.com/2013/02/15/organizing-a-hack-week/">Hack Weeks</a> where  the company stops for a while to invent new things</li>
<li>Google summarizes it &ldquo;Do Cool Things That Matters&rdquo; in their long advertises <a href="http://www.google.com/about/careers/lifeatgoogle/">Life At Google</a></li>
</ul>


<p>These are just a few examples and are by no way the only things that motivate developers. To summarize, provide the best working conditions (careful, that not money), and communicate a lot about it.</p>

<h2>Hiring is too important to be left to HR</h2>

<p><a href="https://management30.com/product/workouts/">Jurgen Appelo</a> said</p>

<blockquote><p>Management is too important to be left to managers.</p></blockquote>

<p>I guess the same thing can be said about hiring.</p>

<p>Engineers are absolutely required to take the main role when hiring other engineers. Companies that seriously want to have the best developers on board are spending substantial engineering time on hiring. Here are some well known examples :</p>

<ul>
<li><a href="http://www.google.com/about/careers/lifeatgoogle/hiringprocess/">Google</a> is known to conduct around 9 interviews before hiring someone</li>
<li>In its <a href="http://www.valvesoftware.com/company/Valve_Handbook_LowRes.pdf">Handbook for New Employee</a> Valve explicitly states that hiring is your most important role</li>
</ul>


<h2>Endword</h2>

<p>As <a href="https://en.wikiquote.org/wiki/Tom_DeMarco">Tom DeMarco</a> said about quality, in <a href="http://www.amazon.com/Peopleware-Productive-Projects-Teams-3rd/dp/0321934113/ref=sr_1_1?tag=pbourgau-20&amp;amp;ie=UTF8&amp;qid=1451733851&amp;sr=8-1&amp;keywords=peopleware">Peopleware</a> :</p>

<blockquote><p>Great developers are free, but only for those who are willing to pay for them</p></blockquote>
]]></content>
  </entry>
  
</feed>
