Post;Url;Last tweet date;Nugget 1;Nugget 1 tweet date;Nugget 2;Nugget 2 tweet date;Nugget 3;Nugget 3 tweet date;Nugget 4;Nugget 4 tweet date;Nugget 5;Nugget 5 tweet date;Nugget 6 ;Nugget 6 tweet date;Nugget 7;Nugget 7 tweet date;Nugget 8;Nugget 8 tweet date;Nugget 9;Nugget 9 tweet date;;;;;;
There can be only one css stylesheet per media;https://philippe.bourgau.net/there-can-be-only-one-css-stylesheet-per-medi/;21/09/2011;;;;;;;;;;;;;;;;;;;;;;;;
Using gems instead of rails plugins on heroku;https://philippe.bourgau.net/using-gems-instead-of-rails-plugins-on-heroku/;;;;;;;;;;;;;;;;;;;;;;;;;
Radiant v0.9.1 incompatibility with radiant-tags-extension ~> 1.6.2;https://philippe.bourgau.net/radiant-v091-incompatibility-with-radiant-tag/;;;;;;;;;;;;;;;;;;;;;;;;;
Making C# properties first class objects;https://philippe.bourgau.net/making-c-properties-first-class-objects/;21/09/2011;;;;;;;;;;;;;;;;;;;;;;;;
Collecting agile and XP best practices;https://philippe.bourgau.net/collecting-agile-and-xp-best-practices/;;;;;;;;;;;;;;;;;;;;;;;;;
Automaticaly rollback static overrides when testing legacy code;https://philippe.bourgau.net/75417332/;21/09/2011;;;;;;;;;;;;;;;;;;;;;;;;
Rspec messes up stubs and expectations;https://philippe.bourgau.net/rspec-messes-up-stubs-and-expectations/;;;;;;;;;;;;;;;;;;;;;;;;;
radiant r:find does not find hidden pages;https://philippe.bourgau.net/radiant-rfind-does-not-find-hidden-pages/;;;;;;;;;;;;;;;;;;;;;;;;;
Don't forget the heroku stack;https://philippe.bourgau.net/does-programming-equal-refactoring/;;;;;;;;;;;;;;;;;;;;;;;;;
external gem rails generator not found;https://philippe.bourgau.net/external-gem-rails-generator-not-found/;;;;;;;;;;;;;;;;;;;;;;;;;
How to test a class using an implementation helper ?;https://philippe.bourgau.net/how-to-test-a-class-using-an-implementation-h/;21/09/2011;;;;;;;;;;;;;;;;;;;;;;;;
Order of execution of before blocks in RSpec;https://philippe.bourgau.net/order-of-execution-of-before-blocks-in-rspec/;;;;;;;;;;;;;;;;;;;;;;;;;
A useful link to find free pictures;https://philippe.bourgau.net/a-nice-place-to-find-free-pictures-for-my-web/;21/09/2011;;;;;;;;;;;;;;;;;;;;;;;;
Scaling Agile;https://philippe.bourgau.net/scaling-agile/;21/09/2011;;;;;;;;;;;;;;;;;;;;;;;;
Devise, SSL requirements and post data;https://philippe.bourgau.net/devise-ssl-requirements-and-post-data/;;;;;;;;;;;;;;;;;;;;;;;;;
Using stock ruby with rbenv;https://philippe.bourgau.net/using-stock-ruby-with-rbenv/;;;;;;;;;;;;;;;;;;;;;;;;;
How to mock an out of process COM server with C#;https://philippe.bourgau.net/how-to-mock-an-out-of-process-com-server-with/;;;;;;;;;;;;;;;;;;;;;;;;;
Including Rails.application.routes.url_helpers from a module';https://philippe.bourgau.net/including-railsapplicationroutesurlhelpers-fr/;;;;;;;;;;;;;;;;;;;;;;;;;
stub_model and mock_model;https://philippe.bourgau.net/stubmodel-and-mockmodel/;;;;;;;;;;;;;;;;;;;;;;;;;
Ruby thirdparties best practices;https://philippe.bourgau.net/ruby-thirdparties-best-practices/;21/09/2011;;;;;;;;;;;;;;;;;;;;;;;;
Setting up Postgre 9.1 for rails development;https://philippe.bourgau.net/setting-up-postgre-91-for-rails-development/;;;;;;;;;;;;;;;;;;;;;;;;;
Hackers et peintres;https://philippe.bourgau.net/hackers-et-peintres/;11/07/2018;@paulg's famous Hackers and Painters ... in French ! ;11/07/2018;;;;;;;;;;;;;;;;;;;;;;
Rails url_helpers mixup when using rails engines;https://philippe.bourgau.net/rails-urlhelpers-mixup-when-using-rails-engin/;;;;;;;;;;;;;;;;;;;;;;;;;
Rails autoload good practices;https://philippe.bourgau.net/rails-autoload-good-practices/;;;;;;;;;;;;;;;;;;;;;;;;;
Motivation game;https://philippe.bourgau.net/motivation-game-53790/;14/09/2018;Struggling to set a #team practice in place ? Try this #motivation hack. All you need is a A3 printed comic and post-its ... https://buff.ly/2Qlz9Oe #gamification ;14/09/2018;;;;;;;;;;;;;;;;;;;;;;
Windows licker like with C#;https://philippe.bourgau.net/windows-licker-like-with-c/;;;;;;;;;;;;;;;;;;;;;;;;;
Cloning an rbenv version;https://philippe.bourgau.net/cloning-an-rbenv-version/;;;;;;;;;;;;;;;;;;;;;;;;;
How I set up a trustico rapid ssl certificate on heroku ssl endpoint;https://philippe.bourgau.net/how-i-set-up-a-trustico-rapid-ssl-certificate/;;;;;;;;;;;;;;;;;;;;;;;;;
How to install a patched ruby interpreter with rbenv and ruby-build;https://philippe.bourgau.net/how-to-install-a-patched-ruby-interpreter-wit/;;;;;;;;;;;;;;;;;;;;;;;;;
How to copy a database from an heroku app to another;https://philippe.bourgau.net/how-to-copy-a-database-from-an-heroku-app-to/;;;;;;;;;;;;;;;;;;;;;;;;;
TOO_MANY_REDIRECTS when changing ssl requirements;https://philippe.bourgau.net/toomanyredirects-when-changing-ssl-requiremen/;;;;;;;;;;;;;;;;;;;;;;;;;
The poor man's memory profiling;https://philippe.bourgau.net/the-holy-code-antipattern/;21/09/2011;;;;;;;;;;;;;;;;;;;;;;;;
#1 rule for monitoring emails';https://philippe.bourgau.net/1-rule-for-monitoring-emails/;21/09/2011;;;;;;;;;;;;;;;;;;;;;;;;
How to stub around a call to the original method with rspec ?;https://philippe.bourgau.net/how-to-stub-around-a-call-to-the-original-method-with-rspec/;;;;;;;;;;;;;;;;;;;;;;;;;
How to evaluate an xpath in chrome ?;https://philippe.bourgau.net/how-to-evaluate-an-xpath-in-chrome/;;;;;;;;;;;;;;;;;;;;;;;;;
Rubular: a really usefull ruby regex tool;https://philippe.bourgau.net/rubular-a-really-usefull-ruby-regex-tool/;;;;;;;;;;;;;;;;;;;;;;;;;
If new cucumber transform breaks everyhing ...;https://philippe.bourgau.net/if-new-cucumber-transform-breaks-everyhing-dot-dot-dot/;;;;;;;;;;;;;;;;;;;;;;;;;
Don't repeat names in cucumber scenarios;https://philippe.bourgau.net/does-programming-equal-refactoring/;21/09/2011;;;;;;;;;;;;;;;;;;;;;;;;
Display full backtraces in rspec;https://philippe.bourgau.net/display-full-backtraces-in-rspec/;;;;;;;;;;;;;;;;;;;;;;;;;
Hitting the middle ground between classicist and mockist TDD;https://philippe.bourgau.net/hitting-the-middle-ground-between-classicist-and-mockist-tdd/;21/09/2011;;;;;;;;;;;;;;;;;;;;;;;;
Matching meta tags with Capybara 2;https://philippe.bourgau.net/matching-meta-tags-with-capybara-2/;;;;;;;;;;;;;;;;;;;;;;;;;
Be careful not to bundle FakeWeb in production;https://philippe.bourgau.net/be-careful-not-to-bundle-fakeweb-in-production/;;;;;;;;;;;;;;;;;;;;;;;;;
Ditching autotest for guard;https://philippe.bourgau.net/ditching-autotest-for-guard/;;;;;;;;;;;;;;;;;;;;;;;;;
Jasmine and coffeescript setup for rails;https://philippe.bourgau.net/jasmine-and-coffeescript-setup-for-rails/;;;;;;;;;;;;;;;;;;;;;;;;;
www.agileavatars.com : order customized avatar magnets;https://philippe.bourgau.net/www-dot-agileavatars-dot-com-order-customized-avatar-magnets/;;;;;;;;;;;;;;;;;;;;;;;;;
My own side project best practices after reading the 'Side Project Book';https://philippe.bourgau.net/my-new-gem-for-creating-rspec-proxies/;21/09/2011;;;;;;;;;;;;;;;;;;;;;;;;
Simplest way to speed up rspec with in memory sqlite db;https://philippe.bourgau.net/simplest-way-to-speed-up-rspec-with-in-memory-sqlite-db/;;;;;;;;;;;;;;;;;;;;;;;;;
Spork alternative compatible with cucumber;https://philippe.bourgau.net/spork-alternative-compatible-with-cucumber/;;;;;;;;;;;;;;;;;;;;;;;;;
RSpec matchers combinators;https://philippe.bourgau.net/rspec-matchers-combinators/;;;;;;;;;;;;;;;;;;;;;;;;;
Ruby regex captures oneliner;https://philippe.bourgau.net/ruby-regex-captures-oneliner/;;;;;;;;;;;;;;;;;;;;;;;;;
RSpec Matchers Combinators 2 : spec_combos gem;https://philippe.bourgau.net/rspec-matchers-combinators-2-spec-combos-gem/;;;;;;;;;;;;;;;;;;;;;;;;;
I just replaced Feedburner with MailChimp;https://philippe.bourgau.net/i-just-replaced-feedburner-with-mailchimp/;;;;;;;;;;;;;;;;;;;;;;;;;
AgileAvatars.com magnets for real;https://philippe.bourgau.net/agileavatars-dot-com-magnets-for-real/;;;;;;;;;;;;;;;;;;;;;;;;;
How I organized my javascript assets in Rails;https://philippe.bourgau.net/how-i-organized-my-javascript-assets-in-rails/;;;;;;;;;;;;;;;;;;;;;;;;;
Trying to explain monads in java;https://philippe.bourgau.net/trying-to-explain-monads-in-java/;21/09/2011;;;;;;;;;;;;;;;;;;;;;;;;
Sprints are not sprints;https://philippe.bourgau.net/sprints-are-not-sprints/;17/09/2018;Tell me how to #sprint while going at a #SustainablePace ? #Scrum got the wording completely wrong ... https://buff.ly/2Msoj5O;17/09/2018;;;;;;;;;;;;;;;;;;;;;;
Online store scrapping DSL gem;https://philippe.bourgau.net/online-store-scrapping-dsl-gem/;;;;;;;;;;;;;;;;;;;;;;;;;
My humble advices about how to write maintainable tests;https://philippe.bourgau.net/my-humble-advices-about-how-to-write-maintainable-tests/;21/09/2011;;;;;;;;;;;;;;;;;;;;;;;;
Retroactively add keywords for your existing Octopress posts;https://philippe.bourgau.net/retroactively-add-keywords-for-your-existing-octopress-posts/;;;;;;;;;;;;;;;;;;;;;;;;;
Programming as an exponential problem;https://philippe.bourgau.net/programming-as-an-exponential-problem/;21/09/2011;;;;;;;;;;;;;;;;;;;;;;;;
Harley Davidson programming;https://philippe.bourgau.net/harley-davidson-programming/;21/09/2011;;;;;;;;;;;;;;;;;;;;;;;;
Auchandirect-ScrAPI : an unofficial API Ruby Gem;https://philippe.bourgau.net/auchandirect-scrapi-an-unofficial-api-ruby-gem/;21/09/2011;;;;;;;;;;;;;;;;;;;;;;;;
Automatic Travis daily build with Heroku scheduler;https://philippe.bourgau.net/automatic-travis-daily-build-with-heroku-scheduler/;;;;;;;;;;;;;;;;;;;;;;;;;
How we introduced efficient agile retrospectives;https://philippe.bourgau.net/how-we-introduced-efficient-agile-retrospectives/;26/03/2019;"Starting #ContinousImprovement is easy. Here is ""How we introduced efficient #agile #retrospectives"" https://buff.ly/2WdRM9a";26/03/2019;;;;;;;;;;;;;;;;;;;;;;
Refactoring trick to insert a wrapper;https://philippe.bourgau.net/refactoring-trick-to-insert-a-wrapper/;21/09/2011;;;;;;;;;;;;;;;;;;;;;;;;
Coding as a living can be dangerous to your health;https://philippe.bourgau.net/coding-as-a-living-can-be-dangerous-to-your-health/;21/09/2011;;;;;;;;;;;;;;;;;;;;;;;;
Better error messages when testing html views;https://philippe.bourgau.net/better-error-messages-when-testing-html-views/;;;;;;;;;;;;;;;;;;;;;;;;;
My new gem for creating rspec proxies;https://philippe.bourgau.net/my-new-gem-for-creating-rspec-proxies/;;;;;;;;;;;;;;;;;;;;;;;;;
Cucumber_tricks gem : my favorite Gherkin and Cucumber tricks;https://philippe.bourgau.net/cucumber-tricks-gem-my-favorite-gherkin-and-cucumber-tricks/;21/09/2011;;;;;;;;;;;;;;;;;;;;;;;;
Enabling agile practices and elephant taming;https://philippe.bourgau.net/enabling-agile-practices-and-elephant-taming/;21/09/2011;;;;;;;;;;;;;;;;;;;;;;;;
RIP mes-courses.fr;https://philippe.bourgau.net/rip-mes-courses-dot-fr/;;;;;;;;;;;;;;;;;;;;;;;;;
The Holy Code Antipattern;https://philippe.bourgau.net/the-holy-code-antipattern/;18/09/2018;"""Yes, we know this code is crap ... but it was written by X, so we cannot touch it !"" Does this ring a bell ? I call this the Holy #Code #Antipattern https://buff.ly/2x5Pf6P";18/09/2018;;;;;;;;;;;;;;;;;;;;;;
The Flow book summary (lean software development part 1);https://philippe.bourgau.net/the-flow-book-summary-lean-software-development_part_1/;21/09/2011;;;;;;;;;;;;;;;;;;;;;;;;
Why eXtreme Programming works ? (Lean Software Development part 2);https://philippe.bourgau.net/why-extreme-programming-works-lean-software-development-part-2/;;;;;;;;;;;;;;;;;;;;;;;;;
How to measure your speed with your business value ? (Lean Software Development Part 3);https://philippe.bourgau.net/how-to-measure-your-speed-with-your-business-value-lean-software-development-part-3/;21/09/2011;;;;;;;;;;;;;;;;;;;;;;;;
How to setup a weekly fruit basket in no time;https://philippe.bourgau.net/how-to-setup-a-weekly-fruit-basket-in-no-time/;12/10/2018;@KentBeck used to mention food a lot in his #eXtremeProgramming book. Here is how we setup a fresh fruit basket for the team without waiting for a company wide action! https://buff.ly/2C7TLVt;12/10/18;;;;;;;;;;;;;;;;;;;;;;
Performance is a feature;https://philippe.bourgau.net/performance-is-a-feature/;21/09/2011;;;;;;;;;;;;;;;;;;;;;;;;
Can agile teams commit?;https://philippe.bourgau.net/can-agile-teams-commit/;21/09/2011;;;;;;;;;;;;;;;;;;;;;;;;
From Zero to Pair Programming Hero;https://philippe.bourgau.net/from-zero-to-pair-programming-hero/;14/11/2018;Here's an oldie : The story of how my previous team went from nothing to #CodeReviews, to #PairProgramming to #remote pair programming !;18/07/2018;Use #pomodoro to switch control when doing #remote #PairProgramming. It avoids your pair to fall asleep on the other side of the line. https://buff.ly/2NGUdxg;14/11/2018;;;;;;;;;;;;;;;;;;;;
Measure The Business Value of Your Spikes and Take High Payoff Risks (Lean Software Development Part 4);https://philippe.bourgau.net/measure-the-business-value-of-your-spikes-and-take-high-payoff-risks-lean-software-development-part-4/;21/09/2011;;;;;;;;;;;;;;;;;;;;;;;;
Setting up Octopress with Vagrant and rbenv;https://philippe.bourgau.net/setting-up-octopress-with-vagrant-and-rbenv/;;;;;;;;;;;;;;;;;;;;;;;;;
What Optimization Should We Work On (Lean Software Development Part 5);https://philippe.bourgau.net/what-optimization-should-we-work-on-lean-software-development-part-5/;21/09/2011;;;;;;;;;;;;;;;;;;;;;;;;
Trellospectives : Remote Retrospectives with Trello;https://philippe.bourgau.net/trellospectives-remote-retrospectives-with-trello/;01/04/2020;Trellospectives : How we used #Trello to improve our #remote #Retrospectives.;31/08/2018;"#ContinuousImprovement might be the most important to do at work during this crisis. Get your remote retrospectives working with ""Trellospectives: Remote #Retrospectives with #Trello"" https://buff.ly/2UGr8GR #remotework ";01/04/2020;;;;;;;;;;;;;;;;;;;;
Real Programmers Have Todo Lists;https://philippe.bourgau.net/real-programmers-have-todo-lists/;21/09/2011;;;;;;;;;;;;;;;;;;;;;;;;
The Agile Change Management Viral Hack;https://philippe.bourgau.net/the-agile-change-management-viral-hack/;21/09/2011;;;;;;;;;;;;;;;;;;;;;;;;
You don't have to ask your boss for a fast build (Lean Software Development part 6);https://philippe.bourgau.net/www-dot-agileavatars-dot-com-order-customized-avatar-magnets/;22/01/2019;Did you know that a fast build is (almost) free ?;17/07/2018;It's pretty straightforward to build a #DecentralizedDecisionRule to speed up the build. Anyone who sees an opportunity for build speed up will know it should, without asking for permission! https://buff.ly/2CrfGFI ;22/1/2019;;;;;;;;;;;;;;;;;;;;
Actors and Green Threads in Java Demystified;https://philippe.bourgau.net/actors-and-green-threads-in-java-demystified/;21/09/2011;;;;;;;;;;;;;;;;;;;;;;;;
Bye Bye Programmer's TODO List, Hello Personnal Kanban on Jira;https://philippe.bourgau.net/build-or-buy-software-identify-your-core-functional-areas-with-event-storming-and-ddd/;21/09/2011;;;;;;;;;;;;;;;;;;;;;;;;
Mining GitHub For New Hires;https://philippe.bourgau.net/mining-github-for-new-hires/;21/09/2011;;;;;;;;;;;;;;;;;;;;;;;;
A Plan For Technical Debt (Lean Software Development Part 7);https://philippe.bourgau.net/a-plan-for-technical-debt-lean-software-development-part-7/;21/09/2011;;;;;;;;;;;;;;;;;;;;;;;;
Feedback On 360° Feedback Session;https://philippe.bourgau.net/feedback-on-360-degrees-feedback-session/;03/09/2018;We tried to all-in #360Feedback team sessions ! Here is how it went. ;03/09/2018;;;;;;;;;;;;;;;;;;;;;;
Silosis;https://philippe.bourgau.net/silosis/;;;;;;;;;;;;;;;;;;;;;;;;;
Binary Hand Planning Poker;https://philippe.bourgau.net/binary-hand-planning-poker/;10/10/2018;Revise your binary with Binary Planning Poker;16/01/2018;Tired of Fibonacci for your poker estimates ? Try Binary Hand Poker ... https://buff.ly/2ya9oIx #geeky #agile #planningPoker;10/10/18;;;;;;;;;;;;;;;;;;;;
The technical debt ponzi scheme;https://philippe.bourgau.net/the-technical-debt-ponzi-scheme/;03/12/2018;When managing #TechnicalDebt, we should keep the life expectancy of the product in mind to estimate the interests we'll have to payback. https://buff.ly/2E8SH5E #Refactoring;03/12/2018;;;;;;;;;;;;;;;;;;;;;;
Fixing the 'TLS-enabled daemon' docker error on Ubuntu;https://philippe.bourgau.net/first-rule-of-ddd-is-lets-not-talk-about-ddd/;;;;;;;;;;;;;;;;;;;;;;;;;
How I'll measure the lean startup value of information in my next side project (Lean Software Development Part 8);https://philippe.bourgau.net/how-i-set-up-a-trustico-rapid-ssl-certificate/;21/09/2011;;;;;;;;;;;;;;;;;;;;;;;;
My Dream Lean Software Development Tool (Lean Software Development part 9);https://philippe.bourgau.net/my-dream-lean-software-development-tool-lean-software-development-part-9/;;;;;;;;;;;;;;;;;;;;;;;;;
How to do screencasts on Ubuntu;https://philippe.bourgau.net/how-to-do-screencasts-on-ubuntu/;;;;;;;;;;;;;;;;;;;;;;;;;
Great Developers Are Free;https://philippe.bourgau.net/great-developers-are-free/;28/12/2018;Great #developers are free! #Hiring is too important to be left to HR. https://buff.ly/2T3fpQ8;28/12/2018;Great developers are free, but only for those who are willing to pay for them;30/05/18;;;;;;;;;;;;;;;;;;;;
How To Write Good Performance Stories;https://philippe.bourgau.net/how-to-write-good-performance-stories/;15/04/2018;Creating user focused *and* estimable performance #stories is a challenge ... here is how we did it.;15/04/2018;;;;;;;;;;;;;;;;;;;;;;
How We Started Exploratory Testing;https://philippe.bourgau.net/how-we-started-exploratory-testing/;26/09/2018;Start #ExploratoryTesting to improve both your product and your process ! ;16/04/2018;Want to make a better product? Here is how we gamified #ExploratoryTesting and transformed developers in berserk testers! #SoftwareTesting #gamification https://buff.ly/2EOS4dj;26/09/18;;;;;;;;;;;;;;;;;;;;
Most Common Ways To Speed up an algorithm;https://philippe.bourgau.net/most-common-ways-to-speed-up-an-algorithm/;27/12/2018;4 tips that will solve 95% of your slow code issues !;06/07/2018;Although companies have gone crazy with #algorithm interviews, they've never been the critical part of my job in 15 years of programming. Here are tricks to solve 95% of real-world algorithm challenges. https://buff.ly/2KDV1RJ;3/10/18;Despite #developers love for #algorithms. 90% of my real world algorithmic performance issues have been fixed by adding a form of cache. https://buff.ly/2Eyz2LM #performance #programming;27/12/2018;;;;;;;;;;;;;;;;;;
How I fixed 'Warning: Authentication failure. Retrying' with Vagrant;https://philippe.bourgau.net/how-i-finally-use-docker-on-small-open-source-side-projects/;;;;;;;;;;;;;;;;;;;;;;;;;
How To Keep Programming When Assigned A Management Job;https://philippe.bourgau.net/how-to-keep-programming-when-assigned-a-management-job/;21/01/2019;How to use self organization to keep on programming when you are managing a software team.;04/07/2018;3 Tips to continue #programming when becoming #manager : master #PersonalProductivity, know about Manager's Time vs Maker's time, make the team #SelfOrganize https://buff.ly/2VXUrnV;21/1/19;;;;;;;;;;;;;;;;;;;;
How I fixed 'invalid byte sequence in US-ASCII' exception with octopress (and vagrant);https://philippe.bourgau.net/how-i-finally-use-docker-on-small-open-source-side-projects/;;;;;;;;;;;;;;;;;;;;;;;;;
Recipes For An Agile Workspace;https://philippe.bourgau.net/recipes-for-an-agile-workspace/;19/02/2019;Let's build #agile workplaces out of #lego like #office blocks ! https://buff.ly/2RBXeAB;10/12/2018;Did anyone try Lego like offices that teams could adapt to their needs and wishes ? ;17/4/18;I'm happy to see that I'm not the only one thinking #Lego offices are the best for #agile teams. https://buff.ly/2RBXeAB @Google built their garage this way. https://buff.ly/2UXUDlP;19/2/19;;;;;;;;;;;;;;;;;;
How Long Can Your Inner Drive Last ?;https://philippe.bourgau.net/how-long-can-your-inner-drive-last/;25/12/2018;When you discover you are in a Duke Nukem Forever project ... Leave !;06/10/2017;Before you decide to stick on a project just for learning, know how long you can maintain your motivation;1/5/18;Duke Nukem Forever took 15 years of development! When you discover your project is taking the same path ... Leave ! https://buff.ly/2BU5erm https://buff.ly/2BUkAft #Software;7/12/2018;Do yourself a #gift today. Don't stick at a project you don't feel a drive for! https://buff.ly/2BU5erm #Software #motivation;25/12/2018;;;;;;;;;;;;;;;;
Are Most Agile Teams Doing Continuous Improvement The Silly Way ?;https://philippe.bourgau.net/are-most-agile-teams-doing-continuous-improvement-the-silly-way/;02/10/2018;A few lean insights from ‘Little #lean management guide at the usage of #agile teams’ ;24/04/2018;"For unlucky non-french readers who cannot read this great book ""The little #lean management book for #agile teams"", here are a few stories summary in english. https://buff.ly/2HjHktv https://buff.ly/2HkhMg7 #ImprovementKata";2/10/18;;;;;;;;;;;;;;;;;;;;
Stop feeling like a kid every time you ask a day off;https://philippe.bourgau.net/stop-feeling-like-a-kid-everytime-you-ask-a-day-off/;21/09/2011;;;;;;;;;;;;;;;;;;;;;;;;
Scrum teams do not need A Scrum Master;https://philippe.bourgau.net/scrum-teams-do-not-need-a-scrum-master/;18/02/2019;Every #ScrumMaster should end up creating a round robin Scrum Master roll and become a Meta Scrum Master. #SelfOrganization sometimes needs a nudge. #Scrum #Agile  https://buff.ly/2Il6SaS https://buff.ly/2X1EZI1;18/02/2019;;;;;;;;;;;;;;;;;;;;;;
Make hiring everyone's business;https://philippe.bourgau.net/lets-give-remote-first-open-space-technology-un-conference-a-try/;21/09/2011;;;;;;;;;;;;;;;;;;;;;;;;
How to deal with the incentive system in an agile team ?;https://philippe.bourgau.net/how-to-deal-with-the-incentive-system-in-an-agile-team/;21/09/2011;;;;;;;;;;;;;;;;;;;;;;;;
Trello Templates to Boost Your Remote Retrospectives;https://philippe.bourgau.net/trello-templates-to-boost-your-remote-retrospectives/;27/11/2018;Here is a public trello team with many ready-made boards for remote retrospectives activities;23/02/2018; Need help and ideas to organize #remote #retrospectives? Here is a public #Trello team full of activity templates (Glad-Sad-Mad, Hot Air Balloon ...) https://buff.ly/2KnFgPE;27/11/18;;;;;;;;;;;;;;;;;;;;
How We Decentralized Our Company's Training Program;https://philippe.bourgau.net/how-to-write-good-performance-stories/;21/09/2011;;;;;;;;;;;;;;;;;;;;;;;;
A Lego Office Experiment;https://philippe.bourgau.net/a-lego-office-experiment/;;;;;;;;;;;;;;;;;;;;;;;;;
Pair Programming, From Pain Zone To Skill Zone;https://philippe.bourgau.net/pair-programming-from-pain-zone-to-skill-zone/;06/04/2020;#PairProgramming is not only about mentoring. 4 flavors of pairing;10/10/2017;"Prepare to switch your #pairProgramming style as you gain experience. Read about 4 flavors of pairing in ""Pair Programming, From Pain Zone To Skill Zone"" https://buff.ly/2E4C2Ac";21/6/19;Depending on the skills of the buddies and how they approach #PairProgramming, it can be great or awful. Here are 4 common examples. https://buff.ly/2E4C2Ac;6/4/20;"Senior devs must switch to mentors mode when pairing with juniors "" #PairProgramming, from pain zone to skill zone"" https://buff.ly/2E4C2Ac @NewRelic says the same thing holds true for #MobProgramming https://buff.ly/2OgxMQp #softwaredeveloper ";25/3/19;;;;;;;;;;;;;;;;
Real Developers Ship;https://philippe.bourgau.net/real-developers-ship/;22/06/2018;Real developers know how to deal with people;22/06/2018;;;;;;;;;;;;;;;;;;;;;;
How I fixed the unknown language Pygments error in Octopress;https://philippe.bourgau.net/how-i-fixed-the-unknown-language-pygments-error-in-octopress/;;;;;;;;;;;;;;;;;;;;;;;;;
Software is like writing and revising a giant book;https://philippe.bourgau.net/software-is-like-writing-and-revising-a-giant-book/;29/04/2019;"To explain my #softwareEngineer job to people, I tell them that it's like writing a giant book as a team. ""Software is like writing and revising a giant book"" https://buff.ly/2Vjwl9T #WritingSoftware";29/04/2019;The best metaphore I found to explain software to non-developers : group writing a giant novel;28/8/18;;;;;;;;;;;;;;;;;;;;
How To Keep Up With Software Technologies;https://philippe.bourgau.net/how-to-keep-up-with-software-technologies/;06/04/2020;"Studying the theory behind #programming makes it 10 times easier to keep up with latest technologies. ""How To Keep Up With #Software Technologies"" https://buff.ly/2UVvr3V #ComputerScience #learning";30/04/2019;"I'm currently helping #CPP teams with #TDD and #Refactoring. Martin Fowler's ""Refactoring: Improving the Design of Existing Code"" book is still of tremendous value when there is no automated refactoring available ! https://buff.ly/2HzOG97";1/10/18;"@venkat_s said ""The [...] time we need to learn a new concept is inversely proportional to the number of diverse ideas we've been exposed to"" (https://buff.ly/2KpwYXg) Stop wasting your time, and learn the classics of our field https://buff.ly/2HzOG97 @Devoxx #software";26/11;"This confinement time might be the best occasion to study #softwareEngineering theory. Here is a list of classic books in ""How To Keep Up With Software Technologies"" ";06/04/2020;;;;;;;;;;;;;;;;
Anti Ugly-Code Glasses;https://philippe.bourgau.net/anti-ugly-code-glasses/;;;;;;;;;;;;;;;;;;;;;;;;;
Legacy Code Coverall Day;https://philippe.bourgau.net/legacy-code-coverall-day/;;;;;;;;;;;;;;;;;;;;;;;;;
The Size Of Code;https://philippe.bourgau.net/the-size-of-code/;24/06/2019;Daily printout and other silly ideas to materialize the state of a codebase;09/10/2017;"Ever wondered how to communicate to non-programmers how messy your code base is ? Read a few wacky ways in ""The Size Of Code"" https://buff.ly/31KQHJu (inflatable scultpure by @JimmyKuehnle) #Programming #LegacyCode";24/6/19;What's the weirdest #hacktivist performance we could do to highlight the ugly state most codebases are in? https://buff.ly/2B6TWj3 #programming #LegacyCode;19/11/2018;;;;;;;;;;;;;;;;;;
5 Years of Blogging About Software;https://philippe.bourgau.net/5-years-of-blogging-about-software/;;;;;;;;;;;;;;;;;;;;;;;;;
Docker Compose trick : How to have an overridable environment variable in development mode ?;https://philippe.bourgau.net/docker-compose-trick-how-to-have-an-overridable-environment-variable-in-development-mode/;;;;;;;;;;;;;;;;;;;;;;;;;
How to boot a new Rails project with Docker and Heroku;https://philippe.bourgau.net/how-to-boot-a-new-rails-project-with-docker-and-heroku/;;;;;;;;;;;;;;;;;;;;;;;;;
How to setup Rails, Docker, PostgreSQL (and Heroku) for local development ?;https://philippe.bourgau.net/how-to-setup-a-weekly-fruit-basket-in-no-time/;;;;;;;;;;;;;;;;;;;;;;;;;
Is There Any Room For The Not-Passionate Developer ?;https://philippe.bourgau.net/is-there-any-room-for-the-not-passionate-developer/;09/10/2018;"Just read @daedtech's great post ""Human Cost of #TechnicalDebt"". As 90% of the projects are tech debt Ponzi schemes, I still unfortunately wonder ""Is there room for non-passionate devs ?""";12/01/2018;"2 years since I wrote ""Is There Any Room for the Non-Passionate Developer ?"" #WorkLifeBalance is still a big topic to me in the #software industry. https://buff.ly/2ydHWcX";9/10/18;;;;;;;;;;;;;;;;;;;;
When the Boy Scout Rule Fails;https://philippe.bourgau.net/when-the-boy-scout-rule-fails/;27/08/2018;An economical framework would be a great way to convince product managers to invest in large refactorings when the boy scout rule is not enough;23/04/2018;Unfortunately, the boy scout rule is not a silver bullet ...;27/8/18;;;;;;;;;;;;;;;;;;;;
How to Grow a Culture Book;https://philippe.bourgau.net/how-to-grow-a-culture-book/;24/12/2018;Ever heard of Team Culture Book ? It tells newcomers what to expect around here !;12/12/2017;Agregate your team working's culture in a book;4/4/18;A #CultureBook is #LivingDocumentation for #teamAgreements. Here is how we built our own https://buff.ly/2QFjYDo #Management30;24/12/2018;;;;;;;;;;;;;;;;;;
How to prepare a new Ruby env in 3 minutes using Docker;https://philippe.bourgau.net/how-to-prepare-a-new-ruby-env-in-3-minutes-using-docker/;;;;;;;;;;;;;;;;;;;;;;;;;
RSpecProxies now supports .to receive(xxx)... syntax;https://philippe.bourgau.net/rspecproxies-now-supports-to-receive-xxx-dot-dot-dot-syntax/;;;;;;;;;;;;;;;;;;;;;;;;;
Kudo Boxes for Kids;https://philippe.bourgau.net/kudo-boxes-for-kids/;08/10/2018;Get your kids to contribute to house chores with Kudo Boxes ;20/06/2018;We managed to get our kids to contribute to house chores with #Kudos. Like all #gamification schemes though, it requires regular game updates and animation to keep the momentum going ! https://buff.ly/2t5mOnw;8/10/18;;;;;;;;;;;;;;;;;;;;
How to use Hackernews and Reddit for blogging;https://philippe.bourgau.net/how-to-use-hackernews-and-reddit-for-blogging/;;;;;;;;;;;;;;;;;;;;;;;;;
How NOT to use mocks, my talk at Paris.rb;https://philippe.bourgau.net/how-not-to-use-mocks-my-talk-at-paris-rb/;06/11/2017;"Slides of my talk ""How not to use mocks"" at Paris #ruby meetup. Tricks for any #programming #language";06/11/2017;;;;;;;;;;;;;;;;;;;;;;
Flavors of TDD;https://philippe.bourgau.net/flavours-of-tdd/;25/06/2019;Would your rather #TDD Top-Down or Bottom-up ? #TestDrivenDevelopment #SoftwareCraftsmanship https://buff.ly/2pGK4FT;05/11/2018;Bottom-up or Top-down ? Most #TDD practitionners use a blend of both !;28/3/18;"I now explicitly train teams to Top-Down and Bottom-Up #TDD styles. Both can be useful in different situations. Read more in ""Flavors of TDD"" https://buff.ly/2FinDiY";25/6/2019;;;;;;;;;;;;;;;;;;
Top 5 talks I attended at JavaOne 2016 (Part 2);https://philippe.bourgau.net/top-5-talks-i-attended-at-javaone-2016-part-2/;;;;;;;;;;;;;;;;;;;;;;;;;
Top 5 talks I attended at JavaOne 2016 (Part 1);https://philippe.bourgau.net/top-5-talks-i-attented-at-java-one-2016-part-1/;;;;;;;;;;;;;;;;;;;;;;;;;
3 More Great Talks From JavaOne 2016;https://philippe.bourgau.net/3-more-great-talks-from-javaone-2016/;;;;;;;;;;;;;;;;;;;;;;;;;
ReXP : Remote eXtreme Programming;https://philippe.bourgau.net/rexp-remote-extreme-programming/;04/11/2019;"#Remote #PairProgramming brings satellite workers back in the team! This is how we did ""ReXP: Remote #eXtremeProgramming"" https://buff.ly/34hVdQ8";04/11/2019;Depending on your team's #remote configuration, different working agreements will work best. Remote #eXtremeProgramming works well with satellite workers.;14/2/18;Thanks to #remote #PairProgramming, I've seen remote #eXtremeProgramming teams work better than traditional co located teams! https://buff.ly/2FR8acd;5/12/2018;;;;;;;;;;;;;;;;;;
Continuously Deliver a Rails App to your DigitalOcean Box using Docker;https://philippe.bourgau.net/continuously-deliver-a-rails-app-to-your-digital-ocean-box-using-docker/;;;;;;;;;;;;;;;;;;;;;;;;;
How to kill Scrum Zombies ?;https://philippe.bourgau.net/how-to-kill-scrum-zombies/;17/01/2020;Use #SlackTime to against #scrum zombies;11/12/2018;"Without #ContinuousImprovement, #Scrum is not #agile. Enough scrum zombies! Here is my take at ""How to kill Scrum Zombies ?"" https://buff.ly/2G0eMCp";17/1/20;;;;;;;;;;;;;;;;;;;;
Video for our talk 'Extreme Practices' is on YouTube;https://philippe.bourgau.net/vertical-kanban-board-setup/;;;;;;;;;;;;;;;;;;;;;;;;;
Overclocking a Scrum Team to 12;https://philippe.bourgau.net/overclocking-a-scrum-team-to-12/;28/05/2019;"Could we hack the #MythicalManMonth's concept of the Surgical Team into an #XP team to grow it beyond 10 people? ""Overclocking a Scrum Team to 12"" https://buff.ly/2Es36rL";28/05/2019;Hack a #SoftwareDevelopement team to make it work at 12 ! https://buff.ly/2ShmgG3 #Scrum #MythicalManMonth #SurgicalTeam;2/11/18;;;;;;;;;;;;;;;;;;;;
How I got my feet wet with machine learning with 'The First 20 Hours';https://philippe.bourgau.net/how-i-fixed-the-unknown-language-pygments-error-in-octopress/;09/09/2019;"If I managed to go from zero to building a simple #MachineLearning test library in about 20 hours, everyone can! Red the full story in ""How I got my feet wet with machine learning with ‘The First 20 Hours’"" https://buff.ly/2UtyWuK #softwaretesting @joshkaufman";09/09/2019;"I tried ""The first 20 hours"" technique. Turns out that with a bit of grit, we can learn a lot in 20 focused hours !";24/8/18;;;;;;;;;;;;;;;;;;;;
Verify the Big O Complexity of Ruby Code in RSpec;https://philippe.bourgau.net/verify-the-big-o-complexity-of-ruby-code-in-rspec/;03/04/2018;This machine learning experiment to test the complexity of algorithms is now actually used by someone !;11/12/2017;Assert whether your ruby is O(1), O(n) or O(n2) with this experimental complexity_assert gem;3/4/18;;;;;;;;;;;;;;;;;;;;
What Happens to Non-Enthusiast Programmers in the Long Run ?;https://philippe.bourgau.net/what-happens-to-non-enthusiast-programmers-in-the-long-run/;;;;;;;;;;;;;;;;;;;;;;;;;
A Plain English Introduction To Paxos Protocol;https://philippe.bourgau.net/a-plain-english-introduction-to-paxos-protocol/;10/07/2018;Read fairy tales, and understand the Paxos protocol !;20/02/2018;How Kath, Joe & Tom used the #Paxos protocol to fix an inheritance problem in the land of fairytales !;10/7/18;;;;;;;;;;;;;;;;;;;;
5 minutes hack to speed up RSpec in Rails 5 using in-memory SQLite;https://philippe.bourgau.net/5-minutes-hack-to-speed-up-rspec-in-rails-5-using-in-memory-sqlite/;;;;;;;;;;;;;;;;;;;;;;;;;
How I fixed 'devicemapper' error when deploying my Docker app;https://philippe.bourgau.net/how-i-finally-use-docker-on-small-open-source-side-projects/;;;;;;;;;;;;;;;;;;;;;;;;;
Developer ! Are you losing your rat race ?;https://philippe.bourgau.net/developer-are-you-losing-your-rat-race/;16/10/2017;"Although ""#Software is eating the world"", #developers #hiring is still keyword driven ! What should we do about it ?";16/10/2017;;;;;;;;;;;;;;;;;;;;;;
How I finally use Docker on small open source side projects;https://philippe.bourgau.net/how-i-finally-use-docker-on-small-open-source-side-projects/;;;;;;;;;;;;;;;;;;;;;;;;;
How to subscribe to an ActionCable channel on a specific page with custom data ?;https://philippe.bourgau.net/how-to-subscribe-to-an-actioncable-channel-on-a-specific-page-with-custom-data/;;;;;;;;;;;;;;;;;;;;;;;;;
My Ultimate Jira Personal Kanban;https://philippe.bourgau.net/my-ultimate-jira-personal-kanban/;30/07/2018;Would like to use #Jira as a #Programmer's #PersonalKanban or #ToDoList ? Read my guide;17/01/2018;Developer's productivity tip : hack a #PersonalKanban on top of your company's ticket tracking software;30/7/2018;;;;;;;;;;;;;;;;;;;;
Almost 15 years of using Design By Contract;https://philippe.bourgau.net/almost-15-years-of-using-design-by-contract/;02/07/2019;Immutable #functionalprogramming style makes design by contract straightforward;27/07/2018;"""Almost 15 years of #DesignByContracts"" My long road from ignorance to zen ! Why I still use them along with #UnitTests. https://buff.ly/2By5ryU";2/7/19;Class invariants are trivial to enforce in immutable data! We can get almost all of the benefits of #designByContracts by using immutable types. https://buff.ly/2By5ryU #programming;31/12/2018;;;;;;;;;;;;;;;;;;
How to mock your browser's timezone with Jasmine and MomentJS;;;;;;;;;;;;;;;;;;;;;;;;;;
A seamless way to keep track of technical debt in your source code;https://philippe.bourgau.net/a-seamless-way-to-keep-track-of-technical-debt-in-your-source-code/;11/11/2019;I'm reading @cyriux's book Living Documentation, which makes me re-think this technique to track #TechnicalDebt Updated post to come soon !;06/12/2017;"Leave a mark in the code of every time a piece of #TechnicalDebt hits you to prioritize #refactorings ""A seamless way to keep track of technical debt in your source code"" https://buff.ly/33pC2DH";11/11/19;Team stigmergy through code to the rescue of technical debt;15/8/18;Just read From Payback to Prevention: 5 Ways to Tame #TechnicalDebt in Your Codebase https://buff.ly/2CcoPD5. If you are not using Java and don't have access to Papercut annotations, you can always use good old TODO comments. https://buff.ly/2LiD78q @kevinrcasey;21/12/18;@s_watts_seo: read #TechnicalDebt Explained https://buff.ly/2RZYRr5. Check @martinfowler's tech debt quadrant https://buff.ly/2qnWy5m, @DocOnDev's 4 metrics https://buff.ly/2tjnAwD. Can also use //TODO XXX comments to capture code smells https://buff.ly/2LiD78q;15/2/2019;;;;;;;;;;;;;;
How to get your team to do code reviews;https://philippe.bourgau.net/how-to-get-your-team-to-do-code-reviews/;02/12/2019;A man may do an immense deal of good, if he does not care who gets the credit Get your team to do #codereview;31/07/2018;"Become a #CodeReview champion to trick your teammates into doing code reviews! Read more in ""How to get your team to do code reviews"" https://buff.ly/2sqJNfh";2/12/19;Here are some tactics to get your team to do #CodeReview https://buff.ly/2RWWp5H. If this does not work, @daedtech suggests building a business case https://buff.ly/2RWW0QJ #programming;18/12/2018;@lgtm Great insight as to how low hierarchy organization creates to more effective #CodeReviews https://buff.ly/2MGKmaD. Being a low-ego review champion can go a long way to get your team to do code reviews https://buff.ly/2RWWp5H;31/1/2019;;;;;;;;;;;;;;;;
Incremental architecture, a cure against architecture astronauts;https://philippe.bourgau.net/incremental-architecture-a-cure-against-architecture-astronauts/;20/01/2020;"Vision + incremental #refactorings = #agile #architecture. Read more in ""Incremental architecture, a cure against architecture astronauts"" https://buff.ly/30vV3DP";20/01/2020;Except language and platform, incremental architecture works for almost anything !;8/3/19;;;;;;;;;;;;;;;;;;;;
A Straightforward Way to Scale to More Than 1 Scrum Team;https://philippe.bourgau.net/a-straightforward-way-to-scale-to-more-than-1-scrum-team/;27/09/2019;Bring food and fast board games at work to make days with #Scrum ceremonies more fun ! ;26/01/2018;"Synchronizing the sprints and sharing the ceremonies is all it takes to scale #Scrum to a few teams. Read our story in ""A Straightforward Way to Scale to More Than 1 Scrum Team"" https://buff.ly/2CaMrZ6 #Agile ";27/9/19;#Scaling starts by splitting a #scrum team in 2 https://buff.ly/2CaMrZ6 #Agile ;17/12/2018;;;;;;;;;;;;;;;;;;
Most Scrum teams are not agile;https://philippe.bourgau.net/most-scrum-teams-are-not-agile/;07/06/2019;"Improvements you decide in your #retrospective should be started right away ""Most #Scrum teams are not #agile"" https://buff.ly/2MyjPjv";07/06/2019;Don't accept bad #teamwork. Start doing effective #retrospectives today.;13/10/17;#IntrinsicMotivation is Achille's heel of #agile software development. Great #retrospectives are a way to increase it.;11/5/18;"#ContinuousImprovement actions are like investment. Personal finance advisors say we should ""Pay ourselves first"". Teams should do improvement actions first. https://buff.ly/2HM6qBA #scrum";13/11/18;;;;;;;;;;;;;;;;
From apprentice to master, how to learn TDD (Test Driven Development);https://philippe.bourgau.net/from-apprentice-to-master-how-to-learn-tdd-test-driven-development/;10/06/2019;Start a #CodingDojo at work to practice and learn #TDD  https://buff.ly/2tCwMzf (Photo: https://buff.ly/2Rk9Ko3 via @pinterest) #softwareCraftsmanship;31/10/2018;Read the full 15 years long story of how I learned #TDD https://buff.ly/2MuzWyz #unitTesting #SoftwareCraftsmanship;10/6/19;;;;;;;;;;;;;;;;;;;;
20 Bad Excuses For Not Writing Unit Tests;https://philippe.bourgau.net/20-bad-excuses-for-not-writing-unit-tests/;28/10/2019;I don’t have the time !. More bad excuses for not writing #UnitTests;04/10/2017;"""I guess we always find excuses to keep on with our bad habits, don’t we ?"" Stephen King. 20 Bad Excuses for Not Writing Unit Tests";24/1/18;"The #UnitTesting Deadlock : ""I need to refactor first … and I need tests to refactor !"" ";8/6/18;"""It’s multithreaded code, it’s impossible to test. Because it’s fully tederministic ?""  20 Bad Excuses for Not Writing #UnitTests https://buff.ly/2Jbr6Ux";12/11/2018;"The main reason to write #UnitTests before the code is that it's too painful to write them after! More fun in ""20 Bad Excuses For Not Writing Unit Tests"" https://buff.ly/2MFCLuK #TDD";28/10/2019;;;;;;;;;;;;;;
Speed up the TDD feedback loop with better assertion messages;https://philippe.bourgau.net/speed-up-the-tdd-feedback-loop-with-better-assertion-messages/;27/05/2019;Let's add a 4th step in #tdd: Fail, Fail with better error message, Pass, Refactor.;27/05/2019;Custom assertion matchers make TDD faster;13/4/18;#TDD tip: before passing the test, make it fail with a better error message. Diagnostic will be faster down the road. https://buff.ly/2IA3vbi #UnitTesting;16/11/18;;;;;;;;;;;;;;;;;;
Side Projects Matter;https://philippe.bourgau.net/side-projects-matter/;25/10/2019;#SlackTime is a great way to start a #SideProject;25/10/2019;Why banning #SideProject won't make employees more productive;22/2/2019;Why companies should encourage #SideProjects;25/7/18;;;;;;;;;;;;;;;;;;
13 Tricks for Successful Side Projects;https://philippe.bourgau.net/13-tricks-for-successful-side-projects/;29/10/2019;"Waking up 1 hour earlier is a great way to find the time for a #sideProject. Find more in ""13 Tricks for Successful Side Projects"" https://buff.ly/2oZkcsB";29/10/2019;#SideProject best practice no.3 : Setup a routine;11/2/19;#SideProject best practice no.10 : Take technical debt !;27/6/18;"@daedtech : ""Technical debt is technical leverage"". https://daedtech.com/how-to-write-software-lessons/ Reminded me of best practices for side projects";23/11/2018;#Motivation is the main fuel for successful #sideProjects! Do everything you can to keep it high. https://buff.ly/2rKZCd3;25/12/2018;;;;;;;;;;;;;;
Don't stick to TDD's Red-Green-Refactor loop to the letter;https://philippe.bourgau.net/dont-stick-to-tdds-red-green-refactor-loop-to-the-letter/;12/09/2019;"[Red – Better Red – Green – Refactor] Explore different loops in ""Don’t stick to #TDD’s Red-Green-Refactor loop to the letter"" https://buff.ly/2qsJEH6 #UnitTesting";12/09/2019;"Experienced #tdd practitioners know when to switch gears and use other loop patterns. ""Don’t stick to TDD’s Red-Green-Refactor loop to the letter"" https://buff.ly/2IUCQL7 #SoftwareTesting #eXtremeProgramming #UnitTesting";11/3/19;;;;;;;;;;;;;;;;;;;;
5 SPA Conference takeaways that could make us better software professionals;https://philippe.bourgau.net/5-spa-conference-takeaways-that-could-make-us-better-software-professionals/;02/02/2018;Among many other things, I learned about code connascences and #pairprogramming best practices at last year's @spaconference. I guess this year's sessions will be even better ! ;02/02/2018;;;;;;;;;;;;;;;;;;;;;;
7 reasons why learning refactoring techniques will improve your life as a software engineer;https://philippe.bourgau.net/7-reasons-why-learning-refactoring-techniques-will-improve-your-life-as-a-software-engineer/;03/02/2020;"""Incremental #refactoring prevents getting lost in programming tasks"" Discover ""7 reasons why learning refactoring techniques will improve your life as a #software engineer"" https://buff.ly/38VyTOx ";03/02/2020;"By unlocking baby step commits, incremental #Refactoring techniques will simplify #CodeReviews, and #RemoteWork. Read more in ""7 reasons why learning refactoring techniques will improve your life as a software engineer"" https://buff.ly/2Owbom1 #softwaredevelopment ";2/4/19;;;;;;;;;;;;;;;;;;;;
How to start learning the tao of incremental code refactoring today;https://philippe.bourgau.net/how-to-start-learning-the-tao-of-incremental-code-refactoring-today/;01/07/2019;Invent #refactoring challenges from your daily work to get great at refactoring. ;29/10/2018;"#CodingDojos are #deliberatepractice for #programmers. ""How to start learning the tao of incremental code #refactoring today"" https://buff.ly/31REHWt";1/7/19;;;;;;;;;;;;;;;;;;;;
10 things to know that will make you great at refactoring legacy code;https://philippe.bourgau.net/10-things-to-know-that-will-make-you-great-at-refactoring-legacy-code/;23/10/2019;Divide and Conquer remains one of the best techniques when #refactoring with #LegacyCode;06/06/2018;#PairProgramming and #MobProgramming are pretty effective for #LegacyCode #refactoring! This is 1 of 10 things to know that will make you great at refactoring legacy code. https://buff.ly/33GCTzE;23/10/2019;"Linus Law: ""Given enough eyeballs, all bugs are shallow"". Mob and #pairprogramming help #refactoring #LegacyCode";20/10/17;I gave a coaching kata about #MikadoMethod at work this week. The more I use it, the more I found this technique powerful. #refactoring #TDD #CodingDojo https://buff.ly/2RHv0sp;29/1/19;I've prepared a #MikadoMethod #Refactoring #CodingDojo on top of @jbrains's trivia codebase. Feedbacks are great https://buff.ly/2RHv0sp https://buff.ly/2uy5QyA @Work_at_Murex;12/2/19;;;;;;;;;;;;;;
Forget unit tests, only fast tests matter;https://philippe.bourgau.net/forget-unit-tests/;25/02/2019;Can you continuously run your tests while coding and stay in the flow ? Forget #UnitTest, only fast tests matter.;27/09/2017;Good assertion messages make your tests faster ! ;7/3/18;Can you continuously run your tests while coding and stay in the flow ? It does not matter if they are #UnitTest, #IntegrationTests, #EndToEndTest... as long as they are fast enough! https://buff.ly/2SjTzHq;25/2/19;;;;;;;;;;;;;;;;;;
5 Remote energizer tips that will make your remote retrospectives rock;https://philippe.bourgau.net/5-remote-energizer-tips-that-will-make-your-remote-retrospectives-rock/;30/03/2020;The YELL #retrospective energizer : present yourself yelling ! Straightforward and #remote compliant.;24/05/2019;The YELL #retrospective #remote #energizer : just answer a question standing and shouting ! https://buff.ly/2wgzMTw;30/10/18;"Icebreaker questions like ""What was your first job?"" are great #remote #retrospective #energizers";9/5/18;Feeling gloomy as you start your remote meetings in these difficult times? Here are 5 (+1 in comments) Remote energizer tips. https://buff.ly/39fzVVb #RemoteWork;30/03/2020;;;;;;;;;;;;;;;;
eXtreme eXtreme Programming (2017);https://philippe.bourgau.net/extreme-extreme-programming-2017/;11/06/2019;Let's imagine what #ExtremeProgramming would look like if it was invented in 2017;15/09/2017;20 years later, #eXtremeProgramming is unfortunately still extreme for a lot of teams ! https;1/6/18;Are #erlang and #Elixir #Microservice ready? Is this an advantage if we are trying to #SpikeAndStabilize? https://buff.ly/2LMlspO #eXtremeProgramming;9/1/19;"2 years ago, I thought of what #XP would look like if it was re-invented. Things are slowly moving in this direction... ""eXtreme #eXtremeProgramming (2017)"" https://buff.ly/2LMlspO";11/6/2019;;;;;;;;;;;;;;;;
Throwing code away frequently;https://philippe.bourgau.net/throwing-code-away-frequently/;31/01/2020;Some teams successfully throw their code away frequently instead of doing #refactoring !;29/11/2017;"Could ""Throw away code frequently"" replace #tdd and #refactoring ?";5/11/17;"What's the point of using state of the art #software development practices for features you don't know if your users will use? Learn more about ""Throwing code away frequently""  https://buff.ly/2uKlPwB #tdd #refactoring #agile";31/1/20;;;;;;;;;;;;;;;;;;
How we used the improvement kata to gain 25% of productivity - Part 1;https://philippe.bourgau.net/how-we-used-the-improvement-kata-to-gain-25-percent-of-productivity-part-1/;25/03/2020;"If you feel that #continuousimprovement is broken and #retrospectives don't work anymore, try the #improvementkata. ""How we used the improvement kata to gain 25% of productivity"" https://buff.ly/2VrIiX4";22/05/2019;"#Retrospectives are great to pick all the low hanging improvements. The #improvementKata is for the rest. Read the full story of ""How we used the improvement kata to gain 25% of productivity"" https://buff.ly/2vA4yq9 #ContinuousImprovement #lean ";14/2/20;"Here is an old post explaining how we replaced the #retrospective meeting with the asynchronous #improvementKata. Hopefully, this can help #Scrummaster who now need to #RemoteWork ""How we used the improvement kata to gain 25% of productivity"" https://buff.ly/2x8hmVI";25/3/20;;;;;;;;;;;;;;;;;;
How we used the improvement kata to gain 25% of productivity - Part 2;https://philippe.bourgau.net/how-we-used-the-improvement-kata-to-gain-25-percent-of-productivity-part-2/;22/10/2019;If you feel lost when doing something for the first time. Push through !;29/06/2018;"Cheap #Retrospective trick: Keep Photos and Trello boards of Retrospectives as a log of your working agreements changes. Read the full story of ""How we used the #improvementKata to gain 25% of productivity"" https://buff.ly/2Bohj6U";22/10/19;;;;;;;;;;;;;;;;;;;;
How we used the improvement kata to gain 25% of productivity - Part 3;https://philippe.bourgau.net/how-we-used-the-improvement-kata-to-gain-25-percent-of-productivity-part-3/;23/09/2019;"#NoEstimates works! Read the full story in ""How we used the #improvementKata to gain 25% of productivity"" https://buff.ly/2RwqKHb #continuousImprovement";23/09/2019;#Gamification transforms nice developers into berserk testers ! https://buff.ly/2ONLuh6 #exploratoryTesting #SoftwareDevelopment #SoftwareTesting ;7/11/2018;"@jamesshore ""Don't measure #unitTest coverage"" #TDD yields around 90% #CodeCoverage anyway. I also have used #exploratoryTesting to improve the process. We used it as a measure of the process quality in an #ImprovementKata https://buff.ly/2Rs2p5f https://buff.ly/2RwqKHb";4/2/19;;;;;;;;;;;;;;;;;;
How we used the improvement kata to gain 25% of productivity - Part 4;https://philippe.bourgau.net/how-we-used-the-improvement-kata-to-gain-25-percent-of-productivity-part-4/;06/09/2019;"Saving time by not fixing bugs might not be a great idea! Learn more in ""How we used the #improvementKata to gain 25% of productivity"" https://buff.ly/2Lf1unl #zeroBugs #continuousImprovement #lean";06/09/2019;A hole in a test suite is a bug to fix;19/3/18;Saving time by not fixing #bugs is not a winning strategy https://buff.ly/2Lf1unl #zeroBugs #lean;14/12/2018;;;;;;;;;;;;;;;;;;
How we used the improvement kata to gain 25% of productivity - Part 5;https://philippe.bourgau.net/how-we-used-the-improvement-kata-to-gain-25-percent-of-productivity-part-5/;08/11/2019;"From Peopleware: "" #Quality is Free, but only for those willing to pay for it!"" We reached the same conclusion ""How we used the #improvementkata to gain 25% of productivity - Part 5"" https://buff.ly/2EZvz7O #LeanManagement #softwaredevelopment";15/03/2019;"The #improvementKata not only brings improvement it also teaches you why they work! Read our story in ""How we used the improvement kata to gain 25% of productivity"" https://buff.ly/33sdRVw #ContinuousImprovement #Lean #Agile";8/11/19;;;;;;;;;;;;;;;;;;;;
Lessons learned from running our first improvement kata;https://philippe.bourgau.net/lessons-learned-from-running-our-first-improvement-kata/;01/04/2019;"We can reduce meeting time by mixing #retrospective & #improvementKata. This is one of the ""Lessons learned from running our first improvement kata"" https://buff.ly/2UWiaDX #LeanManagement #Agile #Scrum";01/04/2019;What are we waiting to apply data science to the development process ?;5/6/18;;;;;;;;;;;;;;;;;;;;
How to run your first improvement kata;https://philippe.bourgau.net/how-to-run-your-first-improvement-kata/;23/04/2019;The improvement kata is 100% scientific, it uses data and deduction, not gut feeling and best practices;23/07/2018;"We can learn anything on our own by just doing it! This is one of our takeaways from ""How to run your first #improvementKata"" https://buff.ly/2IrmjgS #Lean #Learning";23/04/2019;;;;;;;;;;;;;;;;;;;;
What Rails teaches us about building platforms and frameworks;https://philippe.bourgau.net/what-rails-teaches-us-about-building-platforms-and-frameworks/;09/04/2019;Once you have paying customers, you've got money to fuel further work.;19/12/2017;Thanks to agile practices, the cheapest way to build a framework is to extract it from a specific app.;22/11/2017;"#Rails started as part of a successful commercial app, only later was it made ""generic"" and #opensource. ""What Rails teaches us about building platforms and frameworks"" https://buff.ly/2HYwzNk #Software #IncrementalDesign";9/4/19;;;;;;;;;;;;;;;;;;
Mobbing around the world for 48h ... who's in ?;https://philippe.bourgau.net/mobbing-around-the-world-for-48h-dot-dot-dot-whos-in/;05/03/2018;Mob programming reduces WIP and cycle time;24/11/2017;Stupid ideas that work become great ideas.;05/03/18;;;;;;;;;;;;;;;;;;;;
Are Software Developers Overworked or Undecided ?;https://philippe.bourgau.net/are-software-developers-overworked-or-undecided/;21/10/2019;"""Principles​ ​of​ ​Product​ ​Development​ ​Flow"" by @DReinertsen should be a mandatory read for anyone involved with writing #software  #lean #agile https://buff.ly/2I13nRS";05/10/2018;"@Godin_Quotes: ""You don't need more time, you just need to decide!"" The question is: Are #Software Developers Overworked or Undecided? https://buff.ly/2VTrb1T #lean";21/10/2019;Stop starting and start finishing;30/3/18;;;;;;;;;;;;;;;;;;
Sustainable productivity in eXtreme Programming;https://philippe.bourgau.net/sustainable-productivity-in-extreme-programming/;12/03/2019;"A simple #planningGame will give room for #slack. ""Sustainable productivity in #eXtremeProgramming"" https://buff.ly/2Ca1l12 #SustainablePace #Scrum";12/03/2019;With time and efforts, developers can become domain experts !;20/7/2018;;;;;;;;;;;;;;;;;;;;
Why and how to start a #ZeroBugs policy - part 1;https://philippe.bourgau.net/why-and-how-to-start-a-number-zerobugs-policy-part-1/;18/11/2019;Exploratory testing goes hand in hand with #ZeroBugs policy;04/09/2018;"Some #eXtremeProgramming teams reported bug rates as low as 1.5 per month! Learn ""Why and how to start a #ZeroBugs policy"" https://buff.ly/33ThFiE";18/11/19;If you liked my series about #zerobugs, here is another complementary article about the topic https://buff.ly/2E7X7aa;29/01/18;;;;;;;;;;;;;;;;;;
Why and how to start a #ZeroBugs policy - part 2;https://philippe.bourgau.net/why-and-how-to-start-a-number-zerobugs-policy-part-2/;26/02/2019;#ZeroBugs policy makes developers happier;26/02/2019;#ZeroBugs policy reduces technical debt;16/5/18;;;;;;;;;;;;;;;;;;;;
Why and how to start a #ZeroBugs policy - part 3;https://philippe.bourgau.net/why-and-how-to-start-a-number-zerobugs-policy-part-3/;20/04/2020;"""Agreeing on rules for categorizing bugs with users streamlines flow"". Read more in ""Why and how to start a #ZeroBugs policy"" https://buff.ly/2JbeJ9D #softwaredevelopment ";10/05/2019;"#ExploratoryTesting gives you a quantifiable measure of your workflow. Read how we used it to reach a #ZeroBugs policy https://bit.ly/3anSpDE
";20/4/20;;;;;;;;;;;;;;;;;;;;
Why and how to start a #ZeroBugs policy - part 4;https://philippe.bourgau.net/why-and-how-to-start-a-number-zerobugs-policy-part-4/;28/06/2019;#ZeroBugs policy makes work more sustainable;02/04/2018;"Change agent's advice # 1 : be nice with people #changeManagement. Full story in ""Why and how to start a #ZeroBugs policy"" https://buff.ly/2Tk9kyE";28/6/19;#ZeroBugs policy makes #developers happy by losing less time and spending more time doing valuable stuff https://buff.ly/2Tk9kyE;7/1/19;;;;;;;;;;;;;;;;;;
Why Agile transformations usually don't work - part 1 - The situation;https://philippe.bourgau.net/why-agile-transformations-usually-dont-work-part-1-the-situation/;15/10/2019;#Agile can easily slip into micro-management... Unfortunately, Agile transformations usually don’t work! Read why here https://buff.ly/2Oz2N4b;15/10/2019;Competitors managed to copy Toyota's practices, but not their results !;28/1/19;;;;;;;;;;;;;;;;;;;;
Why Agile transformations usually don't work - part 2 - The problem;https://philippe.bourgau.net/why-agile-transformations-usually-dont-work-part-2-the-problem/;18/06/2019;"People buy-in values, but they measure them through actions. Full story in ""Why #Agile transformations usually don’t work""  https://buff.ly/2X6ftEl #AgileTranformation";18/06/2019;Maria Montessori said “Never help a child with a task at which he feels he can succeed.” The same applies to teams of adults in an #agile transformation ... https://buff.ly/2vBwNED;28/9/18;;;;;;;;;;;;;;;;;;;;
Why Agile transformations usually don't work - part 3 - What to do;https://philippe.bourgau.net/why-agile-transformations-usually-dont-work-part-3-what-to-do/;04/06/2019;An organization cannot be agile if all decisions have to go up and down the management ladder.;10/09/2018;"Encouraging #experimentation while sticking to compensation by objectives is schizophrenic. Read more in ""Why #Agile transformations usually don’t work"" https://buff.ly/2MgKstd";4/6/19;;;;;;;;;;;;;;;;;;;;
Why Agile transformations usually don't work - part 4 - Transparency;https://philippe.bourgau.net/why-agile-transformations-usually-dont-work-part-4-transparency/;08/07/2019;OKRs have nothing to do with compensation !;12/02/2018;"#SelfOrganization cannot work without a clear and compelling mission. Read more about #Transparency in ""Why #Agile transformations usually don’t work - part 4"" https://buff.ly/2TqcHnJ";8/7/19;#OKRs are what #ManagementByObjectives was meant to be https://buff.ly/2TqcHnJ #agile #lean ;8/1/19;;;;;;;;;;;;;;;;;;
Reducing the risks of large organization changes with the Mikado Method - part 1;https://philippe.bourgau.net/reducing-the-risks-of-large-organization-changes-with-the-mikado-method-part-1/;15/11/2019;By never changing the code, programmers make it even harder to change;20/04/2018;Large scale #Agile transformations are too often stressful for everyone ...  It turns out we can reduce the risks of large organization changes with the #MikadoMethod https://buff.ly/2Oi2clJ #lean #ImprovementKata;15/11/19;;;;;;;;;;;;;;;;;;;;
Reducing the risks of large organization changes with the Mikado Method - part 2;https://philippe.bourgau.net/reducing-the-risks-of-large-organization-changes-with-the-mikado-method-part-2/;08/04/2019;Developers can pause a Mikado Method refactoring for a while if needed.;26/06/2018;"The #MikadoMethod and the #ImprovementKata are more than similar. They are both system change techniques. Read more in ""Reducing the risks of large organization changes with the Mikado Method"" https://buff.ly/2OOz19w #Systems ";8/4/19;;;;;;;;;;;;;;;;;;;;
Reducing the risks of large organization changes with the Mikado Method - part 3;https://philippe.bourgau.net/reducing-the-risks-of-large-organization-changes-with-the-mikado-method-part-3/;16/10/2018;"Transforming large organization with the Mikado Method shows a ""right to fail"" mindset.";10/04/2018;Transforming large organization with the Mikado Method helps to parallelize work.;16/10/18;;;;;;;;;;;;;;;;;;;;
Why you should start a team coding dojo Randori right now;https://philippe.bourgau.net/why-you-should-start-a-team-coding-dojo-randori-right-now/;20/02/2020;Team Coding Dojo Randori are great at defining coding conventions.;16/07/2018;"#CodingDojo Randoris are a great lesson in #EgolessProgramming. Read ""Why you should start a team coding dojo Randori right now"" https://buff.ly/2FanQVK #unitTesting #TDD #MobProgramming";18/3/19;"I'm currently writing a post about how to define #codingStandards and conventions. Meanwhile, you can read ""Why you should start a team #codingDojo Randori right now"" and start defining yours right now! https://buff.ly/38EPeay";20/2/20;;;;;;;;;;;;;;;;;;
How to start a team coding dojo Randori today;https://philippe.bourgau.net/how-to-start-a-team-coding-dojo-randori-today/;03/06/2019;"As a first team Randori #codingdojo problem, I like Roman Numerals kata. Wondering ""How to start a team coding dojo Randori today"" https://buff.ly/2EI1MRD #TDD";03/06/2019;Team Randori coding dojo demonstrates agile principles in practice (focus on outcome, incremental delivery, YAGNI ...);11/9/18;;;;;;;;;;;;;;;;;;;;
Coding Dojo Troubleshooting;https://philippe.bourgau.net/coding-dojo-troubleshooting/;09/12/2019;"If you cannot get people to adopt a new practice, get them to try it once. You'll be more than halfway there. Read more tricks in ""Coding Dojo Troubleshooting"" #CodingDojo #ChangeManagement https://buff.ly/2rjoXOu";09/12/2019;"Reframe the #CodingDojo as a learning exercise relying on #TDD to go beyond skepticism. Find more tricks in ""Coding Dojo Troubleshooting"" https://buff.ly/2P0YHjD #IncrementalDesign #Refactoring";16/4/19;;;;;;;;;;;;;;;;;;;;
How to get the max out of your Team Coding Dojo ?;https://philippe.bourgau.net/how-to-get-the-max-out-of-your-team-coding-dojo/;17/05/2019;"Be a champion of #EgolessProgramming in #CodingDojo to bring this practice in your team. Learn more tricks in ""How to get the max out of your Team Coding Dojo ?"" https://buff.ly/2YvF1I2";17/05/2019;"Linus' Law ""Given enough eyeballs, all bugs are shallow."" also applies in randori #CodingDojo or #MobProgramming https://buff.ly/2HPitdb";17/10/18;;;;;;;;;;;;;;;;;;;;
How to learn a programming languages in just 20 hours;https://philippe.bourgau.net/how-to-learn-a-programming-language-in-just-20-hours/;20/04/2020;"I learned a lot of Haskell by just going to #CodingDojos ! Learn how to learn a new programming language in 20 hours. https://bit.ly/2zg5guN
";20/04/2020;"Thanks to its short feedback loop, #TDD plays a key role in fast #learning. ""How to learn a #programming language in just 20 hours"" https://buff.ly/2KNUS2R #DeliberatePractice";22/4/19;;;;;;;;;;;;;;;;;;;;
Why 20 hours of code kata are so effective for learning new languages;https://philippe.bourgau.net/why-20-hours-of-code-kata-are-so-effective-for-learning-new-languages/;17/06/2019;Time-boxing creates focus;17/06/2019;The more you know about software, the easier it will be to learn your next #programming language https://buff.ly/2IexIAW #DeliberatePractice #CodingDojo;21/11/2018;;;;;;;;;;;;;;;;;;;;
Frequently asked questions about the 20 hours of Code Katas;https://philippe.bourgau.net/frequently-asked-questions-about-the-20-hours-of-code-katas/;13/05/2019;The #CodingDojo was invented to teach and spread #TDD https://buff.ly/2waGp9T;22/10/2018;"For efficient learning, find a way to do #DeliberatePractice within a fast feedback loop. More tricks in ""Frequently asked questions about the 20 hours of Code Katas"" https://buff.ly/2H9Eu8H #Software #tdd ";13/5/19;;;;;;;;;;;;;;;;;;;;
Careless Mocking Considered Harmful;https://philippe.bourgau.net/careless-mocking-considered-harmful/;13/09/2019;"Mock hell : when excessive use of test mocks makes #refactoring extremely slow or difficult. Learn more in ""Careless #Mocking Considered Harmful"" https://buff.ly/2TZly0Y #testing #tdd";13/09/2019;Excessive use of #mocks leads to #LegacyCode https://buff.ly/2TZly0Y #UnitTesting #tdd ;30/11/2018;It looks like I'm not the only one who did the trip from heavy #mocking to almost no mocking at all! This path leads to super fast, maintainable and high coverage tests. https://buff.ly/1mwAf5Q https://buff.ly/2TZly0Y #TDD #UnitTesting;13/12/2018;;;;;;;;;;;;;;;;;;
How Immutable Value Objects fight Mocks;https://philippe.bourgau.net/how-immutable-value-objects-fight-mocks/;14/10/2019;Intricate #test state initialization is what encourage people to use #mocks. https://buff.ly/2QGwClC #unitTesting;1/1/2019;"Mutable state and side effects make #unitTesting less effective. Read ""How Immutable Value Objects fight Mocks"" https://buff.ly/2nx7mRn";14/10/19;;;;;;;;;;;;;;;;;;;;
Immutable Value Objects vs Mocks : Fizz Buzz;https://philippe.bourgau.net/immutable-value-objects-vs-mocks-fizz-buzz/;18/02/2020;"#Immutable Value Objects simplify #testing in many ways. Let's explore ""Immutable Value Objects vs Mocks: Fizz Buzz"" #SoftwareTesting #Software https://buff.ly/39vZ0Mc";18/02/2020;"Why is it so hard to persuade other developers to use #immutable data structures ? Open question in ""Immutable #ValueObjects vs #Mocks : Fizz Buzz"" https://buff.ly/2FHLsQk #ddd #software #unitTesting";05/04/19;;;;;;;;;;;;;;;;;;;;
How to use Test Data Builders to avoid mocks and keep your tests clear;https://philippe.bourgau.net/how-to-use-test-data-builders-to-avoid-mocks-and-keep-your-tests-clear/;18/10/2019;"If you are not careful, messy test initialization code will trick you into using #mocks. Read more in ""How to use #TestDataBuilders to avoid mocks and keep your tests clear"" https://buff.ly/32rk1oj #unitTesting #tdd #mocking";18/10/19;By simplifying the creation of new tests with different data, Test Data Builders increase code coverage in the long term!;15/1/19;@ThomasCountz Essential & Relevant: A Unit Test Balancing Act https://buff.ly/2tr9J7P. Extreme #DRY #UnitTests hurts readability. #TestDataBuilders makes things even simpler than parametrized creation methods. Easy setup test also avoids excessive #mocking https://buff.ly/2TEG85A;4/3/2019;;;;;;;;;;;;;;;;;;
How Custom Assertion Matchers will keep mocks away;https://philippe.bourgau.net/how-custom-assertion-matchers-will-keep-mocks-away/;27/01/2020;"When many different mocks are in place to isolate an external dependency, we end up with zillions versions of the code! Learn how to ""Avoid mocks and test your core domain faster with #HexagonalArchitecture"" https://buff.ly/2GlOx9H #mocking #UnitTesting";27/01/2020;"Custom assertion matchers make #refactoring easier by factorizing test assertions. More in ""How Custom Assertion Matchers will keep #mocks away"" https://buff.ly/2s946hx #softwaretesting #tdd ";14/1/20;;;;;;;;;;;;;;;;;;;;
Avoid mocks and test your core domain faster with Hexagonal Architecture;https://philippe.bourgau.net/avoid-mocks-and-test-your-core-domain-faster-with-hexagonal-architecture/;24/02/2020;"When many different #mocks are in place to isolate an external dependency, we end up with 'n' versions of the code! Read more in ""Avoid mocks and test your core domain faster with #HexagonalArchitecture"" https://buff.ly/2P9PCGx #TDD #unitTesting";24/02/2020;By keeping your tests around your core domain fast, Hexagonal Architecture increases your competitive advantage.;23/1/19;;;;;;;;;;;;;;;;;;;;
Get rid of mocking maintenance with full fledged in-memory fakes;https://philippe.bourgau.net/get-rid-of-mocking-maintenance-with-full-fledged-in-memory-fakes/;20/04/2020;Mocking is the unfortunate quick fix to slow tests. You can get rid of mocking maintenance with full fledged in-memory fakes. https://bit.ly/2yt3gPk #UnitTesting #Mocks #TDD;20/04/2020;Merciless mock hunting will improve the design of your system !;8/2/2019;;;;;;;;;;;;;;;;;;;;
When is testing using mocks still a good idea ?;https://philippe.bourgau.net/when-is-testing-using-mocks-still-a-good-idea/;20/09/2019;"By making #mocking so easy, mocking frameworks often do more harm than good. cf ""When is testing using mocks still a good idea ?"" https://buff.ly/2VGq9pq #UnitTesting #SoftwareTesting ";15/04/2019;When is testing using mocks still a good idea? Proxy mocks are as un-intrusive as mocks can be https://buff.ly/2m0Y4c6 #mocking #tdd #UnitTesting;20/9/2019;;;;;;;;;;;;;;;;;;;;
A coding dojo exercises plan towards refactoring legacy code;https://philippe.bourgau.net/a-coding-dojo-exercises-plan-towards-refactoring-legacy-code/;01/09/2019;"Test-Driven Development also teaches you what testable code looks like. See how we use it in ""A #codingDojo exercises plan towards #refactoring #legacyCode"" https://buff.ly/2BXmieU #tdd #unitTesting";01/09/2019;A mix of Coding Dojos in pairs and Mob Programming sessions is a good way to teach TDD in a Legacy Code context.;4/1/19;;;;;;;;;;;;;;;;;;;;
How to avoid unnecessary meetings (a takeaway from Devoxx France 2018);https://philippe.bourgau.net/how-to-avoid-unnecessary-meetings-a-takeaway-from-devoxx-france-2018/;27/03/2020;Even if you don't work remotely, avoiding unnecessary meetings is always a great thing! Here's a recipe for asynchronous #decisionMaking. https://buff.ly/2D1x70Y @bdelacretaz #remote #meeting ;07/09/2019;#OpenSource asynchronous and #remotework #DecisionMaking using git pull requests is a perfect match for #ArchitectureDecisionRecords and #LivingDocumentation https://buff.ly/2D1x70Y;14/1/19;Wondering how to make decisions in #remoteWork without spending your life with a headset on? Have a look at this Takeaway from @DevoxxFR where @bdelacretaz explains how to make decision asynchronously https://buff.ly/39lZaoO;27/3/20;;;;;;;;;;;;;;;;;;
How to convince your business to sponsor a large scale refactoring;https://philippe.bourgau.net/how-to-convince-your-business-to-sponsor-a-large-scale-refactoring/;29/11/2019;"Is Diogenes syndrome for source code a recognized pathology? Let's see ""How to convince your business of sponsoring a large scale #refactoring"" #LegacyCode #CleanCode https://buff.ly/34rfbrX";29/11/2019;"How to convince your business to sponsor a large scale #refactoring? Stating @DocOnDev ""We should never ask the permission to do a good job"" https://buff.ly/2YkW3cK Read more: https://buff.ly/2U3ybef";27/3/19;;;;;;;;;;;;;;;;;;;;
Why we need Badass developers to perform large scale refactorings;https://philippe.bourgau.net/why-we-need-badass-developers-to-perform-large-scale-refactorings/;06/12/2019;"Badass developers are first of all people who are credible to the business. This is ""Why we need Badass developers to perform large scale #refactorings"" https://buff.ly/388aYMc #LegacyCode";06/12/2019;On my first job, I tried to make the point for TDD with by giving a good live coding demo. But it was this respected developer's opinion that won the point.;6/3/2019;;;;;;;;;;;;;;;;;;;;
5 mistakes badass developers never do;https://philippe.bourgau.net/5-mistakes-badass-developers-never-do/;13/01/2020;"A badass developer will not add a funky new tech in the production code. This is one of ""5 mistakes #badassdevelopers never do"" https://philippe.bourgau.net/5-mistakes-badass-developers-never-do/ #SoftwareDeveloper ";13/01/2020;"At @DDDesignFR @ericevans0 said ""Some of my biggest mistakes were not backtracking soon enough a few times as I was drifting in quagmire"". Find other advices in ""5 mistakes #BadassDeveloper never do"" https://buff.ly/2V6kf3I";19/4/2019;;;;;;;;;;;;;;;;;;;;
Principles that will make you become a badass developer;https://philippe.bourgau.net/principles-that-will-make-you-become-a-badass-developer/;16/09/2019;"Candor is a way to get our opinions and questions through, without sounding rude or pushy. More tactics in ""Principles that will make you become a #badassDeveloper"" https://buff.ly/32zeziF #refactoring #SoftwareEngineer ";16/09/2019;In the end, #BadassDevelopers are ready to leave a FUBARed situation https://buff.ly/2zS6TyG;25/9/18;;;;;;;;;;;;;;;;;;;;
Incremental Software Development for Large Scale Refactorings;https://philippe.bourgau.net/incremental-software-development-techniques-for-large-scale-refactorings/;24/01/2020;"Incremental #software development fixes the business people's fear of #refactoring tunnel. Read more in ""Incremental Software Development for Large Scale Refactorings"" https://buff.ly/2Gkll2I";24/01/2020;"Mastering incremental #softwareDevelopment builds self-confidence for developers. Read more in ""Incremental Software Development for Large Scale #Refactorings""  https://buff.ly/2UAljxu #eXtremeProgramming";12/4/2019;;;;;;;;;;;;;;;;;;;;
Incremental Software Development Strategies for Large Scale Refactoring #1 : Constant Merciless Refactoring;https://philippe.bourgau.net/incremental-software-development-strategies-for-large-scale-refactoring-number-1-constant-merciless-refactoring/;11/10/2019;"The easiest #refactorings to negotiate are the ones we don't have to talk about ! ""Incremental #Software Development Strategies for Large Scale Refactoring #1 : Constant #MercilessRefactoring"" https://buff.ly/2Up6NEx #eXtremeProgramming #IncrementalDesign";13/03/2019;"""Disguise"" #refactoring as the first technical sub-task of a feature to get it prioritized. https://buff.ly/32cWWWp #softwaredevelopment ";11/10/2019;;;;;;;;;;;;;;;;;;;;
Incremental Software Development Strategies for Large Scale Refactoring #2 : Baby Steps;https://philippe.bourgau.net/incremental-software-development-strategies-for-large-scale-refactoring-number-2-baby-steps/;03/04/2019;TDD has a baby steps rythm baked in.;19/09/2018;"The #MikadoMethod is at the heart of making baby steps work in real life ""Incremental #SoftwareDevelopment Strategies for Large Scale #Refactoring part 2 : Baby Steps"" https://buff.ly/2FH7nsq";3/4/2019;;;;;;;;;;;;;;;;;;;;
Incremental Software Development Strategies for Large Scale Refactoring #3 : Organize it !;https://philippe.bourgau.net/incremental-software-development-strategies-for-large-scale-refactoring-number-3-manage-it/;10/01/2020;"A key benefit of mikado graphs is that we can stick them on the wall for everyone to know where we stand in a #refactoring. ""Incremental Software Development Strategies for Large Scale Refactoring #3 : Manage it !"" https://buff.ly/2PydpOS #MikadoMethod #VisualManagement ";19/03/2019;"Keeping a #WorkInProgress limit on #refactorings is essential. Read more tips to self-organize around team refactoring efforts in ""Incremental Software Development Strategies for Large Scale Refactoring"" https://buff.ly/2tHrHWS #softwaredevelopment #SoftwareCraftsmanship";10/1/2020;;;;;;;;;;;;;;;;;;;;
Incremental Software Development Strategies for Large Scale Refactoring #4 : a Pattern Language;https://philippe.bourgau.net/incremental-software-development-strategies-for-large-scale-refactoring-number-4-a-pattern-language/;15/05/2019;"Incremental #refactoring is not only about baby steps, it's also about early value delivery ! ""Incremental Software Development Strategies for Large Scale Refactoring part 4 : a #Pattern Language"" https://buff.ly/2PR5lt9 #Software #XP";15/05/2019;Feature toggles are painful, but branches are worse ! https://buff.ly/2wqqphm #refactoring #patterns ;8/11/2018;;;;;;;;;;;;;;;;;;;;
Presenting a large scale refactoring as a business opportunity;https://philippe.bourgau.net/presenting-a-large-scale-refactoring-as-a-business-opportunity/;20/05/2019;Mastering pitch is a great first step for developers who want to get sponsorship for a #refactoring. https://buff.ly/2MOuxCa #Pitch #Software ;24/10/2018;"In many cases, an expectation of less bugs and more features is what gets a #refactoring prioritized. ""Presenting a large scale refactoring as a business opportunity""  https://buff.ly/2JoKooM";20/5/2019;;;;;;;;;;;;;;;;;;;;
5 Effective warning signals to get sponsorship for a large scale refactoring;https://philippe.bourgau.net/effective-warning-signals-to-get-sponsorship-for-a-large-scale-refactoring/;20/11/2018;A disease might be a better metaphor than #TechnicalDebt for #CodeCruft. https://buff.ly/2NbGUIM;20/11/2018;The Therac-25 (a radiation therapy machine) killed 6 people because it was difficult to perform automated tests !;;;;;;;;;;;;;;;;;;;;;
Making the business case for a large scale refactoring - Part 1;https://philippe.bourgau.net/making-the-business-case-for-a-large-scale-refactoring-part-1/;14/06/2019;"We must detail precisely what #refactoring we want before making a #businessCase for it. Read more in ""Making the business case for a large scale refactoring"" https://buff.ly/2MKpy64 #LegacyCode";14/06/2019;The cost of not doing a #refactoring is the sum of all the waste work generated by the current code. https://buff.ly/2QKvWIm #BusinessCase #TechnicalDebt #programming ;28/11/18;;;;;;;;;;;;;;;;;;;;
Making the business case for a large scale refactoring - Part 2;https://philippe.bourgau.net/become-a-business-partner-and-stop-begging-for-refactoring/;09/07/2019;The longer the life expectancy of your product, the more #refactoring you should invest in! https://buff.ly/2QvPcg0 #programming #software #TechnicalDebt;19/12/2018;Avoiding bad moves is a key benefit of making a business case for large scale refactoring!;9/7/2019;;;;;;;;;;;;;;;;;;;;
Become a Business Partner and Stop Begging for Refactoring;https://philippe.bourgau.net/become-a-business-partner-and-stop-begging-for-refactoring/;10/09/2019;Decentralized decision rules are agreed once, but used many times, without involving management. https://buff.ly/2AQPaVw #lpd2 #SelfOrganization;13/12/2018;"Becoming a business partners lets developers have a permanent #refactoring bandwidth.""Become a Business Partner and Stop Begging for Refactoring""  https://buff.ly/2AQPaVw #BDD";10/9/2019;;;;;;;;;;;;;;;;;;;;
How to maintain a business partnership about refactoring?;https://philippe.bourgau.net/how-to-maintain-a-business-partnership-about-refactoring/;24/09/2019;Timeboxing #refactoring with 'x team members full time' is a lot easier to do than with typical time constraints. https://buff.ly/2CpqJ3j #Software ;02/01/2019;"Use data to spot the best #refactoring to work on. That's one of the things to do to ""Maintain a business partnership about refactoring?"" https://buff.ly/2CpqJ3j";24/9/2019;;;;;;;;;;;;;;;;;;;;
The unexpected contributions to a productivity increase by 25% of a fruit basket at work;https://philippe.bourgau.net/how-we-increased-productivity-by-25-with-a-fruit-basket-at-work/;04/09/2019;Read about an unexpected 25% productivity boost for 30 minutes of weekly fruit management! A story about #complexity in the modern workplace. https://buff.ly/2TDhZfW;04/09/2019;In a complex world, nothing is straightforward. Things only appear to make sense after the fact.;16/1/19;;;;;;;;;;;;;;;;;;;;
The best 10 seconds I spent on my Kanban board setup;https://philippe.bourgau.net/its-time-to-flip-your-kanban-board-setup/;30/09/2019;What's the first thing I see when I open my kanban board: TODO items! Time to flip the board;18/01/2019;"Inverting #Kanban board columns contributes to a more #sustainablePace! Read about ""The best 10 seconds I spent on my Kanban board setup"" https://buff.ly/2Fvxp2J";30/09/2019;;;;;;;;;;;;;;;;;;;;
Vertical Kanban Board Setups;https://philippe.bourgau.net/vertical-kanban-board-setup/;08/09/2019;We need to adapt Kanban boards according to people's cultures.;30/01/2019;"#Kanban boards: Could we replace these sad, sterile and mechanic #process tools with something more humane? Let's try ""Vertical Kanban Board Setups"" https://buff.ly/2RJHIql #scrum ";8/9/2019;;;;;;;;;;;;;;;;;;;;
Misadventures with Big Design Up Front;https://philippe.bourgau.net/misadventures-with-big-design-up-front/;05/11/2019;At school, we were tought to write all pseudo code on paper before touching the keyboard at all!;05/02/2019;"Very often, people eventually capitulate to a design to end the painful #BigDesignUpFront process! Read more ""Misadventures with #BDUF"" here, and discover an alternative way! https://buff.ly/36gU1OR #EventStorming #DDD";5/11/2019;;;;;;;;;;;;;;;;;;;;
How I learned to do Big Design Up Front in 2 days of Event Storming;https://philippe.bourgau.net/how-to-squash-big-design-up-front-in-a-few-days-with-event-storming/;13/11/2019;We cannot achieve a sustainable pace without incremental design!;13/02/2019;"Having a shared vision helps everyone in the team to know how to refactor the code at any moment. ""How I learned to do Big Design Up Front in 2 days of #EventStorming"" https://buff.ly/33qekr8 #refactoring #DDD";13/11/2019;;;;;;;;;;;;;;;;;;;;
How to prepare a DDD Big Picture Event Storming workshop;https://philippe.bourgau.net/how-to-prepare-a-ddd-big-picture-event-storming-workshop/;19/11/2019;"Alexander Graham Bell could have thought of DDD Event Storming when he said ""Before anything, preparation is the key to success.""";20/02/2019;"Once everyone knows enough about the problem domain, they work better together. Learn ""How to prepare a #DDD Big Picture #EventStorming workshop"" https://buff.ly/341jaew #CollectiveIntelligence";19/11/2019;;;;;;;;;;;;;;;;;;;;
How to prepare the room for a DDD Big Picture Event Storming;https://philippe.bourgau.net/how-to-prepare-the-room-for-a-ddd-big-picture-event-storming/;03/12/2019;A Visual Agenda will reassure first time attendees of DDD Event Storming, which can be a rather chaotic workshop.;05/03/2019;"I beg you to bring food to avoid #DeathByEventStorming #EventStorming. Read more down-to-earth tips in ""How to prepare the room for a #DDD Big Picture Event Storming"" https://buff.ly/2QXBlOJ";3/12/2019;;;;;;;;;;;;;;;;;;;;
Detailed Agenda of a DDD Big Picture Event Storming - Part 1;https://philippe.bourgau.net/detailed-agenda-of-a-ddd-big-picture-event-storming-part-1/;21/01/2020;"At the end of the day, the success of an #EventStorming is all about how much participants want it! Learn how to run your own session in ""Detailed Agenda of a #DDD Big Picture Event Storming"" https://buff.ly/2PQaGiK #softwaredevelopment ";17/09/2019;"I've seen #EventStorming sessions drifting into technical discussions, this leads nowhere. Learn more about ""Detailed Agenda of a #DDD Big Picture Event Storming"" https://buff.ly/2FYytud";21/01/2020;@Boldarecom Just read your #EventStorming guide https://buff.ly/2H6p8SQ. I like your idea to ask to read @ziobrando introductory post. Instead of introducing commands, I ask people to sort the events to get them to discuss and collaborate. Full story here https://buff.ly/2PQaGiK;01/03/2019;;;;;;;;;;;;;;;;;;
Detailed Agenda of a DDD Big Picture Event Storming - Part 2;https://philippe.bourgau.net/detailed-agenda-of-a-ddd-big-picture-event-storming-part-2/;10/12/2019;"@ziobrando 's trick: ignite the #EventStorming by sticking a prepared domain event on the design board. Here is my ""Detailed Agenda of a #DDD Big Picture Event Storming"" https://buff.ly/2OQqODD";10/12/2019;"#EventStorming does its magic when people try to sort all their domain events. ""Detailed Agenda of a #DDD Big Picture Event Storming - Part 2"" https://buff.ly/2XX7iI7";20/3/2019;;;;;;;;;;;;;;;;;;;;
Detailed Agenda of a DDD Big Picture Event Storming - Part 3;https://philippe.bourgau.net/detailed-agenda-of-a-ddd-big-picture-event-storming-part-3/;28/01/2020;"By far the biggest outcome of #DDD Big Picture #EventStorming is a better shared understanding of the domain. Learn more in ""Detailed Agenda of a DDD Big Picture Event Storming"" https://buff.ly/2VGYrcg #Software #SoftwareArchitecture";10/04/2019;"#EventStorming unlocks drafting an architecture, drawing teams, and a sustainable #refactoring path. Have a look at ""Detailed Agenda of a #DDD Big Picture Event Storming "" https://buff.ly/2U3hHCH";28/01/2020;;;;;;;;;;;;;;;;;;;;
4 tips that will make your DDD Big Picture Event Storming successful;https://philippe.bourgau.net/4-tips-that-will-make-your-ddd-big-picture-event-storming-successful/;04/02/2020;"I found that a double #pomodoro is the most productive and sustainable time schedule for a #DDD #EventStorming. This is 1 of ""4 tips that will make your DDD Big Picture Event Storming successful"" https://buff.ly/2Dgoz6J";17/04/2019;"If you don't have real domain experts, assign business roles for #DDD #EventStorming. This is one of ""4 tips that will make your DDD Big Picture Event Storming successful"" https://buff.ly/3b7I7t0 #SoftwareEngineering ";04/02/2020;For legacy refactoring, run DDD Event Storming as if you were starting from scratch;;;;;;;;;;;;;;;;;;;
Drafting a Functional Architecture Vision with Event Storming and DDD;https://philippe.bourgau.net/drafting-a-functional-architecture-vision-with-ddd-event-storming-part-1/;06/02/2020;"#BoundedContexts are the most important part of #DDD. Maintaining a strong decoupling between different functional areas makes #largeSystems more simple. Learn more in ""Drafting a Functional #Architecture Vision with #EventStorming and DDD"" https://buff.ly/2RaV61A";24/04/2019;Wool, scissors and adhesive tape is all you need to draw functional areas on an DDD Event Storming design board.;06/02/2020;;;;;;;;;;;;;;;;;;;;
Build or Buy Software? Identify your core functional areas with Event Storming and DDD;https://philippe.bourgau.net/build-or-buy-software-identify-your-core-functional-areas-with-event-storming-and-ddd/;25/02/2020;"#EventStorming and #DDD can help us to identify where to focus. More in ""Build or Buy? Identify your core #boundedContexts with Event Storming and DDD"" https://buff.ly/2HJjqZ5";01/05/2019;"Use #EventStorming and #DDD to identify generic parts of your system. Then save time by replacing them with third parties. ""Build or Buy Software? Identify your core bounded contexts with Event Storming and DDD"" https://buff.ly/3bUja4E";25/02/2020;;;;;;;;;;;;;;;;;;;;
Check that core areas have the upper hand with Event Storming and DDD;https://philippe.bourgau.net/check-that-core-areas-have-the-upper-hand-with-event-storming-and-ddd/;14/05/2019;Upstream bounded contexts enjoy more focus, prioritization, quality and investment... at the cost of other contexts.;;"Moving to an upstream team might be the quickest way to find a more #sustainablepace! Learn more about upstream #boundedcontext in ""Ensure core contexts have the upper hand with #EventStorming and #DDD"" https://buff.ly/2I5tj3I";14/5/2019;;;;;;;;;;;;;;;;;;;;
Focus on Core Domain with Relationships from DDD and Event Storming - part 1;https://philippe.bourgau.net/focus-on-core-domain-with-relationships-from-ddd-and-event-storming/;21/05/2019;"Focusing on #coredomain is the key to long term profitable and #sustainablepace. ""Focus on the Core with #EventStorming and #DDD Domain Relationships"" https://buff.ly/2N44ofC";21/05/2019;DDD can seem too abstract, use Event Storming to present it with storytelling.;;;;;;;;;;;;;;;;;;;;;
Focus on Core Domain with Relationships from DDD and Event Storming - part 2;https://philippe.bourgau.net/focus-on-core-domain-with-relationships-from-ddd-and-event-storming-part-2/;28/05/2019;DDD is like the fight club. Don’t speak of DDD.;;"#ContextMapping with #DDD and #EventStorming helps to avoid a tangle of #mocks. ""Focus on the Core with Event Storming and DDD Domain Relationships"" https://buff.ly/2Sdqkpn";28/5/2019;;;;;;;;;;;;;;;;;;;;
How to use Event Storming and DDD for evolutionary architecture;https://philippe.bourgau.net/how-to-use-event-storming-and-ddd-for-evolutionary-architecture/;05/06/2019;The trick is to make things as simple as possible at the beginning while keeping the ability to refactor.;;"By documenting past decisions, #LivingDocumentation let us change the system later down the road. ""How to use #EventStorming and #DDD for Evolutionary #Architecture"" https://buff.ly/2NzDuwf";5/6/2019;;;;;;;;;;;;;;;;;;;;
Using Event Storming and DDD to prototype (micro)services and NFRs - 1;https://philippe.bourgau.net/using-event-storming-and-ddd-to-prototype-microservices-and-nfrs-1/;20/04/2020;"Late discoveries of #NFR problems leads to crunch hours and non #sustainablePace. Read about ""Using #EventStorming and #DDD to prototype #microservices and NFRs"" https://buff.ly/2NNO5nj";12/06/2019;Use wool, scissors and scotch tape to materialize services on your #EventStorming board. https://bit.ly/2Klzizz #MicroServices;20/04/2020;;;;;;;;;;;;;;;;;;;;
Using Event Storming and DDD to prototype (micro)services and NFRs - 2;https://philippe.bourgau.net/using-event-storming-and-ddd-to-prototype-microservices-and-nfrs-2/;19/06/2019;Traditional architecture discussions typically span over months. In comparison, Event Storming is a short, but focused, time investment.;;"Start a #codingDojo to transform #EventStorming and #DDD into #evolutionaryArchitecture and #emergentDesign. More details in ""Using Event Storming and DDD to prototype #microServices and NFRs"" https://buff.ly/2O5s0AN";19/06/2019;;;;;;;;;;;;;;;;;;;;
Rewrite vs Refactor? Get insights with Event Storming and DDD;https://philippe.bourgau.net/rewrite-vs-refactor-get-insights-from-event-storming-and-ddd/;26/06/2019;"Full, drop-in, bing-bang #rewrite is often a poor strategy. It's very risky, late, and non-sustainable for the people. ""Rewrite vs Refactor? Get Insights from #EventStorming and #DDD"" #Refactoring https://buff.ly/2Fmsxe1";26/06/2019;Refactor vs Rewrite? The best strategy is usually an hybrid between both.;;;;;;;;;;;;;;;;;;;;;
Feature Teams vs Component Teams? Decide with Event Storming and DDD;https://philippe.bourgau.net/feature-teams-vs-component-teams-decide-with-event-storming-and-ddd/;05/07/2019;"#EventStorming helps people to dynamically #selforganize into teams. More details in "" #FeatureTeams vs #ComponentTeams? Decide with Event Storming and #DDD"" https://buff.ly/2OuVmZI";05/07/2019;Together, Event Storming and Conway's Law help long term refactoring.;;;;;;;;;;;;;;;;;;;;;
How to max out DDD Big Picture Event Storming with other workshops;https://philippe.bourgau.net/how-to-max-out-ddd-big-picture-event-storming-with-other-workshops/;10/07/2019;Event Storming creates the shared knowledge on which to build much more.;;"#EventStorming vs #StoryMapping? Do both! Learn ""How to max out #DDD Big Picture Event Storming with other Workshops"" https://buff.ly/2YszfHG";10/7/2019;;;;;;;;;;;;;;;;;;;;
"A serious game for learning ""built-in quality at the source""";https://philippe.bourgau.net/a-serious-game-for-learning-built-in-quality-at-the-source/;11/09/2019;"Stop boring people out with theory of queues. Play the built-in quality #seriousGame for learning why software best practices matter! Learn to play in ""A serious game for learning ‘built-in quality at the source’"" https://buff.ly/2Pb0cMh #BuiltInQuality #gamification #CleanCode";11/09/2019;Build-in quality at the source to enable a sustainable pace and continuous refactoring.;;;;;;;;;;;;;;;;;;;;;
You should refuse to develop what you don't understand;https://philippe.bourgau.net/you-should-refuse-to-develop-what-you-dont-understand/;18/09/2019;"We should refuse to start a development if we don't have a clear understanding of why we are requested to do it. More details in @jboccara's guest post ""You should refuse to develop what you don’t understand"" https://buff.ly/2Vdj1DE #badassDeveloper #SoftwareEngineer ";18/09/2019;Blocking coding a feature until we understand its implications can save time on another order of magnitude! @jboccara;;;;;;;;;;;;;;;;;;;;;
10 Pair Programming Questions & Answers;https://philippe.bourgau.net/10-pair-programming-questions-answers/;25/09/2019;"We were able to close the same number of story points before and after pairing. Learn more in ""10 #PairProgramming Best Practices Questions & Answers"" https://buff.ly/2IDJl49 @ahmadatwi #agile #extremeProgramming";25/09/2019;Keep an up-to-date shared TODO list of the story’s tasks when pairing @ahmadatwi;;;;;;;;;;;;;;;;;;;;;
How to use Event Storming to introduce Domain Driven Design;https://philippe.bourgau.net/how-to-use-event-storming-to-introduce-domain-driven-design/;02/09/2019;Its awkward vocabulary is one of the reasons why DDD is not more widly adapted;;"1st rule of #DDD: don't talk about DDD! Learn ""How to use #EventStorming to introduce Domain-Driven Design"", without naming it. https://buff.ly/2DYR9t8";2/9/2019;Use Functional Area instead of Bounded Context.;;Use Shared Vocabulary instead of Ubiquitous Language.;;Use radars and storytelling to introduce Bounded Context relationship patterns.;;;;;;;;;;;;;;;
Event Storming lessons from Post-It haters;https://philippe.bourgau.net/event-storming-lessons-from-post-it-haters/;09/09/2019;Thanks to post-its, Event Storming speeds up drafting an architecture from months to days !;;"Don't forget that #EventStorming relies on a cross-disciplinary team and incremental #architecture! Learn more in ""Event Storming lessons from Post-It haters"" https://buff.ly/2YDIt3B #DDD #DomainDrivenDesign #IncrementalArchitecture #EvolutionaryArchitecture #agile";9/9/2019;;;;;;;;;;;;;;;;;;;;
How to capture the outputs of an Event Storming workshop?;https://philippe.bourgau.net/how-to-capture-the-outputs-of-an-event-storming-workshop/;16/10/2019;Putting shared understanding as the main output of #EventStorming does not convince action-oriented people to join;;"Capturing filtered and single focus views of the #EventStorming board makes the information more digestible and persistent. ""How to Capture the Outputs of an Event Storming Workshop?"" https://buff.ly/2OG9X6y #DDD #SoftwareEngineering";16/10/2019;;;;;;;;;;;;;;;;;;;;
5 Views to Capture the Outputs of an Event Storming workshop;https://philippe.bourgau.net/5-views-to-capture-the-outputs-of-an-event-storming-workshop/;30/10/2019;"Do pattern matching on #EventStorming board to 'grep-out' focused views of takeaways of a session. More in ""5 Views to Capture the Outputs of an Event Storming workshop"" https://buff.ly/2ocT48S #DDD #DomainDrivenDesign";30/10/2019;Event Storming is a very effective way to build a DDD context map.;;;;;;;;;;;;;;;;;;;;;
The Similarities between Machine Learning and DDD;https://philippe.bourgau.net/the-similarities-between-machine-learning-and-ddd/;06/11/2019;"I'll start my next #machineLearning project by an #EventStorming workshop. Read how I discovered ""The Similarities between Machine Learning and #DDD"" https://buff.ly/2qRTVN9";06/11/2019;Like DDD, Machine Learning relies on understanding the domain.;;;;;;;;;;;;;;;;;;;;;
How we script everyone to code review in the team;https://philippe.bourgau.net/how-we-scripted-everyone-to-code-review-in-the-team/;20/11/2019;"There's surely a simple script you could write to smooth out the #codeReview process enough for it to stick! Read ""How we scripted everyone to code review in the team""  https://buff.ly/2CJvrZf #softwaredevelopment ";20/11/2019;Losing time in code reviews made the team switch to pair programming.;;;;;;;;;;;;;;;;;;;;;
7 Remote pair programming best practices Q&A - Part 1;https://philippe.bourgau.net/7-remote-pair-programming-best-practices-q-and-a-part-1/;24/03/2020;Remote or not, pair programming remains pair programming!;;"When #remote #pairProgramming, use time difference at your advantage for #deliberatepractice. Here are ""7 Remote pair programming best practices Q&A - Part 1"" https://buff.ly/2soY8c4";4/12/2019;"Throughout the years, I've written a few posts about #remoteWork. Here are ""7 Remote #pairProgramming best practices Q&A"". Hopefully, this can help developers who are thrown in #WFH. https://buff.ly/2QxLlNz";24/3/2020;;;;;;;;;;;;;;;;;;
7 Remote pair programming best practices Q&A - Part 2;https://philippe.bourgau.net/7-remote-pair-programming-best-practices-q-and-a-part-2/;11/12/2019;"A Do It Yourself culture helps a lot to get #remote #pairProgramming working. Learn more tricks in ""7 Remote pair programming best practices Q&A - Part 2"" https://buff.ly/2rfwzSf";11/12/2019;A time difference while remote pair programming is a perfect opportunity for learning and deliberate practice.;;Hack your headset!;;;;;;;;;;;;;;;;;;;
5 XP practices that will make your remote team more effective;https://philippe.bourgau.net/5-xp-practices-that-will-make-your-remote-team-more-effective/;31/03/2020;"Pulling the code regularly forces remote workers into social interactions. This is one of ""5 #XP practices that will make your remote team more effective"" https://philippe.bourgau.net/5-xp-practices-that-will-make-your-remote-team-more-effective/ #RemoteWork";15/01/2020;When Coding by Refactoring, tests are always passing;;Is TCR the future of remote teamwork?;;With pair programming, remote team members are never 'alone'.;;"Did you know that #eXtremeProgramming can actually help you for remote programming in this crisis? Read ""5 XP practices that will make your remote team more effective"" https://buff.ly/2xt7pT6 #remoteWork #XP";31/03/2020;;;;;;;;;;;;;;
How to use Mob Programming at the rescue of Pair Programming burnout;https://philippe.bourgau.net/how-to-use-mob-programming-at-the-rescue-of-pair-programming-burnout/;22/01/2020;Full-time pair programming burns introverts out!;;"#Remote #mobProgramming works surprisingly well! Let's see ""How to use Mob Programming at the rescue of #PairProgramming burnout"" https://buff.ly/2RkTSDe";22/01/2020;;;;;;;;;;;;;;;;;;;;
Is XP the middle child of Agile?;https://philippe.bourgau.net/is-xp-the-middle-child-of-agile/;29/01/2020;"If you are interested in #slowWork, you should definitely have a look at #eXtremeProgramming. Listen to my @AgileAtelier podcast ""Is #XP the middle child of #Agile?"" https://buff.ly/30NDuPU";29/01/2020;Event Storming builds on DDD which builds on eXtreme Programming to enable taking complex decisions;;;;;;;;;;;;;;;;;;;;;
7 Books About Data Driven Software Engineering;https://philippe.bourgau.net/5-books-about-data-driven-lean-software-development/;08/12/2017;Ever wondered how to mine your software project data ? These books are a good start;08/12/2017;Speed up the build? or add this new feature? These books might give you an insight!;;We need a Big O() notation for product backlog decisions!;;;;;;;;;;;;;;;;;;;
Too busy to prioritize?;https://philippe.bourgau.net/too-busy-to-prioritize/;05/02/2020;"Lack of prioritization triggers a vicious circle of bloated organizations, late deliveries, and a non-sustainable pace. Is your organization ""Too busy to prioritize?"" https://buff.ly/2RIOpHK #SustainablePace #ProductManagement #Agile #SoftwareEngineering ";05/02/2020;Stop prioritizing to grow bloated organizations and hierarchies!;;;;;;;;;;;;;;;;;;;;;
Scrum with component teams leads to waterfall Agile!;https://philippe.bourgau.net/scrum-with-component-teams-leads-to-waterfall-agile/;26/02/2020;#Scrum with #componentTeams pushes  organizations back in #Waterfall Agile, late deliveries and non-sustainable work. https://buff.ly/2SG707Q #infographic;26/02/2020;Big Picture Event Storming can help you to pick the right team organization;;Continuous improvement and coaching can get your teams to reorganize step by step;;;;;;;;;;;;;;;;;;;
How to play planning poker... badass mode!;https://philippe.bourgau.net/how-to-play-planning-poker-badass-mode/;20/04/2020;"Developers, don't forget who has the #storyPoint printing press!
https://bit.ly/2yfTwYQ #Agile #PlanningPoker";20/04/2020;If we need predictions, #NoEstimates and Lean management tools will work better that story points and planning game;;Keep story points inside the team, and you'll have a lot more control over technical debt and refactoring;;;;;;;;;;;;;;;;;;;
Does Programming equal Refactoring?;https://philippe.bourgau.net/does-programming-equal-refactoring/;21/09/2011;Make the change easy, then make the change. @KentBeck;;When all the team does continuous #refactoring, it creates a #sustainablePace, which dribbles down on all aspects of our lives.;;;;;;;;;;;;;;;;;;;;;
TO DO list or Mind Map for programming;https://philippe.bourgau.net/to-do-list-or-mind-map-for-programming/;06/04/2020;"""Dont' worry too much, it will work fine in the end..."" This tactic might work at school, but it is not going to work when programming!";;Maintaining a mind map of the work to do ensures everyone in the mob understands the why, what and how of the work. #mobprogramming;;Maintaining a TO DO list when programming improves collaboration, our decisions and our vision of what's left to do.;;An online mind map or TODO list while remote pair or mob programming can make you a lot more effective. Learn how;06/04/2020;;;;;;;;;;;;;;;;
Why Machine Learning in Software Engineering #1: A world of experts;https://philippe.bourgau.net/why-machine-learning-in-software-engineering-1-a-world-of-experts/;21/09/2011;Models are always wrong. But they get us out of retoric, gut feeling, biases and into fact-based discussions!;;Our 'best-practices' are only the result of the experience of some people!;;;;;;;;;;;;;;;;;;;;;
Why Machine Learning in Software Engineering #2: An experiment;https://philippe.bourgau.net/why-machine-learning-in-software-engineering-2-an-experiment/;21/09/2011;"""Given a commit and a list of slow running end to end tests, which tests are most likely to fail?"" Isn't that an interesting AI challenge?";;Analyzing test result confirmed that small commits pass the tests more often!;;Analyzing test result confirmed that writing modular code passes the tests more often!;;Analyzing test result confirmed that following the open/close principle passes the tests more often!;;;;;;;;;;;;;;;;;
Why Machine Learning in Software Engineering #3: The future;https://philippe.bourgau.net/why-machine-learning-in-software-engineering-3-the-future/;21/09/2011;Data science for software testing is becoming a hot topic;;A smart AI could record what happens on the IDE to provide working improvement ideas! Freeky or innevitable?;;;;;;;;;;;;;;;;;;;;;
Let's give remote-first open-space technology un-conference a try!;https://philippe.bourgau.net/lets-give-remote-first-open-space-technology-un-conference-a-try/;21/09/2011;The best way to go remote is to jump in completely and become remote-first;;Remote work is here to stay! It's time to be creative.;;;;;;;;;;;;;;;;;;;;;
How to run a Remote-First Open-Space Technology Un-Conference;https://philippe.bourgau.net/how-to-run-a-remote-first-open-space-technology-un-conference/;26/03/2020;Do you want to organize a remote un-conference, but don't know how to do? See how to organize a remote-first open-space technology un-conference.;;You already using open-space technology, and your organization is moving to remote work? See how to organize a remote-first open-space technology un-conference.;;You want to use open-space technology to transform your remote organization. See how to organize a remote-first open-space technology un-conference.;;Are you struggling to find the right format to make a remote meeting self-organized? See how to organize a remote-first open-space technology un-conference.;;"@Work_at_Murex, we started a #RemoteWork #CommunityOfPractice to quickly improve how we work during this crisis. We had tried Remote #OpenSpaceTechnology unconference before. Learn ""How to run a Remote-First Open-Space Technology Un-Conference""  https://buff.ly/3afWA5b";26/03/2020;;;;;;;;;;;;;;
Why should we use Design Level Event Storming for DDD?;https://philippe.bourgau.net/why-should-we-use-design-level-event-storming-for-ddd/;21/09/2011;Big Picture Event Storming was about exploring Strategic Design, Design Level Event Storming is about tactical design inside a domain.;;Developers who attend the workshop should be able to start coding right after a Design Level Event Storming.;;;;;;;;;;;;;;;;;;;;;
Detailed agenda for a DDD Design Level Event Storming - part 1;https://philippe.bourgau.net/detailed-agenda-for-a-ddd-design-level-event-storming-part-1/;21/09/2011;Design Level Event Storming can also be a recurring workshop on a jelled product team;;It's very natural to do a Design Level Event Storming after a Big Picture Event Storming;;Design Level Event Storming is also a good fit for a team that is already building a DDD and event-based system;;;;;;;;;;;;;;;;;;;
Detailed agenda for a DDD Design Level Event Storming - part 2;https://philippe.bourgau.net/detailed-agenda-for-a-ddd-design-level-event-storming-part-2/;21/09/2011;Design-Level Event Storming is the perfect workshop to discuss UX of domain events;;Discussing what Aggregates will do is the key moment of Design-Level Event Storming;;Finding good names for Aggregates is the last thing we do in a Design-Level Event Storming;;;;;;;;;;;;;;;;;;;
7 tactics that will make your DDD Design Level Event Storming pay-off;https://philippe.bourgau.net/7-tactics-that-will-make-your-ddd-design-level-event-storming-pay-off/;21/09/2011;Aggregates make it easy to draw subdomains.;;"You'll need even more infinite design space for Deesign-Level Event Storming ;-)";;The best way to get more feedback after a Design Level Event Storming is to give try to build the design!;;;;;;;;;;;;;;;;;;;
Sustain Collective Intelligence with Event Storming;https://philippe.bourgau.net/sustain-collective-intelligence-with-event-storming/;21/09/2011;Don't use Event Storming for up-front design!;;Regularly return to the Event Storming design board with more knowledge;;Event Storming builds collective intelligence, work as a mob to keep it alive!;;;;;;;;;;;;;;;;;;;
How to fight priority paralysis... with Event Storming and DDD;https://philippe.bourgau.net/how-to-fight-priority-paralysis-with-event-storming-and-ddd/;21/09/2011;"If you hear something like ""We just need to figure out how to cut the elephant""... Suggest an Event Storming!";;By getting people to know each other, Event Storming also improves collaboration *after* the workshop!;;Give Event Storming participants dot stickers to negotiate the scope of next target;;;;;;;;;;;;;;;;;;;
Organization refactoring: Event Storming and DDD injection - part 1;https://philippe.bourgau.net/organization-refactoring-event-storming-and-ddd-injection-part-1/;21/09/2011;Don't waste your chances with not enough preparation!;;Hijack a conversation with a domain expert into an example mapping.;;;;;;;;;;;;;;;;;;;;;
Organization refactoring: Event Storming and DDD injection - part 2;https://philippe.bourgau.net/organization-refactoring-event-storming-and-ddd-injection-part-2/;21/09/2011;Remember 1st rule of DDD: Don't speak of DDD. Wait for the good business challenge to suggest Event Storming.;;Event Storming is viral. Yesterday's attendees are tomorrow's organizers :-);;;;;;;;;;;;;;;;;;;;;
First rule of DDD is: let's not talk about DDD;https://philippe.bourgau.net/first-rule-of-ddd-is-lets-not-talk-about-ddd/;21/09/2011;Let's not talk about DDD, let's DO DDD instead;;Is facilitation a new aspect of the developer job?;;;;;;;;;;;;;;;;;;;;;
21 More Event Storming Tips - part 1 - Understanding and Rythm;https://philippe.bourgau.net/21-more-event-storming-tips-part-1-understanding-and-rhythm/;21/09/2011;<TODO any of the tips>;;;;;;;;;;;;;;;;;;;;;;;
21 More Event Storming Tips - part 2 - Facilitation and Existing Code;https://philippe.bourgau.net/21-more-event-storming-tips-part-2-facilitation-and-existing-code/;21/09/2011;<TODO any of the tips>;;;;;;;;;;;;;;;;;;;;;;;
21 More Event Storming Tips - part 3 - Anti and Meta Patterns;https://philippe.bourgau.net/21-more-event-storming-tips-part-3-anti-and-meta-patterns/;21/09/2011;<TODO any of the tips>;;;;;;;;;;;;;;;;;;;;;;;
Make Testing Legacy Code Viral: Mikado Method and Test Data Builders;https://philippe.bourgau.net/make-testing-legacy-code-viral-mikado-method-and-test-data-builders/;21/09/2011;In Legacy Code, spending 3 weeks to add a test when fixing the bug takes 1 hour is unjustifiable.;;Using mocks to speed up test data setup is an anti-pattern in legacy code too!;;In Legacy Code, whenever you fix a bug, start a mikado graph to add a test around it.;;In Legacy Code, whenever you fix a bug, start a mikado graph of test data builders to add a test around the bug.;;;;;;;;;;;;;;;;;
The story about how we do Agile Technical Coaching;https://philippe.bourgau.net/the-story-about-how-we-do-agile-technical-coaching/;19/02/2020;"Full time #PairProgramming within a team is slow but effective agile technical coaching. Read ""The story about how we do #AgileTechnicalCoaching"" https://buff.ly/38xDW8c #Agile #Craftsmanship #AgileCoaching";17/02/2020;"Katas + Mobs is a time-efficient agile technical coaching scheme. Here is ""The story about how we do #AgileTechnicalCoaching"" https://buff.ly/31XuAQn #Agile #Craftsmanship #AgileCoaching #MobProgramming #CodeKata #CodingDojo";19/02/2020;Mobbing teaches how to collaborate better;;Once developers get TDD and pairing, they get the agile mindset.;;Push-coaching is like inflicting help. Forcing teams to get coached is a silly strategy.;;We don't try to sell TDD but enforce it during the coaching. It provides the fast feedback loop required for deliberate practice.;;We've compiled our katas into a kata repo to let teams practice without a coach. We're hoping to take the time to open source this repo at some point.;;Asking for help is often seen as a weakness in our ego-driven industry…;;Let's grow developers' leadership by involving experts in kata preparation.;;;;;;;
3 good and bad ways to write team coding standards and conventions;https://philippe.bourgau.net/3-good-and-bad-ways-to-write-team-coding-standards-and-conventions/;21/09/2011;How mob programming will make you quickly write team coding standards;;Top mob programming benefit: agree on coding standards and conventions fast!;;Use coding conventions as a way to inject mob programming!;;"Learn how to use asynchronous #decisionmaking to agree on team #codingStandards when working remotely. Read more in ""3 Good and Bad Ways to Write Team Coding Standards and Conventions"" https://buff.ly/38Xv4I5 #remoteWork #WFH ";;Team Coding Standards Anti-Pattern: Brainstorming;;Team Coding Standards Best Practice: Asynchronous decision making;;Team Coding Standards Best Practice: Mob sessions;;Asynchronous Decision Making has Living Documentation built-in!;;As long as at least 1 person remembers the coding standard, it will stick in the mob!;;;;;;;
Best open source tools for remote pair programming;https://philippe.bourgau.net/best-open-source-tools-for-remote-pair-programming/;06/04/2020;Open-source alternatives for remote pair and mob programming are few but world-class!;;If your team is not using an IDE, or if you can be as effective without one, then TMux is the no-brainer solution for remote pair and mob programming;;You can set up a world-class remote pairing and mobbing solution in 5 minutes with a git pull-push loop.;06/04/2020;Wondering how to do remote pair or mob programming? Saros might be what you need. It's an open source collaborative code edition plugin for IntelliJ and Eclipse.;;If you cannot buy a tool for remote pair or mob programming, check these 3 world-class open-source alternatives.;06/04/2020;;;;;;;;;;;;;;