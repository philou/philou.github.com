Message,Post URL
"A key benefit of mikado graphs is that we can stick them on the wall for everyone to know where we stand in a #refactoring. ""Incremental Software Development Strategies for Large Scale Refactoring #3 : Manage it !"" https://bit.ly/2WkfLX2 #MikadoMethod #VisualManagement ",https://philippe.bourgau.net/incremental-software-development-strategies-for-large-scale-refactoring-number-3-manage-it/
"Keeping a #WorkInProgress limit on #refactorings is essential. Read more tips to self-organize around team refactoring efforts in ""Incremental Software Development Strategies for Large Scale Refactoring"" https://bit.ly/2WkfLX2 #softwaredevelopment #SoftwareCraftsmanship",https://philippe.bourgau.net/incremental-software-development-strategies-for-large-scale-refactoring-number-3-manage-it/
"Incremental #refactoring is not only about baby steps, it's also about early value delivery ! ""Incremental Software Development Strategies for Large Scale Refactoring part 4 : a #Pattern Language"" https://bit.ly/3bmidAs #Software #XP",https://philippe.bourgau.net/incremental-software-development-strategies-for-large-scale-refactoring-number-4-a-pattern-language/
"Feature toggles are painful, but branches are worse ! https://bit.ly/3bmidAs #refactoring #patterns ",https://philippe.bourgau.net/incremental-software-development-strategies-for-large-scale-refactoring-number-4-a-pattern-language/
Mastering pitch is a great first step for developers who want to get sponsorship for a #refactoring. https://bit.ly/3dDaj7c #Pitch #Software ,https://philippe.bourgau.net/presenting-a-large-scale-refactoring-as-a-business-opportunity/
"In many cases, an expectation of less bugs and more features is what gets a #refactoring prioritized. ""Presenting a large scale refactoring as a business opportunity""  https://bit.ly/3dDaj7c",https://philippe.bourgau.net/presenting-a-large-scale-refactoring-as-a-business-opportunity/
A disease might be a better metaphor than #TechnicalDebt for #CodeCruft. https://bit.ly/2xSs2IR,https://philippe.bourgau.net/effective-warning-signals-to-get-sponsorship-for-a-large-scale-refactoring/
The Therac-25 (a radiation therapy machine) killed 6 people because it was difficult to perform automated tests !,https://philippe.bourgau.net/effective-warning-signals-to-get-sponsorship-for-a-large-scale-refactoring/
"We must detail precisely what #refactoring we want before making a #businessCase for it. Read more in ""Making the business case for a large scale refactoring"" https://bit.ly/3cpjcRF #LegacyCode",https://philippe.bourgau.net/making-the-business-case-for-a-large-scale-refactoring-part-1/
The cost of not doing a #refactoring is the sum of all the waste work generated by the current code. https://bit.ly/3cpjcRF #BusinessCase #TechnicalDebt #programming ,https://philippe.bourgau.net/making-the-business-case-for-a-large-scale-refactoring-part-1/
"The longer the life expectancy of your product, the more #refactoring you should invest in! https://bit.ly/3ctIqPa #programming #software #TechnicalDebt",https://philippe.bourgau.net/become-a-business-partner-and-stop-begging-for-refactoring/
Avoiding bad moves is a key benefit of making a business case for large scale refactoring!,https://philippe.bourgau.net/become-a-business-partner-and-stop-begging-for-refactoring/
"Decentralized decision rules are agreed once, but used many times, without involving management. https://bit.ly/3ctIqPa #lpd2 #SelfOrganization",https://philippe.bourgau.net/become-a-business-partner-and-stop-begging-for-refactoring/
"Becoming a business partners lets developers have a permanent #refactoring bandwidth.""Become a Business Partner and Stop Begging for Refactoring""  https://bit.ly/3ctIqPa #BDD",https://philippe.bourgau.net/become-a-business-partner-and-stop-begging-for-refactoring/
Timeboxing #refactoring with 'x team members full time' is a lot easier to do than with typical time constraints. https://bit.ly/2zwqvZy #Software ,https://philippe.bourgau.net/how-to-maintain-a-business-partnership-about-refactoring/
"Use data to spot the best #refactoring to work on. That's one of the things to do to ""Maintain a business partnership about refactoring?"" https://bit.ly/2zwqvZy",https://philippe.bourgau.net/how-to-maintain-a-business-partnership-about-refactoring/
Read about an unexpected 25% productivity boost for 30 minutes of weekly fruit management! A story about #complexity in the modern workplace. https://bit.ly/3conWHs,https://philippe.bourgau.net/how-we-increased-productivity-by-25-with-a-fruit-basket-at-work/
"In a complex world, nothing is straightforward. Things only appear to make sense after the fact.",https://philippe.bourgau.net/how-we-increased-productivity-by-25-with-a-fruit-basket-at-work/
What's the first thing I see when I open my kanban board: TODO items! Time to flip the board,https://philippe.bourgau.net/its-time-to-flip-your-kanban-board-setup/
"Inverting #Kanban board columns contributes to a more #sustainablePace! Read about ""The best 10 seconds I spent on my Kanban board setup"" https://bit.ly/35PZH2g",https://philippe.bourgau.net/its-time-to-flip-your-kanban-board-setup/
We need to adapt Kanban boards according to people's cultures.,https://philippe.bourgau.net/vertical-kanban-board-setup/
"#Kanban boards: Could we replace these sad, sterile and mechanic #process tools with something more humane? Let's try ""Vertical Kanban Board Setups"" https://bit.ly/3fDyS62 #scrum ",https://philippe.bourgau.net/vertical-kanban-board-setup/
"At school, we were tought to write all pseudo code on paper before touching the keyboard at all!",https://philippe.bourgau.net/misadventures-with-big-design-up-front/
"Very often, people eventually capitulate to a design to end the painful #BigDesignUpFront process! Read more ""Misadventures with #BDUF"" here, and discover an alternative way! https://bit.ly/2zr8dIX #EventStorming #DDD",https://philippe.bourgau.net/misadventures-with-big-design-up-front/
We cannot achieve a sustainable pace without incremental design!,https://philippe.bourgau.net/how-to-squash-big-design-up-front-in-a-few-days-with-event-storming/
"Having a shared vision helps everyone in the team to know how to refactor the code at any moment. ""How I learned to do Big Design Up Front in 2 days of #EventStorming"" https://bit.ly/2WkfNhC #refactoring #DDD",https://philippe.bourgau.net/how-to-squash-big-design-up-front-in-a-few-days-with-event-storming/
"Alexander Graham Bell could have thought of DDD Event Storming when he said ""Before anything, preparation is the key to success.""",https://philippe.bourgau.net/how-to-prepare-a-ddd-big-picture-event-storming-workshop/
"Once everyone knows enough about the problem domain, they work better together. Learn ""How to prepare a #DDD Big Picture #EventStorming workshop"" https://bit.ly/2Am3sB7 #CollectiveIntelligence",https://philippe.bourgau.net/how-to-prepare-a-ddd-big-picture-event-storming-workshop/
"A Visual Agenda will reassure first time attendees of DDD Event Storming, which can be a rather chaotic workshop.",https://philippe.bourgau.net/how-to-prepare-the-room-for-a-ddd-big-picture-event-storming/
"I beg you to bring food to avoid #DeathByEventStorming #EventStorming. Read more down-to-earth tips in ""How to prepare the room for a #DDD Big Picture Event Storming"" https://bit.ly/2LicLnR",https://philippe.bourgau.net/how-to-prepare-the-room-for-a-ddd-big-picture-event-storming/
"At the end of the day, the success of an #EventStorming is all about how much participants want it! Learn how to run your own session in ""Detailed Agenda of a #DDD Big Picture Event Storming"" https://bit.ly/3blSWXf #softwaredevelopment ",https://philippe.bourgau.net/detailed-agenda-of-a-ddd-big-picture-event-storming-part-1/
"I've seen #EventStorming sessions drifting into technical discussions, this leads nowhere. Learn more about ""Detailed Agenda of a #DDD Big Picture Event Storming"" https://bit.ly/3blSWXf",https://philippe.bourgau.net/detailed-agenda-of-a-ddd-big-picture-event-storming-part-1/
"@Boldarecom Just read your #EventStorming guide https://bit.ly/3blSWXf. I like your idea to ask to read @ziobrando introductory post. Instead of introducing commands, I ask people to sort the events to get them to discuss and collaborate. Full story here https://bit.ly/3blSWXf",https://philippe.bourgau.net/detailed-agenda-of-a-ddd-big-picture-event-storming-part-1/
"@ziobrando 's trick: ignite the #EventStorming by sticking a prepared domain event on the design board. Here is my ""Detailed Agenda of a #DDD Big Picture Event Storming"" https://bit.ly/2YU7Q4u",https://philippe.bourgau.net/detailed-agenda-of-a-ddd-big-picture-event-storming-part-2/
"#EventStorming does its magic when people try to sort all their domain events. ""Detailed Agenda of a #DDD Big Picture Event Storming - Part 2"" https://bit.ly/2YU7Q4u",https://philippe.bourgau.net/detailed-agenda-of-a-ddd-big-picture-event-storming-part-2/
"By far the biggest outcome of #DDD Big Picture #EventStorming is a better shared understanding of the domain. Learn more in ""Detailed Agenda of a DDD Big Picture Event Storming"" https://bit.ly/35Nuw7I #Software #SoftwareArchitecture",https://philippe.bourgau.net/detailed-agenda-of-a-ddd-big-picture-event-storming-part-3/
"#EventStorming unlocks drafting an architecture, drawing teams, and a sustainable #refactoring path. Have a look at ""Detailed Agenda of a #DDD Big Picture Event Storming "" https://bit.ly/35Nuw7I",https://philippe.bourgau.net/detailed-agenda-of-a-ddd-big-picture-event-storming-part-3/
"I found that a double #pomodoro is the most productive and sustainable time schedule for a #DDD #EventStorming. This is 1 of ""4 tips that will make your DDD Big Picture Event Storming successful"" https://bit.ly/2WMG07j",https://philippe.bourgau.net/4-tips-that-will-make-your-ddd-big-picture-event-storming-successful/
"If you don't have real domain experts, assign business roles for #DDD #EventStorming. This is one of ""4 tips that will make your DDD Big Picture Event Storming successful"" https://bit.ly/2WMG07j #SoftwareEngineering ",https://philippe.bourgau.net/4-tips-that-will-make-your-ddd-big-picture-event-storming-successful/
"For legacy refactoring, run DDD Event Storming as if you were starting from scratch",https://philippe.bourgau.net/4-tips-that-will-make-your-ddd-big-picture-event-storming-successful/
"#BoundedContexts are the most important part of #DDD. Maintaining a strong decoupling between different functional areas makes #largeSystems more simple. Learn more in ""Drafting a Functional #Architecture Vision with #EventStorming and DDD"" https://bit.ly/2WNzgpQ",https://philippe.bourgau.net/drafting-a-functional-architecture-vision-with-ddd-event-storming-part-1/
"Wool, scissors and adhesive tape is all you need to draw functional areas on an DDD Event Storming design board.",https://philippe.bourgau.net/drafting-a-functional-architecture-vision-with-ddd-event-storming-part-1/
"#EventStorming and #DDD can help us to identify where to focus. More in ""Build or Buy? Identify your core #boundedContexts with Event Storming and DDD"" https://bit.ly/2YDrZvz",https://philippe.bourgau.net/build-or-buy-software-identify-your-core-functional-areas-with-event-storming-and-ddd/
"Use #EventStorming and #DDD to identify generic parts of your system. Then save time by replacing them with third parties. ""Build or Buy Software? Identify your core bounded contexts with Event Storming and DDD"" https://bit.ly/2YDrZvz",https://philippe.bourgau.net/build-or-buy-software-identify-your-core-functional-areas-with-event-storming-and-ddd/
"Upstream bounded contexts enjoy more focus, prioritization, quality and investment... at the cost of other contexts.",https://philippe.bourgau.net/check-that-core-areas-have-the-upper-hand-with-event-storming-and-ddd/
"Moving to an upstream team might be the quickest way to find a more #sustainablepace! Learn more about upstream #boundedcontext in ""Ensure core contexts have the upper hand with #EventStorming and #DDD"" https://bit.ly/2xR5ecj",https://philippe.bourgau.net/check-that-core-areas-have-the-upper-hand-with-event-storming-and-ddd/
"Focusing on #coredomain is the key to long term profitable and #sustainablepace. ""Focus on the Core with #EventStorming and #DDD Domain Relationships"" https://bit.ly/2WkyykQ",https://philippe.bourgau.net/focus-on-core-domain-with-relationships-from-ddd-and-event-storming/
"DDD can seem too abstract, use Event Storming to present it with storytelling.",https://philippe.bourgau.net/focus-on-core-domain-with-relationships-from-ddd-and-event-storming/
DDD is like the fight club. Don’t speak of DDD.,https://philippe.bourgau.net/focus-on-core-domain-with-relationships-from-ddd-and-event-storming-part-2/
"#ContextMapping with #DDD and #EventStorming helps to avoid a tangle of #mocks. ""Focus on the Core with Event Storming and DDD Domain Relationships"" https://bit.ly/3dvpqQ4",https://philippe.bourgau.net/focus-on-core-domain-with-relationships-from-ddd-and-event-storming-part-2/
The trick is to make things as simple as possible at the beginning while keeping the ability to refactor.,https://philippe.bourgau.net/how-to-use-event-storming-and-ddd-for-evolutionary-architecture/
"By documenting past decisions, #LivingDocumentation let us change the system later down the road. ""How to use #EventStorming and #DDD for Evolutionary #Architecture"" https://bit.ly/2WkfXFK",https://philippe.bourgau.net/how-to-use-event-storming-and-ddd-for-evolutionary-architecture/
"Late discoveries of #NFR problems leads to crunch hours and non #sustainablePace. Read about ""Using #EventStorming and #DDD to prototype #microservices and NFRs"" https://bit.ly/2Klzizz",https://philippe.bourgau.net/using-event-storming-and-ddd-to-prototype-microservices-and-nfrs-1/
"Use wool, scissors and scotch tape to materialize services on your #EventStorming board. https://bit.ly/2Klzizz #MicroServices",https://philippe.bourgau.net/using-event-storming-and-ddd-to-prototype-microservices-and-nfrs-1/
"Traditional architecture discussions typically span over months. In comparison, Event Storming is a short, but focused, time investment.",https://philippe.bourgau.net/using-event-storming-and-ddd-to-prototype-microservices-and-nfrs-2/
"Start a #codingDojo to transform #EventStorming and #DDD into #evolutionaryArchitecture and #emergentDesign. More details in ""Using Event Storming and DDD to prototype #microServices and NFRs"" https://bit.ly/2LfkEdw",https://philippe.bourgau.net/using-event-storming-and-ddd-to-prototype-microservices-and-nfrs-2/
"Full, drop-in, bing-bang #rewrite is often a poor strategy. It's very risky, late, and non-sustainable for the people. ""Rewrite vs Refactor? Get Insights from #EventStorming and #DDD"" #Refactoring https://bit.ly/2SRR7dZ",https://philippe.bourgau.net/rewrite-vs-refactor-get-insights-from-event-storming-and-ddd/
Refactor vs Rewrite? The best strategy is usually an hybrid between both.,https://philippe.bourgau.net/rewrite-vs-refactor-get-insights-from-event-storming-and-ddd/
"#EventStorming helps people to dynamically #selforganize into teams. More details in "" #FeatureTeams vs #ComponentTeams? Decide with Event Storming and #DDD"" https://bit.ly/35WPwJu",https://philippe.bourgau.net/feature-teams-vs-component-teams-decide-with-event-storming-and-ddd/
"Together, Event Storming and Conway's Law help long term refactoring.",https://philippe.bourgau.net/feature-teams-vs-component-teams-decide-with-event-storming-and-ddd/
Event Storming creates the shared knowledge on which to build much more.,https://philippe.bourgau.net/how-to-max-out-ddd-big-picture-event-storming-with-other-workshops/
"#EventStorming vs #StoryMapping? Do both! Learn ""How to max out #DDD Big Picture Event Storming with other Workshops"" https://bit.ly/35RJYj7",https://philippe.bourgau.net/how-to-max-out-ddd-big-picture-event-storming-with-other-workshops/
"Stop boring people out with theory of queues. Play the built-in quality #seriousGame for learning why software best practices matter! Learn to play in ""A serious game for learning ‘built-in quality at the source’"" https://bit.ly/3blT4pH #BuiltInQuality #gamification #CleanCode",https://philippe.bourgau.net/a-serious-game-for-learning-built-in-quality-at-the-source/
Build-in quality at the source to enable a sustainable pace and continuous refactoring.,https://philippe.bourgau.net/a-serious-game-for-learning-built-in-quality-at-the-source/
"We should refuse to start a development if we don't have a clear understanding of why we are requested to do it. More details in @jboccara's guest post ""You should refuse to develop what you don’t understand"" https://bit.ly/2SVwhur #badassDeveloper #SoftwareEngineer ",https://philippe.bourgau.net/you-should-refuse-to-develop-what-you-dont-understand/
Blocking coding a feature until we understand its implications can save time on another order of magnitude! @jboccara,https://philippe.bourgau.net/you-should-refuse-to-develop-what-you-dont-understand/
"We were able to close the same number of story points before and after pairing. Learn more in ""10 #PairProgramming Best Practices Questions & Answers"" https://bit.ly/2SRR8yz @ahmadatwi #agile #extremeProgramming",https://philippe.bourgau.net/10-pair-programming-questions-answers/
Keep an up-to-date shared TODO list of the story’s tasks when pairing @ahmadatwi,https://philippe.bourgau.net/10-pair-programming-questions-answers/
Its awkward vocabulary is one of the reasons why DDD is not more widly adapted,https://philippe.bourgau.net/how-to-use-event-storming-to-introduce-domain-driven-design/
"1st rule of #DDD: don't talk about DDD! Learn ""How to use #EventStorming to introduce Domain-Driven Design"", without naming it. https://bit.ly/3cqJrqU",https://philippe.bourgau.net/how-to-use-event-storming-to-introduce-domain-driven-design/
Use Functional Area instead of Bounded Context.,https://philippe.bourgau.net/how-to-use-event-storming-to-introduce-domain-driven-design/
Use Shared Vocabulary instead of Ubiquitous Language.,https://philippe.bourgau.net/how-to-use-event-storming-to-introduce-domain-driven-design/
Use radars and storytelling to introduce Bounded Context relationship patterns.,https://philippe.bourgau.net/how-to-use-event-storming-to-introduce-domain-driven-design/
"Thanks to post-its, Event Storming speeds up drafting an architecture from months to days !",https://philippe.bourgau.net/event-storming-lessons-from-post-it-haters/
"Don't forget that #EventStorming relies on a cross-disciplinary team and incremental #architecture! Learn more in ""Event Storming lessons from Post-It haters"" https://bit.ly/35OVZGd #DDD #DomainDrivenDesign #IncrementalArchitecture #EvolutionaryArchitecture #agile",https://philippe.bourgau.net/event-storming-lessons-from-post-it-haters/
Putting shared understanding as the main output of #EventStorming does not convince action-oriented people to join,https://philippe.bourgau.net/how-to-capture-the-outputs-of-an-event-storming-workshop/
"Capturing filtered and single focus views of the #EventStorming board makes the information more digestible and persistent. ""How to Capture the Outputs of an Event Storming Workshop?"" https://bit.ly/2WPxsN2 #DDD #SoftwareEngineering",https://philippe.bourgau.net/how-to-capture-the-outputs-of-an-event-storming-workshop/
"Do pattern matching on #EventStorming board to 'grep-out' focused views of takeaways of a session. More in ""5 Views to Capture the Outputs of an Event Storming workshop"" https://bit.ly/2WElANK #DDD #DomainDrivenDesign",https://philippe.bourgau.net/5-views-to-capture-the-outputs-of-an-event-storming-workshop/
Event Storming is a very effective way to build a DDD context map.,https://philippe.bourgau.net/5-views-to-capture-the-outputs-of-an-event-storming-workshop/
"I'll start my next #machineLearning project by an #EventStorming workshop. Read how I discovered ""The Similarities between Machine Learning and #DDD"" https://bit.ly/2LvOcE5",https://philippe.bourgau.net/the-similarities-between-machine-learning-and-ddd/
"Like DDD, Machine Learning relies on understanding the domain.",https://philippe.bourgau.net/the-similarities-between-machine-learning-and-ddd/
"There's surely a simple script you could write to smooth out the #codeReview process enough for it to stick! Read ""How we scripted everyone to code review in the team""  https://bit.ly/2WlpY5k #softwaredevelopment ",https://philippe.bourgau.net/how-we-scripted-everyone-to-code-review-in-the-team/
Losing time in code reviews made the team switch to pair programming.,https://philippe.bourgau.net/how-we-scripted-everyone-to-code-review-in-the-team/
"Remote or not, pair programming remains pair programming!",https://philippe.bourgau.net/7-remote-pair-programming-best-practices-q-and-a-part-1/
"When #remote #pairProgramming, use time difference at your advantage for #deliberatepractice. Here are ""7 Remote pair programming best practices Q&A - Part 1"" https://bit.ly/2WOMa79",https://philippe.bourgau.net/7-remote-pair-programming-best-practices-q-and-a-part-1/
"Throughout the years, I've written a few posts about #remoteWork. Here are ""7 Remote #pairProgramming best practices Q&A"". Hopefully, this can help developers who are thrown in #WFH. https://bit.ly/2WOMa79",https://philippe.bourgau.net/7-remote-pair-programming-best-practices-q-and-a-part-1/
"A Do It Yourself culture helps a lot to get #remote #pairProgramming working. Learn more tricks in ""7 Remote pair programming best practices Q&A - Part 2"" https://bit.ly/3dBBoYM",https://philippe.bourgau.net/7-remote-pair-programming-best-practices-q-and-a-part-2/
A time difference while remote pair programming is a perfect opportunity for learning and deliberate practice.,https://philippe.bourgau.net/7-remote-pair-programming-best-practices-q-and-a-part-2/
Hack your headset!,https://philippe.bourgau.net/7-remote-pair-programming-best-practices-q-and-a-part-2/
"Pulling the code regularly forces remote workers into social interactions. This is one of ""5 #XP practices that will make your remote team more effective"" https://bit.ly/3ciJCEN #RemoteWork",https://philippe.bourgau.net/5-xp-practices-that-will-make-your-remote-team-more-effective/
"When Coding by Refactoring, tests are always passing",https://philippe.bourgau.net/5-xp-practices-that-will-make-your-remote-team-more-effective/
Is TCR the future of remote teamwork?,https://philippe.bourgau.net/5-xp-practices-that-will-make-your-remote-team-more-effective/
"With pair programming, remote team members are never 'alone'.",https://philippe.bourgau.net/5-xp-practices-that-will-make-your-remote-team-more-effective/
"Did you know that #eXtremeProgramming can actually help you for remote programming in this crisis? Read ""5 XP practices that will make your remote team more effective"" https://bit.ly/3ciJCEN #remoteWork #XP",https://philippe.bourgau.net/5-xp-practices-that-will-make-your-remote-team-more-effective/
Full-time pair programming burns introverts out!,https://philippe.bourgau.net/how-to-use-mob-programming-at-the-rescue-of-pair-programming-burnout/
"#Remote #mobProgramming works surprisingly well! Let's see ""How to use Mob Programming at the rescue of #PairProgramming burnout"" https://bit.ly/2YR5GlV",https://philippe.bourgau.net/how-to-use-mob-programming-at-the-rescue-of-pair-programming-burnout/
"If you are interested in #slowWork, you should definitely have a look at #eXtremeProgramming. Listen to my @AgileAtelier podcast ""Is #XP the middle child of #Agile?"" https://bit.ly/3dxNa6g",https://philippe.bourgau.net/is-xp-the-middle-child-of-agile/
Event Storming builds on DDD which builds on eXtreme Programming to enable taking complex decisions,https://philippe.bourgau.net/is-xp-the-middle-child-of-agile/
Ever wondered how to mine your software project data ? These books are a good start,https://philippe.bourgau.net/5-books-about-data-driven-lean-software-development/
Speed up the build? or add this new feature? These books might give you an insight!,https://philippe.bourgau.net/5-books-about-data-driven-lean-software-development/
We need a Big O() notation for product backlog decisions!,https://philippe.bourgau.net/5-books-about-data-driven-lean-software-development/
"Lack of prioritization triggers a vicious circle of bloated organizations, late deliveries, and a non-sustainable pace. Is your organization ""Too busy to prioritize?"" https://bit.ly/2WFMghi #SustainablePace #ProductManagement #Agile #SoftwareEngineering ",https://philippe.bourgau.net/too-busy-to-prioritize/
Stop prioritizing to grow bloated organizations and hierarchies!,https://philippe.bourgau.net/too-busy-to-prioritize/
"#Scrum with #componentTeams pushes  organizations back in #Waterfall Agile, late deliveries and non-sustainable work. https://bit.ly/2WmUkVp #infographic",https://philippe.bourgau.net/scrum-with-component-teams-leads-to-waterfall-agile/
Big Picture Event Storming can help you to pick the right team organization,https://philippe.bourgau.net/scrum-with-component-teams-leads-to-waterfall-agile/
Continuous improvement and coaching can get your teams to reorganize step by step,https://philippe.bourgau.net/scrum-with-component-teams-leads-to-waterfall-agile/
"Developers, don't forget who has the #storyPoint printing press!
https://bit.ly/2yfTwYQ #Agile #PlanningPoker",https://philippe.bourgau.net/how-to-play-planning-poker-badass-mode/
"If we need predictions, #NoEstimates and Lean management tools will work better that story points and planning game",https://philippe.bourgau.net/how-to-play-planning-poker-badass-mode/
"Keep story points inside the team, and you'll have a lot more control over technical debt and refactoring",https://philippe.bourgau.net/how-to-play-planning-poker-badass-mode/
"Make the change easy, then make the change. @KentBeck",https://philippe.bourgau.net/does-programming-equal-refactoring/
"When all the team does continuous #refactoring, it creates a #sustainablePace, which dribbles down on all aspects of our lives.",https://philippe.bourgau.net/does-programming-equal-refactoring/
"""Dont' worry too much, it will work fine in the end..."" This tactic might work at school, but it is not going to work when programming!",https://philippe.bourgau.net/to-do-list-or-mind-map-for-programming/
"Maintaining a mind map of the work to do ensures everyone in the mob understands the why, what and how of the work. #mobprogramming",https://philippe.bourgau.net/to-do-list-or-mind-map-for-programming/
"Maintaining a TO DO list when programming improves collaboration, our decisions and our vision of what's left to do.",https://philippe.bourgau.net/to-do-list-or-mind-map-for-programming/
An online mind map or TODO list while remote pair or mob programming can make you a lot more effective. Learn how,https://philippe.bourgau.net/to-do-list-or-mind-map-for-programming/
"Models are always wrong. But they get us out of retoric, gut feeling, biases and into fact-based discussions!",https://philippe.bourgau.net/why-machine-learning-in-software-engineering-1-a-world-of-experts/
Our 'best-practices' are only the result of the experience of some people!,https://philippe.bourgau.net/why-machine-learning-in-software-engineering-1-a-world-of-experts/
"""Given a commit and a list of slow running end to end tests, which tests are most likely to fail?"" Isn't that an interesting AI challenge?",https://philippe.bourgau.net/why-machine-learning-in-software-engineering-2-an-experiment/
Analyzing test result confirmed that small commits pass the tests more often!,https://philippe.bourgau.net/why-machine-learning-in-software-engineering-2-an-experiment/
Analyzing test result confirmed that writing modular code passes the tests more often!,https://philippe.bourgau.net/why-machine-learning-in-software-engineering-2-an-experiment/
Analyzing test result confirmed that following the open/close principle passes the tests more often!,https://philippe.bourgau.net/why-machine-learning-in-software-engineering-2-an-experiment/
Data science for software testing is becoming a hot topic,https://philippe.bourgau.net/why-machine-learning-in-software-engineering-3-the-future/
A smart AI could record what happens on the IDE to provide working improvement ideas! Freeky or innevitable?,https://philippe.bourgau.net/why-machine-learning-in-software-engineering-3-the-future/
The best way to go remote is to jump in completely and become remote-first,https://philippe.bourgau.net/lets-give-remote-first-open-space-technology-un-conference-a-try/
Remote work is here to stay! It's time to be creative.,https://philippe.bourgau.net/lets-give-remote-first-open-space-technology-un-conference-a-try/
"Do you want to organize a remote un-conference, but don't know how to do? See how to organize a remote-first open-space technology un-conference.",https://philippe.bourgau.net/how-to-run-a-remote-first-open-space-technology-un-conference/
"You already using open-space technology, and your organization is moving to remote work? See how to organize a remote-first open-space technology un-conference.",https://philippe.bourgau.net/how-to-run-a-remote-first-open-space-technology-un-conference/
You want to use open-space technology to transform your remote organization. See how to organize a remote-first open-space technology un-conference.,https://philippe.bourgau.net/how-to-run-a-remote-first-open-space-technology-un-conference/
Are you struggling to find the right format to make a remote meeting self-organized? See how to organize a remote-first open-space technology un-conference.,https://philippe.bourgau.net/how-to-run-a-remote-first-open-space-technology-un-conference/
"@Work_at_Murex, we started a #RemoteWork #CommunityOfPractice to quickly improve how we work during this crisis. We had tried Remote #OpenSpaceTechnology unconference before. Learn ""How to run a Remote-First Open-Space Technology Un-Conference""  https://bit.ly/3ciJxkt",https://philippe.bourgau.net/how-to-run-a-remote-first-open-space-technology-un-conference/
"Big Picture Event Storming was about exploring Strategic Design, Design Level Event Storming is about tactical design inside a domain.",https://philippe.bourgau.net/why-should-we-use-design-level-event-storming-for-ddd/
Developers who attend the workshop should be able to start coding right after a Design Level Event Storming.,https://philippe.bourgau.net/why-should-we-use-design-level-event-storming-for-ddd/
Design Level Event Storming can also be a recurring workshop on a jelled product team,https://philippe.bourgau.net/detailed-agenda-for-a-ddd-design-level-event-storming-part-1/
It's very natural to do a Design Level Event Storming after a Big Picture Event Storming,https://philippe.bourgau.net/detailed-agenda-for-a-ddd-design-level-event-storming-part-1/
Design Level Event Storming is also a good fit for a team that is already building a DDD and event-based system,https://philippe.bourgau.net/detailed-agenda-for-a-ddd-design-level-event-storming-part-1/
Design-Level Event Storming is the perfect workshop to discuss UX of domain events,https://philippe.bourgau.net/detailed-agenda-for-a-ddd-design-level-event-storming-part-2/
Discussing what Aggregates will do is the key moment of Design-Level Event Storming,https://philippe.bourgau.net/detailed-agenda-for-a-ddd-design-level-event-storming-part-2/
Finding good names for Aggregates is the last thing we do in a Design-Level Event Storming,https://philippe.bourgau.net/detailed-agenda-for-a-ddd-design-level-event-storming-part-2/
Aggregates make it easy to draw subdomains.,https://philippe.bourgau.net/7-tactics-that-will-make-your-ddd-design-level-event-storming-pay-off/
You'll need even more infinite design space for Deesign-Level Event Storming ;-),https://philippe.bourgau.net/7-tactics-that-will-make-your-ddd-design-level-event-storming-pay-off/
The best way to get more feedback after a Design Level Event Storming is to give try to build the design!,https://philippe.bourgau.net/7-tactics-that-will-make-your-ddd-design-level-event-storming-pay-off/
Don't use Event Storming for up-front design!,https://philippe.bourgau.net/sustain-collective-intelligence-with-event-storming/
Regularly return to the Event Storming design board with more knowledge,https://philippe.bourgau.net/sustain-collective-intelligence-with-event-storming/
"Event Storming builds collective intelligence, work as a mob to keep it alive!",https://philippe.bourgau.net/sustain-collective-intelligence-with-event-storming/
"If you hear something like ""We just need to figure out how to cut the elephant""... Suggest an Event Storming!",https://philippe.bourgau.net/how-to-fight-priority-paralysis-with-event-storming-and-ddd/
"By getting people to know each other, Event Storming also improves collaboration *after* the workshop!",https://philippe.bourgau.net/how-to-fight-priority-paralysis-with-event-storming-and-ddd/
Give Event Storming participants dot stickers to negotiate the scope of next target,https://philippe.bourgau.net/how-to-fight-priority-paralysis-with-event-storming-and-ddd/
Don't waste your chances with not enough preparation!,https://philippe.bourgau.net/organization-refactoring-event-storming-and-ddd-injection-part-1/
Hijack a conversation with a domain expert into an example mapping.,https://philippe.bourgau.net/organization-refactoring-event-storming-and-ddd-injection-part-1/
Remember 1st rule of DDD: Don't speak of DDD. Wait for the good business challenge to suggest Event Storming.,https://philippe.bourgau.net/organization-refactoring-event-storming-and-ddd-injection-part-2/
Event Storming is viral. Yesterday's attendees are tomorrow's organizers :-),https://philippe.bourgau.net/organization-refactoring-event-storming-and-ddd-injection-part-2/
"Let's not talk about DDD, let's DO DDD instead",https://philippe.bourgau.net/first-rule-of-ddd-is-lets-not-talk-about-ddd/
Is facilitation a new aspect of the developer job?,https://philippe.bourgau.net/first-rule-of-ddd-is-lets-not-talk-about-ddd/
"In Legacy Code, spending 3 weeks to add a test when fixing the bug takes 1 hour is unjustifiable.",https://philippe.bourgau.net/make-testing-legacy-code-viral-mikado-method-and-test-data-builders/
Using mocks to speed up test data setup is an anti-pattern in legacy code too!,https://philippe.bourgau.net/make-testing-legacy-code-viral-mikado-method-and-test-data-builders/
"In Legacy Code, whenever you fix a bug, start a mikado graph to add a test around it.",https://philippe.bourgau.net/make-testing-legacy-code-viral-mikado-method-and-test-data-builders/
"In Legacy Code, whenever you fix a bug, start a mikado graph of test data builders to add a test around the bug.",https://philippe.bourgau.net/make-testing-legacy-code-viral-mikado-method-and-test-data-builders/
"Full time #PairProgramming within a team is slow but effective agile technical coaching. Read ""The story about how we do #AgileTechnicalCoaching"" https://bit.ly/2KXHnL5 #Agile #Craftsmanship #AgileCoaching",https://philippe.bourgau.net/the-story-about-how-we-do-agile-technical-coaching/
"Katas + Mobs is a time-efficient agile technical coaching scheme. Here is ""The story about how we do #AgileTechnicalCoaching"" https://bit.ly/2KXHnL5 #Agile #Craftsmanship #AgileCoaching #MobProgramming #CodeKata #CodingDojo",https://philippe.bourgau.net/the-story-about-how-we-do-agile-technical-coaching/
Mobbing teaches how to collaborate better,https://philippe.bourgau.net/the-story-about-how-we-do-agile-technical-coaching/
"Once developers get TDD and pairing, they get the agile mindset.",https://philippe.bourgau.net/the-story-about-how-we-do-agile-technical-coaching/
Push-coaching is like inflicting help. Forcing teams to get coached is a silly strategy.,https://philippe.bourgau.net/the-story-about-how-we-do-agile-technical-coaching/
We've compiled our katas into a kata repo to let teams practice without a coach. We're hoping to take the time to open source this repo at some point.,https://philippe.bourgau.net/the-story-about-how-we-do-agile-technical-coaching/
Asking for help is often seen as a weakness in our ego-driven industry…,https://philippe.bourgau.net/the-story-about-how-we-do-agile-technical-coaching/
Let's grow developers' leadership by involving experts in kata preparation.,https://philippe.bourgau.net/the-story-about-how-we-do-agile-technical-coaching/
How mob programming will make you quickly write team coding standards,https://philippe.bourgau.net/3-good-and-bad-ways-to-write-team-coding-standards-and-conventions/
Top mob programming benefit: agree on coding standards and conventions fast!,https://philippe.bourgau.net/3-good-and-bad-ways-to-write-team-coding-standards-and-conventions/
Use coding conventions as a way to inject mob programming!,https://philippe.bourgau.net/3-good-and-bad-ways-to-write-team-coding-standards-and-conventions/
"Learn how to use asynchronous #decisionmaking to agree on team #codingStandards when working remotely. Read more in ""3 Good and Bad Ways to Write Team Coding Standards and Conventions"" https://bit.ly/2x9A7s2 #remoteWork #WFH ",https://philippe.bourgau.net/3-good-and-bad-ways-to-write-team-coding-standards-and-conventions/
Team Coding Standards Anti-Pattern: Brainstorming,https://philippe.bourgau.net/3-good-and-bad-ways-to-write-team-coding-standards-and-conventions/
Team Coding Standards Best Practice: Mob sessions,https://philippe.bourgau.net/3-good-and-bad-ways-to-write-team-coding-standards-and-conventions/
Asynchronous Decision Making has Living Documentation built-in!,https://philippe.bourgau.net/3-good-and-bad-ways-to-write-team-coding-standards-and-conventions/
"As long as at least 1 person remembers the coding standard, it will stick in the mob!",https://philippe.bourgau.net/3-good-and-bad-ways-to-write-team-coding-standards-and-conventions/
Open-source alternatives for remote pair and mob programming are few but world-class!,https://philippe.bourgau.net/best-open-source-tools-for-remote-pair-programming/
"If your team is not using an IDE, or if you can be as effective without one, then TMux is the no-brainer solution for remote pair and mob programming",https://philippe.bourgau.net/best-open-source-tools-for-remote-pair-programming/
You can set up a world-class remote pairing and mobbing solution in 5 minutes with a git pull-push loop.,https://philippe.bourgau.net/best-open-source-tools-for-remote-pair-programming/
Wondering how to do remote pair or mob programming? Saros might be what you need. It's an open source collaborative code edition plugin for IntelliJ and Eclipse.,https://philippe.bourgau.net/best-open-source-tools-for-remote-pair-programming/
"If you cannot buy a tool for remote pair or mob programming, check these 3 world-class open-source alternatives.",https://philippe.bourgau.net/best-open-source-tools-for-remote-pair-programming/
Tip#1 from 21 More #EventStorming Tips: Distribute domain-specific learning material #DDD https://bit.ly/3fFMTjG,https://philippe.bourgau.net/21-more-event-storming-tips-part-1-understanding-and-rhythm/
Tip#2 from 21 More #EventStorming Tips: State the goal 'sharing over learning' #DDD https://bit.ly/3fFMTjG,https://philippe.bourgau.net/21-more-event-storming-tips-part-1-understanding-and-rhythm/
Tip#3 from 21 More #EventStorming Tips: Playing the silliest person in the room #DDD https://bit.ly/3fFMTjG,https://philippe.bourgau.net/21-more-event-storming-tips-part-1-understanding-and-rhythm/
Tip#4 from 21 More #EventStorming Tips: Ask a new-joiner to collect definitions #DDD https://bit.ly/3fFMTjG,https://philippe.bourgau.net/21-more-event-storming-tips-part-1-understanding-and-rhythm/
Tip#5 from 21 More #EventStorming Tips: Twice 2 hours per day #DDD https://bit.ly/3fFMTjG,https://philippe.bourgau.net/21-more-event-storming-tips-part-1-understanding-and-rhythm/
Tip#6 from 21 More #EventStorming Tips: Use breaks #DDD https://bit.ly/3fFMTjG,https://philippe.bourgau.net/21-more-event-storming-tips-part-1-understanding-and-rhythm/
Tip#7 from 21 More #EventStorming Tips: Adapt with ROTIs #DDD https://bit.ly/3fFMTjG,https://philippe.bourgau.net/21-more-event-storming-tips-part-1-understanding-and-rhythm/
Tip#8 from 21 More #EventStorming Tips: Re-narrate for new-joiners #DDD https://bit.ly/3fFMTjG,https://philippe.bourgau.net/21-more-event-storming-tips-part-1-understanding-and-rhythm/
Tip#9 from 21 More #EventStorming Tips: Leave with actions #DDD https://bit.ly/3fFMTjG,https://philippe.bourgau.net/21-more-event-storming-tips-part-1-understanding-and-rhythm/
Tip#10 from 21 More #EventStorming Tips: If things are slow to start #DDD https://bit.ly/2ztcZG1,https://philippe.bourgau.net/21-more-event-storming-tips-part-2-facilitation-and-existing-code/
Tip#11 from 21 More #EventStorming Tips: If there is a single discussion bottleneck #DDD https://bit.ly/2ztcZG1,https://philippe.bourgau.net/21-more-event-storming-tips-part-2-facilitation-and-existing-code/
Tip#12 from 21 More #EventStorming Tips: Post-it twist #DDD https://bit.ly/2ztcZG1,https://philippe.bourgau.net/21-more-event-storming-tips-part-2-facilitation-and-existing-code/
Tip#13 from 21 More #EventStorming Tips: Explicit decisions #DDD https://bit.ly/2ztcZG1,https://philippe.bourgau.net/21-more-event-storming-tips-part-2-facilitation-and-existing-code/
Tip#14 from 21 More #EventStorming Tips: Start with 30 minutes brief #DDD https://bit.ly/2ztcZG1,https://philippe.bourgau.net/21-more-event-storming-tips-part-2-facilitation-and-existing-code/
Tip#15 from 21 More #EventStorming Tips: Adapt the schedule even more! #DDD https://bit.ly/2ztcZG1,https://philippe.bourgau.net/21-more-event-storming-tips-part-2-facilitation-and-existing-code/
Tip#16 from 21 More #EventStorming Tips: Make stress explicit #DDD https://bit.ly/2ztcZG1,https://philippe.bourgau.net/21-more-event-storming-tips-part-2-facilitation-and-existing-code/
Tip#17 from 21 More #EventStorming Tips: Avoid adding special post-its #DDD https://bit.ly/3b0Z6f6,https://philippe.bourgau.net/21-more-event-storming-tips-part-3-anti-and-meta-patterns/
Tip#18 from 21 More #EventStorming Tips: Avoid #remote participant #DDD https://bit.ly/3b0Z6f6,https://philippe.bourgau.net/21-more-event-storming-tips-part-3-anti-and-meta-patterns/
Tip#19 from 21 More #EventStorming Tips: Avoid Big Design Up Front #DDD https://bit.ly/3b0Z6f6,https://philippe.bourgau.net/21-more-event-storming-tips-part-3-anti-and-meta-patterns/
Tip#20 from 21 More #EventStorming Tips: Create an Event Storming community of practice #DDD https://bit.ly/3b0Z6f6,https://philippe.bourgau.net/21-more-event-storming-tips-part-3-anti-and-meta-patterns/
Tip#21 from 21 More #EventStorming Tips: Ask Alberto! @ziobrando #DDD https://bit.ly/3b0Z6f6,https://philippe.bourgau.net/21-more-event-storming-tips-part-3-anti-and-meta-patterns/
