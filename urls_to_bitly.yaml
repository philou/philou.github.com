---
https://philippe.bourgau.net/21-more-event-storming-tips-part-3-anti-and-meta-patterns/: https://bit.ly/3b0Z6f6
https://philippe.bourgau.net/make-testing-legacy-code-viral-mikado-method-and-test-data-builders/: https://bit.ly/3dbvvBh
https://philippe.bourgau.net/the-story-about-how-we-do-agile-technical-coaching/: https://bit.ly/2KXHnL5
https://philippe.bourgau.net/3-good-and-bad-ways-to-write-team-coding-standards-and-conventions/: https://bit.ly/2x9A7s2
https://philippe.bourgau.net/best-open-source-tools-for-remote-pair-programming/: https://bit.ly/3aO6uLt
https://philippe.bourgau.net/there-can-be-only-one-css-stylesheet-per-medi/: https://bit.ly/3fgXb9J
https://philippe.bourgau.net/making-c-properties-first-class-objects/: https://bit.ly/2Wo4vYt
https://philippe.bourgau.net/75417332/: https://bit.ly/2SzGdcT
https://philippe.bourgau.net/how-to-test-a-class-using-an-implementation-h/: https://bit.ly/2YuFTjg
https://philippe.bourgau.net/a-nice-place-to-find-free-pictures-for-my-web/: https://bit.ly/2xC8RTy
https://philippe.bourgau.net/scaling-agile/: https://bit.ly/3diaPaT
https://philippe.bourgau.net/ruby-thirdparties-best-practices/: https://bit.ly/2WoDMeh
https://philippe.bourgau.net/hackers-et-peintres/: https://bit.ly/3de8xt5
https://philippe.bourgau.net/motivation-game-53790/: https://bit.ly/2KVIF9d
https://philippe.bourgau.net/the-holy-code-antipattern/: https://bit.ly/2VZ9MGY
https://philippe.bourgau.net/1-rule-for-monitoring-emails/: https://bit.ly/3dhe6qC
https://philippe.bourgau.net/does-programming-equal-refactoring/: https://bit.ly/3c4nWMt
https://philippe.bourgau.net/hitting-the-middle-ground-between-classicist-and-mockist-tdd/: https://bit.ly/2VZumXy
https://philippe.bourgau.net/my-new-gem-for-creating-rspec-proxies/: https://bit.ly/2WtOQXs
https://philippe.bourgau.net/trying-to-explain-monads-in-java/: https://bit.ly/2KUUe0w
https://philippe.bourgau.net/sprints-are-not-sprints/: https://bit.ly/2Wo4weZ
https://philippe.bourgau.net/my-humble-advices-about-how-to-write-maintainable-tests/: https://bit.ly/2YxwMP5
https://philippe.bourgau.net/programming-as-an-exponential-problem/: https://bit.ly/2VYCxU2
https://philippe.bourgau.net/harley-davidson-programming/: https://bit.ly/2zcXx0j
https://philippe.bourgau.net/auchandirect-scrapi-an-unofficial-api-ruby-gem/: https://bit.ly/2Syt6bI
https://philippe.bourgau.net/how-we-introduced-efficient-agile-retrospectives/: https://bit.ly/2zXk5ml
https://philippe.bourgau.net/refactoring-trick-to-insert-a-wrapper/: https://bit.ly/2KYffaG
https://philippe.bourgau.net/coding-as-a-living-can-be-dangerous-to-your-health/: https://bit.ly/35w6372
https://philippe.bourgau.net/cucumber-tricks-gem-my-favorite-gherkin-and-cucumber-tricks/: https://bit.ly/3fcriiB
https://philippe.bourgau.net/enabling-agile-practices-and-elephant-taming/: https://bit.ly/3aWKltO
https://philippe.bourgau.net/the-flow-book-summary-lean-software-development_part_1/: https://bit.ly/3fkb6LZ
https://philippe.bourgau.net/how-to-measure-your-speed-with-your-business-value-lean-software-development-part-3/: https://bit.ly/2WorAu6
https://philippe.bourgau.net/how-to-setup-a-weekly-fruit-basket-in-no-time/: https://bit.ly/3de8xJB
https://philippe.bourgau.net/performance-is-a-feature/: https://bit.ly/3c4nX2Z
https://philippe.bourgau.net/can-agile-teams-commit/: https://bit.ly/2W0h7pw
https://philippe.bourgau.net/from-zero-to-pair-programming-hero/: https://bit.ly/2z7I1mu
? https://philippe.bourgau.net/measure-the-business-value-of-your-spikes-and-take-high-payoff-risks-lean-software-development-part-4/
: https://bit.ly/3c4ayrA
https://philippe.bourgau.net/what-optimization-should-we-work-on-lean-software-development-part-5/: https://bit.ly/2WtORdY
https://philippe.bourgau.net/trellospectives-remote-retrospectives-with-trello/: https://bit.ly/2z6Qqqs
https://philippe.bourgau.net/real-programmers-have-todo-lists/: https://bit.ly/2WlbFwy
https://philippe.bourgau.net/the-agile-change-management-viral-hack/: https://bit.ly/3b0znU7
https://philippe.bourgau.net/www-dot-agileavatars-dot-com-order-customized-avatar-magnets/: https://bit.ly/3c3IDbs
https://philippe.bourgau.net/actors-and-green-threads-in-java-demystified/: https://bit.ly/3fcroGZ
https://philippe.bourgau.net/build-or-buy-software-identify-your-core-functional-areas-with-event-storming-and-ddd/: https://bit.ly/2YDrZvz
https://philippe.bourgau.net/mining-github-for-new-hires/: https://bit.ly/3d8ojWq
https://philippe.bourgau.net/a-plan-for-technical-debt-lean-software-development-part-7/: https://bit.ly/35FrrH3
https://philippe.bourgau.net/feedback-on-360-degrees-feedback-session/: https://bit.ly/2SyTIJS
https://philippe.bourgau.net/binary-hand-planning-poker/: https://bit.ly/3dhY0xk
https://philippe.bourgau.net/the-technical-debt-ponzi-scheme/: https://bit.ly/2YyvCD0
https://philippe.bourgau.net/how-i-set-up-a-trustico-rapid-ssl-certificate/: https://bit.ly/3b8vLzH
https://philippe.bourgau.net/great-developers-are-free/: https://bit.ly/2WrVPQC
https://philippe.bourgau.net/how-to-write-good-performance-stories/: https://bit.ly/2VZrD0r
https://philippe.bourgau.net/how-we-started-exploratory-testing/: https://bit.ly/3aZjMnF
https://philippe.bourgau.net/most-common-ways-to-speed-up-an-algorithm/: https://bit.ly/3b6fACB
https://philippe.bourgau.net/how-to-keep-programming-when-assigned-a-management-job/: https://bit.ly/2W0ZQN1
https://philippe.bourgau.net/recipes-for-an-agile-workspace/: https://bit.ly/35sEQ57
https://philippe.bourgau.net/how-long-can-your-inner-drive-last/: https://bit.ly/2WlbLEq
https://philippe.bourgau.net/are-most-agile-teams-doing-continuous-improvement-the-silly-way/: https://bit.ly/2W0z9rH
https://philippe.bourgau.net/stop-feeling-like-a-kid-everytime-you-ask-a-day-off/: https://bit.ly/3dcRxU1
https://philippe.bourgau.net/scrum-teams-do-not-need-a-scrum-master/: https://bit.ly/2VYCEiq
https://philippe.bourgau.net/lets-give-remote-first-open-space-technology-un-conference-a-try/: https://bit.ly/2Won3YH
https://philippe.bourgau.net/how-to-deal-with-the-incentive-system-in-an-agile-team/: https://bit.ly/2W0zb2N
https://philippe.bourgau.net/trello-templates-to-boost-your-remote-retrospectives/: https://bit.ly/3b1INi7
https://philippe.bourgau.net/pair-programming-from-pain-zone-to-skill-zone/: https://bit.ly/2RfNNbS
https://philippe.bourgau.net/real-developers-ship/: https://bit.ly/3fbaKr4
https://philippe.bourgau.net/software-is-like-writing-and-revising-a-giant-book/: https://bit.ly/2xwBHEG
https://philippe.bourgau.net/how-to-keep-up-with-software-technologies/: https://bit.ly/3aOxQkC
https://philippe.bourgau.net/the-size-of-code/: https://bit.ly/2YvkjLx
https://philippe.bourgau.net/is-there-any-room-for-the-not-passionate-developer/: https://bit.ly/3fgGKdq
https://philippe.bourgau.net/when-the-boy-scout-rule-fails/: https://bit.ly/2Yw3eBl
https://philippe.bourgau.net/how-to-grow-a-culture-book/: https://bit.ly/2SAXIJN
https://philippe.bourgau.net/kudo-boxes-for-kids/: https://bit.ly/3bXXEeO
https://philippe.bourgau.net/how-not-to-use-mocks-my-talk-at-paris-rb/: https://bit.ly/2xC8Z5u
https://philippe.bourgau.net/flavours-of-tdd/: https://bit.ly/2W2zSbS
https://philippe.bourgau.net/rexp-remote-extreme-programming/: https://bit.ly/3d6zuz0
https://philippe.bourgau.net/how-to-kill-scrum-zombies/: https://bit.ly/2xxMVZz
https://philippe.bourgau.net/overclocking-a-scrum-team-to-12/: https://bit.ly/3c3Jf0C
https://philippe.bourgau.net/how-i-fixed-the-unknown-language-pygments-error-in-octopress/: https://bit.ly/2SyTJgU
https://philippe.bourgau.net/verify-the-big-o-complexity-of-ruby-code-in-rspec/: https://bit.ly/3dcb9Yy
https://philippe.bourgau.net/a-plain-english-introduction-to-paxos-protocol/: https://bit.ly/2StFn1l
https://philippe.bourgau.net/developer-are-you-losing-your-rat-race/: https://bit.ly/2zcb7B2
https://philippe.bourgau.net/my-ultimate-jira-personal-kanban/: https://bit.ly/3dcashV
https://philippe.bourgau.net/almost-15-years-of-using-design-by-contract/: https://bit.ly/2KX70f9
https://philippe.bourgau.net/a-seamless-way-to-keep-track-of-technical-debt-in-your-source-code/: https://bit.ly/2yiuY1I
https://philippe.bourgau.net/how-to-get-your-team-to-do-code-reviews/: https://bit.ly/35tgS9P
https://philippe.bourgau.net/incremental-architecture-a-cure-against-architecture-astronauts/: https://bit.ly/3fkWnQY
https://philippe.bourgau.net/a-straightforward-way-to-scale-to-more-than-1-scrum-team/: https://bit.ly/2xxiiUd
https://philippe.bourgau.net/most-scrum-teams-are-not-agile/: https://bit.ly/2WtzYZa
https://philippe.bourgau.net/from-apprentice-to-master-how-to-learn-tdd-test-driven-development/: https://bit.ly/3c1Le5P
https://philippe.bourgau.net/20-bad-excuses-for-not-writing-unit-tests/: https://bit.ly/2WDL26n
https://philippe.bourgau.net/speed-up-the-tdd-feedback-loop-with-better-assertion-messages/: https://bit.ly/2xuUyjk
https://philippe.bourgau.net/side-projects-matter/: https://bit.ly/2Sy0hMQ
https://philippe.bourgau.net/13-tricks-for-successful-side-projects/: https://bit.ly/2L0dcmx
https://philippe.bourgau.net/dont-stick-to-tdds-red-green-refactor-loop-to-the-letter/: https://bit.ly/2zcXNfN
https://philippe.bourgau.net/5-spa-conference-takeaways-that-could-make-us-better-software-professionals/: https://bit.ly/2WqEcRu
https://philippe.bourgau.net/7-reasons-why-learning-refactoring-techniques-will-improve-your-life-as-a-software-engineer/: https://bit.ly/35wrULe
https://philippe.bourgau.net/how-to-start-learning-the-tao-of-incremental-code-refactoring-today/: https://bit.ly/2YAUr0T
https://philippe.bourgau.net/10-things-to-know-that-will-make-you-great-at-refactoring-legacy-code/: https://bit.ly/2WrqeP8
https://philippe.bourgau.net/forget-unit-tests/: https://bit.ly/2KZAau0
https://philippe.bourgau.net/5-remote-energizer-tips-that-will-make-your-remote-retrospectives-rock/: https://bit.ly/3c2RqKx
https://philippe.bourgau.net/extreme-extreme-programming-2017/: https://bit.ly/2WqEfwE
https://philippe.bourgau.net/throwing-code-away-frequently/: https://bit.ly/2WqEfNa
https://philippe.bourgau.net/how-we-used-the-improvement-kata-to-gain-25-percent-of-productivity-part-1/: https://bit.ly/3fDyxQO
https://philippe.bourgau.net/how-we-used-the-improvement-kata-to-gain-25-percent-of-productivity-part-2/: https://bit.ly/2LfTDqv
https://philippe.bourgau.net/how-we-used-the-improvement-kata-to-gain-25-percent-of-productivity-part-3/: https://bit.ly/3boSjMo
https://philippe.bourgau.net/how-we-used-the-improvement-kata-to-gain-25-percent-of-productivity-part-4/: https://bit.ly/3fBnl77
https://philippe.bourgau.net/how-we-used-the-improvement-kata-to-gain-25-percent-of-productivity-part-5/: https://bit.ly/2WPeWoh
https://philippe.bourgau.net/lessons-learned-from-running-our-first-improvement-kata/: https://bit.ly/3a6rTP1
https://philippe.bourgau.net/how-to-run-your-first-improvement-kata/: https://bit.ly/3dzmr9p
https://philippe.bourgau.net/what-rails-teaches-us-about-building-platforms-and-frameworks/: https://bit.ly/2WFLO2A
https://philippe.bourgau.net/mobbing-around-the-world-for-48h-dot-dot-dot-whos-in/: https://bit.ly/3bp2rVz
https://philippe.bourgau.net/are-software-developers-overworked-or-undecided/: https://bit.ly/2yLYHAc
https://philippe.bourgau.net/sustainable-productivity-in-extreme-programming/: https://bit.ly/2LhUkiZ
https://philippe.bourgau.net/why-and-how-to-start-a-number-zerobugs-policy-part-1/: https://bit.ly/3fDzKHE
https://philippe.bourgau.net/why-and-how-to-start-a-number-zerobugs-policy-part-2/: https://bit.ly/3blEUEX
https://philippe.bourgau.net/why-and-how-to-start-a-number-zerobugs-policy-part-3/: https://bit.ly/3anSpDE
https://philippe.bourgau.net/why-and-how-to-start-a-number-zerobugs-policy-part-4/: https://bit.ly/2SVNoMK
https://philippe.bourgau.net/why-agile-transformations-usually-dont-work-part-1-the-situation/: https://bit.ly/2LgaR72
https://philippe.bourgau.net/why-agile-transformations-usually-dont-work-part-2-the-problem/: https://bit.ly/2WJMAM1
https://philippe.bourgau.net/why-agile-transformations-usually-dont-work-part-3-what-to-do/: https://bit.ly/3co5gHP
https://philippe.bourgau.net/why-agile-transformations-usually-dont-work-part-4-transparency/: https://bit.ly/2WKmzfv
https://philippe.bourgau.net/reducing-the-risks-of-large-organization-changes-with-the-mikado-method-part-1/: https://bit.ly/3boJlia
https://philippe.bourgau.net/reducing-the-risks-of-large-organization-changes-with-the-mikado-method-part-2/: https://bit.ly/3fCIiyA
https://philippe.bourgau.net/reducing-the-risks-of-large-organization-changes-with-the-mikado-method-part-3/: https://bit.ly/2WKegQW
https://philippe.bourgau.net/why-you-should-start-a-team-coding-dojo-randori-right-now/: https://bit.ly/2WPxiVW
https://philippe.bourgau.net/how-to-start-a-team-coding-dojo-randori-today/: https://bit.ly/2SWN3cB
https://philippe.bourgau.net/coding-dojo-troubleshooting/: https://bit.ly/2xVTm96
https://philippe.bourgau.net/how-to-get-the-max-out-of-your-team-coding-dojo/: https://bit.ly/2LiC6Of
https://philippe.bourgau.net/how-to-learn-a-programming-language-in-just-20-hours/: https://bit.ly/2zg5guN
https://philippe.bourgau.net/why-20-hours-of-code-kata-are-so-effective-for-learning-new-languages/: https://bit.ly/35RJMQV
https://philippe.bourgau.net/frequently-asked-questions-about-the-20-hours-of-code-katas/: https://bit.ly/2SWUjoK
https://philippe.bourgau.net/careless-mocking-considered-harmful/: https://bit.ly/2WlgqHx
https://philippe.bourgau.net/how-immutable-value-objects-fight-mocks/: https://bit.ly/35MUkRB
https://philippe.bourgau.net/immutable-value-objects-vs-mocks-fizz-buzz/: https://bit.ly/3bozucr
https://philippe.bourgau.net/how-to-use-test-data-builders-to-avoid-mocks-and-keep-your-tests-clear/: https://bit.ly/2zpAG1Z
https://philippe.bourgau.net/how-custom-assertion-matchers-will-keep-mocks-away/: https://bit.ly/2WMhIdJ
https://philippe.bourgau.net/avoid-mocks-and-test-your-core-domain-faster-with-hexagonal-architecture/: https://bit.ly/2Wkym56
https://philippe.bourgau.net/get-rid-of-mocking-maintenance-with-full-fledged-in-memory-fakes/: https://bit.ly/2yt3gPk
https://philippe.bourgau.net/when-is-testing-using-mocks-still-a-good-idea/: https://bit.ly/2WJMDHH
https://philippe.bourgau.net/a-coding-dojo-exercises-plan-towards-refactoring-legacy-code/: https://bit.ly/2yLtZHr
https://philippe.bourgau.net/how-to-avoid-unnecessary-meetings-a-takeaway-from-devoxx-france-2018/: https://bit.ly/2Wngk29
https://philippe.bourgau.net/how-to-convince-your-business-to-sponsor-a-large-scale-refactoring/: https://bit.ly/3fEdrBJ
https://philippe.bourgau.net/why-we-need-badass-developers-to-perform-large-scale-refactorings/: https://bit.ly/35PU1Fr
https://philippe.bourgau.net/5-mistakes-badass-developers-never-do/: https://bit.ly/2WntjkI
https://philippe.bourgau.net/principles-that-will-make-you-become-a-badass-developer/: https://bit.ly/3bhRJjC
https://philippe.bourgau.net/incremental-software-development-techniques-for-large-scale-refactorings/: https://bit.ly/3dEWMMJ
? https://philippe.bourgau.net/incremental-software-development-strategies-for-large-scale-refactoring-number-1-constant-merciless-refactoring/
: https://bit.ly/2LhClZQ
https://philippe.bourgau.net/incremental-software-development-strategies-for-large-scale-refactoring-number-2-baby-steps/: https://bit.ly/2YTYgOQ
https://philippe.bourgau.net/incremental-software-development-strategies-for-large-scale-refactoring-number-3-manage-it/: https://bit.ly/2WkfLX2
? https://philippe.bourgau.net/incremental-software-development-strategies-for-large-scale-refactoring-number-4-a-pattern-language/
: https://bit.ly/3bmidAs
https://philippe.bourgau.net/presenting-a-large-scale-refactoring-as-a-business-opportunity/: https://bit.ly/3dDaj7c
https://philippe.bourgau.net/effective-warning-signals-to-get-sponsorship-for-a-large-scale-refactoring/: https://bit.ly/2xSs2IR
https://philippe.bourgau.net/making-the-business-case-for-a-large-scale-refactoring-part-1/: https://bit.ly/3cpjcRF
https://philippe.bourgau.net/become-a-business-partner-and-stop-begging-for-refactoring/: https://bit.ly/3ctIqPa
https://philippe.bourgau.net/how-to-maintain-a-business-partnership-about-refactoring/: https://bit.ly/2zwqvZy
https://philippe.bourgau.net/how-we-increased-productivity-by-25-with-a-fruit-basket-at-work/: https://bit.ly/3conWHs
https://philippe.bourgau.net/its-time-to-flip-your-kanban-board-setup/: https://bit.ly/35PZH2g
https://philippe.bourgau.net/vertical-kanban-board-setup/: https://bit.ly/3fDyS62
https://philippe.bourgau.net/misadventures-with-big-design-up-front/: https://bit.ly/2zr8dIX
https://philippe.bourgau.net/how-to-squash-big-design-up-front-in-a-few-days-with-event-storming/: https://bit.ly/2WkfNhC
https://philippe.bourgau.net/how-to-prepare-a-ddd-big-picture-event-storming-workshop/: https://bit.ly/2Am3sB7
https://philippe.bourgau.net/how-to-prepare-the-room-for-a-ddd-big-picture-event-storming/: https://bit.ly/2LicLnR
https://philippe.bourgau.net/detailed-agenda-of-a-ddd-big-picture-event-storming-part-1/: https://bit.ly/3blSWXf
https://philippe.bourgau.net/detailed-agenda-of-a-ddd-big-picture-event-storming-part-2/: https://bit.ly/2YU7Q4u
https://philippe.bourgau.net/detailed-agenda-of-a-ddd-big-picture-event-storming-part-3/: https://bit.ly/35Nuw7I
https://philippe.bourgau.net/4-tips-that-will-make-your-ddd-big-picture-event-storming-successful/: https://bit.ly/2WMG07j
https://philippe.bourgau.net/drafting-a-functional-architecture-vision-with-ddd-event-storming-part-1/: https://bit.ly/2WNzgpQ
https://philippe.bourgau.net/check-that-core-areas-have-the-upper-hand-with-event-storming-and-ddd/: https://bit.ly/2xR5ecj
https://philippe.bourgau.net/focus-on-core-domain-with-relationships-from-ddd-and-event-storming/: https://bit.ly/2WkyykQ
https://philippe.bourgau.net/focus-on-core-domain-with-relationships-from-ddd-and-event-storming-part-2/: https://bit.ly/3dvpqQ4
https://philippe.bourgau.net/how-to-use-event-storming-and-ddd-for-evolutionary-architecture/: https://bit.ly/2WkfXFK
https://philippe.bourgau.net/using-event-storming-and-ddd-to-prototype-microservices-and-nfrs-1/: https://bit.ly/2Klzizz
https://philippe.bourgau.net/using-event-storming-and-ddd-to-prototype-microservices-and-nfrs-2/: https://bit.ly/2LfkEdw
https://philippe.bourgau.net/rewrite-vs-refactor-get-insights-from-event-storming-and-ddd/: https://bit.ly/2SRR7dZ
https://philippe.bourgau.net/feature-teams-vs-component-teams-decide-with-event-storming-and-ddd/: https://bit.ly/35WPwJu
https://philippe.bourgau.net/how-to-max-out-ddd-big-picture-event-storming-with-other-workshops/: https://bit.ly/35RJYj7
https://philippe.bourgau.net/a-serious-game-for-learning-built-in-quality-at-the-source/: https://bit.ly/3blT4pH
https://philippe.bourgau.net/you-should-refuse-to-develop-what-you-dont-understand/: https://bit.ly/2SVwhur
https://philippe.bourgau.net/10-pair-programming-questions-answers/: https://bit.ly/2SRR8yz
https://philippe.bourgau.net/how-to-use-event-storming-to-introduce-domain-driven-design/: https://bit.ly/3cqJrqU
https://philippe.bourgau.net/event-storming-lessons-from-post-it-haters/: https://bit.ly/35OVZGd
https://philippe.bourgau.net/how-to-capture-the-outputs-of-an-event-storming-workshop/: https://bit.ly/2WPxsN2
https://philippe.bourgau.net/5-views-to-capture-the-outputs-of-an-event-storming-workshop/: https://bit.ly/2WElANK
https://philippe.bourgau.net/the-similarities-between-machine-learning-and-ddd/: https://bit.ly/2LvOcE5
https://philippe.bourgau.net/how-we-scripted-everyone-to-code-review-in-the-team/: https://bit.ly/2WlpY5k
https://philippe.bourgau.net/7-remote-pair-programming-best-practices-q-and-a-part-1/: https://bit.ly/2WOMa79
https://philippe.bourgau.net/7-remote-pair-programming-best-practices-q-and-a-part-2/: https://bit.ly/3dBBoYM
https://philippe.bourgau.net/5-xp-practices-that-will-make-your-remote-team-more-effective/: https://bit.ly/3ciJCEN
https://philippe.bourgau.net/how-to-use-mob-programming-at-the-rescue-of-pair-programming-burnout/: https://bit.ly/2YR5GlV
https://philippe.bourgau.net/is-xp-the-middle-child-of-agile/: https://bit.ly/3dxNa6g
https://philippe.bourgau.net/5-books-about-data-driven-lean-software-development/: https://bit.ly/3boSJCs
https://philippe.bourgau.net/too-busy-to-prioritize/: https://bit.ly/2WFMghi
https://philippe.bourgau.net/scrum-with-component-teams-leads-to-waterfall-agile/: https://bit.ly/2WmUkVp
https://philippe.bourgau.net/how-to-play-planning-poker-badass-mode/: https://bit.ly/2yfTwYQ
https://philippe.bourgau.net/to-do-list-or-mind-map-for-programming/: https://bit.ly/2RhwFTj
https://philippe.bourgau.net/why-machine-learning-in-software-engineering-1-a-world-of-experts/: https://bit.ly/2WngEOp
https://philippe.bourgau.net/why-machine-learning-in-software-engineering-2-an-experiment/: https://bit.ly/2WFMh4Q
https://philippe.bourgau.net/why-machine-learning-in-software-engineering-3-the-future/: https://bit.ly/2SUWn0E
https://philippe.bourgau.net/how-to-run-a-remote-first-open-space-technology-un-conference/: https://bit.ly/3ciJxkt
https://philippe.bourgau.net/why-should-we-use-design-level-event-storming-for-ddd/: https://bit.ly/2WIWBZX
https://philippe.bourgau.net/detailed-agenda-for-a-ddd-design-level-event-storming-part-1/: https://bit.ly/2WKesQf
https://philippe.bourgau.net/detailed-agenda-for-a-ddd-design-level-event-storming-part-2/: https://bit.ly/35RF8Cs
https://philippe.bourgau.net/7-tactics-that-will-make-your-ddd-design-level-event-storming-pay-off/: https://bit.ly/2AgA5jn
https://philippe.bourgau.net/sustain-collective-intelligence-with-event-storming/: https://bit.ly/2LkmuK8
https://philippe.bourgau.net/how-to-fight-priority-paralysis-with-event-storming-and-ddd/: https://bit.ly/35MLGm6
https://philippe.bourgau.net/organization-refactoring-event-storming-and-ddd-injection-part-1/: https://bit.ly/2LjnP3Y
https://philippe.bourgau.net/organization-refactoring-event-storming-and-ddd-injection-part-2/: https://bit.ly/3blFnqH
https://philippe.bourgau.net/first-rule-of-ddd-is-lets-not-talk-about-ddd/: https://bit.ly/2LhCOv4
https://philippe.bourgau.net/21-more-event-storming-tips-part-1-understanding-and-rhythm/: https://bit.ly/3fFMTjG
https://philippe.bourgau.net/21-more-event-storming-tips-part-2-facilitation-and-existing-code/: https://bit.ly/2ztcZG1
